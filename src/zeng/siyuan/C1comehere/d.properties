#Thu Mar 09 02:41:43 PST 2017
199=devcenter 
198=bi exmor driver front camera
197=devcenter 
196=devcenter 
195=devcenter
194=http\://api.ning.com/files/8W5ARlmXvRn-q7LvrVh1ohMnUTttoAFIFGYK1XYL1SaQ8zEXEzBQZ4wWfvf5M3K8eaC5nFp-0IJ*zSDEnnY1GdscEVGUlErQ/BIGDATAPOSTER.pdf
193=https\://www.bing.com/images/search?q\=big+data+solutions&view\=detailv2&&id\=674D6133D2C97CA1CF5405BBAE336E17F593005B&selectedIndex\=43&ccid\=A3xa%2fRnm&simid\=608024532655998823&thid\=OIP.M037c5afd19e677283673bd583ee8d027o0&ajaxhist\=0
192=devcenter 
191=http\://www.softwaretestinghelp.com/loadrunner-interview-questions-and-best-answers/
190=http\://www.careerride.com/performance-testing-interview-questions.aspx
189=https\://intellipaat.com/interview-question/apache-storm-interview-questions/
188=https\://www.bing.com/images/search?q\=mongodb+vs+cassandra+vs+hbase&view\=detailv2&&id\=D833DC96A50702939565001DD5140D6A95232111&selectedIndex\=31&ccid\=z1jrAdhA&simid\=608018506817408020&thid\=OIP.Mcf58eb01d8408f0b684be0ed33356d0fo0&ajaxhist\=0
187=https\://www.bing.com/images/search?q\=mongodb+vs+cassandra+vs+hbase&view\=detailv2&id\=9111D15699865D58061F3FC111F058937F04B898&selectedindex\=8&ccid\=YR73nUs6&simid\=608020714423845019&thid\=OIP.M611ef79d4b3a07cea7096d96095afb28o0&mode\=overlay&first\=1
186=https\://www.bing.com/images/search?q\=mongodb+vs+hadoop&view\=detailv2&&id\=6520F5C0E37F5D14F36F1321EF4036252A403062&selectedIndex\=1&ccid\=woLslzu9&simid\=608018785994605987&thid\=OIP.Mc282ec973bbda75beca5c74afbd92873o0&ajaxhist\=0
185=http\://www.sanfoundry.com/mongodb-questions-answers-sharding-concepts/
184=https\://docs.mongodb.com/manual/reference/glossary/
183=http\://www.short-funny.com/funniest-jokes-2.php
182=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterElementsBIG.jpg
181=\rmyown carerer\n Dufgt \r\n\r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n2) Do you know any big gossips?\r\n
180=https\://docs.mongodb.com/manual/reference/glossary/
179=https\://docs.mongodb.com/manual/reference/glossary/
178=https\://docs.mongodb.com/manual/reference/glossary/
177=sd sherd
176=sd shard
175=mongodb starting with\=https\://code.tutsplus.com/tutorials/getting-started-with-mongodb-part-1--net-22879
174=bi terminal for windows
173=mongodb tutorial\=http\://www.hongkiat.com/blog/webdev-with-mongodb-part1/
172=c\:
171=bi mongodb beiginner tutorial
170=bi mongodb beiginner tutorial\n
169=http\://javarevisited.blogspot.com/2011/09/swing-interview-questions-answers-in.html
168=https\://www.frontendjournal.com/most-common-technical-interview-question-for-frontend-developers/
167=https\://www.toptal.com/web/interview-questions
166=https\://www.tutorialspoint.com/software_engineering/software_engineering_interview_questions.htm
165=http\://javarevisited.blogspot.com/2012/06/20-design-pattern-and-software-design.html
164=http\://noop.nl/2009/01/100-interview-questions-for-software-developers.html
163=https\://www.tutorialspoint.com/design_pattern/design_pattern_interview_questions.htm
162=http\://www.journaldev.com/3633/hibernate-interview-questions-and-answers
161=https\://www.tutorialspoint.com/spring/spring_interview_questions.htm
160=https\://www.tutorialspoint.com/maven/maven_interview_questions.htm
159=http\://interviewquestionsanswerspdf.com/2014/04/data-mining-interview-questions-and-answers/
158=http\://www.testingbrain.com/interview/oracle-interview-questions.html
157=http\://javarevisited.blogspot.com/2011/09/swing-interview-questions-answers-in.html
156=https\://www.tutorialspoint.com/restful/restful_interview_questions.htm
155=https\://www.codementor.io/reactjs/tutorial/5-essential-reactjs-interview-questions
154=http\://career.guru99.com/top-25-interview-questions-on-scala/
153=https\://blog.risingstack.com/node-js-interview-questions/
152=https\://www.codementor.io/angularjs/tutorial/angularjs-interview-questions-sample-answers
151=https\://www.tutorialspoint.com/java8/java8_interview_questions.htm
150=http\://www.edureka.co/blog/interview-questions/top-apache-spark-interview-questions-2016/
149=https\://intellipaat.com/interview-question/apache-storm-interview-questions/
148=http\://www.edureka.co/blog/interview-questions/top-apache-kafka-interview-questions-for-beginners/
147=https\://intellipaat.com/interview-question/cassandra-interview-questions/
146=http\://r.search.yahoo.com/_ylt\=AwrT6VwVBEpYv4AAXBwnnIlQ;_ylu\=X3oDMTByb2lvbXVuBGNvbG8DZ3ExBHBvcwMxBHZ0aWQDBHNlYwNzcg--/RV\=2/RE\=1481274518/RO\=10/RU\=https%3a%2f%2fintellipaat.com%2finterview-question%2fcassandra-interview-questions%2f/RK\=0/RS\=jwOCyvhNihd.34YaZAGf1xeJ2dM-
145=https\://www.tutorialspoint.com/mongodb/mongodb_interview_questions.htm
144=music
143=abuizeng
142=abuizeng
141=abuizeng
140=abuizeng
139=bi NoSuchMethodError\: org.apache.http.impl.conn.CPool.setValidateAfterInactivity
138=bi NoSuchMethodError\: org.apache.http.impl.conn.CPool.setValidateAfterInactivity
137=abuizeng
136=bi java.lang.NoSuchFieldError\: INSTANCE
135=abuizeng
134=abuizeng
133=abuizeng
132=abuizeng
131=\rno\n Dufgt \r\n\r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n1) What was the last picture you took with your phone?\r\n
130=abuizeng
129=abuizeng
128=abuizeng
127=abuizeng
126=abuizeng
125=abuizeng
124=abuizeng
123=abuizeng
122=abuizeng
121=abuizeng
120=abuizeng
119=abuizeng
118=abuizeng
117=zengb45
116=bi intellj multiple caret\n
115=conversation between you and me possiblitiy and abetween you ane me 
114=possibilities becwtween you and me
113=how to be the beset praogrammer in the world
112=why do they hodl these because they want ot me to behave like that this is the session to be a this person
111=n o strings attached and what it means to be together
110=hold yout thought and focus on noe only focus on the things
109=hold yout thought and focus on noe only focus on the things
108=music
107=music
106=\twhat is the feeing and a idea hit me and it i sso hot and i know that iwt i s
105=ow to category things and give them a thing all teoghter 
104=what is the idea of a idea and how to aoociating eotehter with theverything and even one sinmple idea how does it compass all thet hitng s in the worl and all the thinking
103=computing
102=it is all about ht time and location and another parameter witho whom
101=i willl last everything only thine thing that i can' t foreget and all the test na dlife will be lost and gonea
100=bi What is a Resource in REST?\r\n\r\n\r\n
2499=k
2498=https\://careercup.com/question?id\=5636722718146560
2497=http\://javahungry.blogspot.com/2014/12/5-ways-to-reverse-string-in-java-with-example.html
2496=https\://careercup.com/question?id\=5725311921553408
2495=k
2494=k
2493=https\://www.amazon.jobs/principles
2492=What would an API look like for the interactions between a plane and air traffic control.  
2491=https\://careercup.com/question?id\=5726490420314112
2490=https\://careercup.com/question?id\=5655380106412032
2489=http\://www.programcreek.com/2014/02/leetcode-intersection-of-two-linked-lists-java/
2488=http\://www.programcreek.com/2015/07/leetcode-find-k-pairs-with-smallest-sums-java/
2487=http\://www.programcreek.com/2015/07/leetcode-find-k-pairs-with-smallest-sums-java/
2486=http\://www.programcreek.com/2014/03/leetcode-word-break-ii-java/
2485=http\://www.programcreek.com/2012/12/leetcode-solution-word-break/
2484=http\://bangbingsyb.blogspot.com/2014/11/leetcode-word-break-i-ii.html
1399=l\nhttps\://www.tutorialspoint.com/apache_kafka/apache_kafka_integration_storm.htm
2483=https\://www.hiredintech.com/system-design/the-system-design-process/
1398=l\nhttp\://www.concretepage.com/java/jdk-8/java-8-completablefuture-example
2482=http\://www.programcreek.com/2014/07/leetcode-lowest-common-ancestor-of-a-binary-tree-java/
1397=l\nhttp\://bjorn.tipling.com/how-to-make-an-intellij-idea-plugin-in-30-minutes
2481=http\://joycelearning.blogspot.com/2013/10/java-leetcode-maximum-depth-of-binary.html
1396=l\nhttp\://bjorn.tipling.com/how-to-make-an-intellij-idea-plugin-in-30-minutes
2480=http\://joycelearning.blogspot.com/2013/10/java-leetcode-maximum-depth-of-binary.html
1395=http\://www.tutorialspoint.com/cassandra/cassandra_data_model.htm
1394=l\nhttp\://www.buggybread.com/2014/05/interview-questions-and-answers-on-maven.html
1393=ll\nhttps\://www.infoq.com/articles/java-8-vs-scala/
1392=https\://www.tutorialspoint.com/restful/restful_methods.htm
1391=how to read
1390=sd wallflower
799=45\nhttps\://www.tutorialspoint.com/nodejs/nodejs_repl_terminal.htm
798=60\nhttp\://tutorials.jenkov.com/software-architecture/load-balancing.html
2479=http\://stackoverflow.com/questions/764933/amazon-interview-question-design-an-oo-parking-lot
797=60\nhttp\://tutorials.jenkov.com/software-architecture/caching-techniques.html
2478=http\://stackoverflow.com/questions/5393919/whats-the-most-object-oriented-way-to-design-an-address-book
796=RSS Feed
2477=http\://stackoverflow.com/questions/9597188/the-most-efficient-way-to-test-two-binary-trees-for-equality
795=l\nhttps\://www.tutorialspoint.com/hibernate/hibernate_sessions.htm
2476=k
794=https\://www.tutorialspoint.com/nodejs/nodejs_callbacks_concept.htm
2475=http\://stackoverflow.com/questions/764933/amazon-interview-question-design-an-oo-parking-lot
793=http\://www.w3schools.com/jquery/jquery_events.asp
2474=http\://stackoverflow.com/questions/764933/amazon-interview-question-design-an-oo-parking-lot
792=
1389=l\nhttps\://www.dynatrace.com/blog/how-to-identify-a-java-memory-leak/
2473=http\://www.programcreek.com/2013/01/leetcode-convert-sorted-array-to-binary-search-tree-java/
791=sprng 3 vs spring 4
1388=l\nhttps\://developers.redhat.com/blog/2014/08/14/find-fix-memory-leaks-java-application/
2472=https\://careercup.com/question?id\=5678573483458560
790=When do you use polymorphism and when do you use delegates?
1387=http\://www.orafaq.com/wiki/Tablespace
2471=http\://stackoverflow.com/questions/5393919/whats-the-most-object-oriented-way-to-design-an-address-book
1386=sd luminary
2470=http\://stackoverflow.com/questions/493276/modelling-an-elevator-using-object-oriented-analysis-and-design
1385=l\nhttp\://medicine.utah.edu/learningresources/tools/reading.php
1384=https\://www.tutorialspoint.com/maven/maven_plugins.htm
1383=https\://www.safaribooksonline.com/library/view/jenkins-the-definitive/9781449311155/ch08s06.html
1382=l\nhttp\://lifehacker.com/264490/how-to-build-a-firefox-extension
1381=https\://wiki.jenkins-ci.org/display/JENKINS/Radiator+View+Plugin
1380=l\nhttp\://www.howtolearn.com/2012/08/different-reading-techniques-and-when-to-use-them/
789=sd dormant
788=sd arse
2469=http\://www.programcreek.com/2012/12/leetcode-solution-of-two-sum-in-java/
787=1\nhello
2468=amazon interview\=https\://www.youtube.com/watch?v\=Jp9vkwveYf4&index\=2&list\=PLhr1KZpdzukcprFOZTOaHbA_Mni1gM5oe
786=1\nhello
2467=heap
785=devcenter 
2466=data structure straversal
784=java programmer interview
2465=java sorting algotrithem s
783=120\nhttp\://stackoverflow.com/questions/2841212/what-is-the-difference-between-spring-struts-hibernate-javaserver-faces-tape
2464=abuizeng
782=l\nhttps\://www.tutorialspoint.com/struts_2/struts_interview_questions.htm
1379=l\nhttp\://oregonstate.edu/instruct/ger341/reading2.htm
2463=abuizeng
781=http\://www.w3schools.com/jquery/jquery_selectors.asp
1378=http\://stackoverflow.com/questions/15701263/advantages-of-using-cql-over-thrift
2462=lowest common ancestor of a binary tree
780=120\nhttps\://www.tutorialspoint.com/maven/maven_deployment_automation.htm
1377=l\nhttp\://www.wikihow.com/Read-a-Book
2461=leadership principles
1376=scala vs java
2460=url shortener java
1375=333\nhttps\://manning-content.s3.amazonaws.com/download/5/b15473f-9d74-4b38-98b9-0e2a63986ae0/Java8iA_CH04.pdf
1374=333\n
1373=222\nhttps\://manning-content.s3.amazonaws.com/download/5/b15473f-9d74-4b38-98b9-0e2a63986ae0/Java8iA_CH04.pdf
1372=111\nhttps\://manning-content.s3.amazonaws.com/download/5/b15473f-9d74-4b38-98b9-0e2a63986ae0/Java8iA_CH04.pdf
1371=ll\nhttps\://manning-content.s3.amazonaws.com/download/5/b15473f-9d74-4b38-98b9-0e2a63986ae0/Java8iA_CH04.pdf
1370=l\nhttps\://manning-content.s3.amazonaws.com/download/5/b15473f-9d74-4b38-98b9-0e2a63986ae0/Java8iA_CH04.pdf
779=60\nhttps\://www.tutorialspoint.com/hibernate/hibernate_batch_processing.htm
778=sd hallucinogenic
2459=intersection of 2 linked list
777=sd latent
2458=something ineteresting
776=120\nhttp\://tutorials.jenkov.com/software-architecture/scalable-architectures.html
2457=what if i want to 
775=120\nhttp\://tutorials.jenkov.com/software-architecture/event-driven-architecture.html
2456=how to write implement hashmap
774=45\nhttps\://www.tutorialspoint.com/spring/event_handling_in_spring.htm
2455=memory leak interview quesitons
773=45\nhttp\://www.journaldev.com/2905/hibernate-tomcat-jndi-datasource-example-tutorial
2454=garbage collector interview questions
772=l\nhttp\://www.javatpoint.com/hibernate-interview-questions
1369=https\://www.tutorialspoint.com/maven/maven_project_templates.htm
2453=gabage collector oracle 
771=60\nhttps\://www.tutorialspoint.com/spring/custom_events_in_spring.htm
1368=java application memory leak
2452=java spiral matrix
770=120\nhttps\://www.tutorialspoint.com/struts_2/struts_exception_handling.htm
1367=java application memory overflow
2451=java how to check whether a tree is symmetric tree
1366=https\://www.tutorialspoint.com/design_pattern/visitor_pattern.htm
2450=siyuanzeng
1365=how i met you mother\=https\://123movies.is/film/how-i-met-your-mother-season-2-1679/watching.html
1364=whenever you are reading
1363=reading tips
1362=reading techniques
1361=oracle sequence
1360=oracle tablespaces
769=60\nhttps\://www.tutorialspoint.com/hibernate/hibernate_configuration.htm
768=180\nhttp\://tutorials.jenkov.com/software-architecture/soa.html
2449=what is enlightement
767=https\://www.tutorialspoint.com/spring/event_handling_in_spring.htm
2448=what is enlightnend
766=https\://www.tutorialspoint.com/spring/spring_java_based_configuration.htm
2447=enlightened 
765=https\://www.tutorialspoint.com/struts_2/struts_themes_templates.htm
2446=why is a brithen up
764=https\://www.tutorialspoint.com/spring/spring_interview_questions.htm
2445=what else did i say what elase emunaltion 
763=https\://www.tutorialspoint.com/nodejs/nodejs_express_framework.htm
2444=did i say that 
762=https\://www.tutorialspoint.com/hibernate/hibernate_configuration.htm
1359=333\nhttp\://lucidability.com/dreams-vs-reality/
2443=what happened is the connector and the action term
761=http\://www.w3schools.com/jquery/jquery_syntax.asp
1358=l\nhttps\://answers.yahoo.com/question/index?qid\=20100414155457AAqllPn
2442=i lose an idea because i didn't write it down the game time \nbecasue i was distractda dn engaged in something else \nbecause it is imporssible to think mulitple things at the same time 
760=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterFransGuidelinesBIG.jpg
1357=333\nhttp\://www.dreamviews.com/general-dream-discussion/59558-real-world-vs-dream-world.html
2441=entails \ndifferent things connecto s cotogether \nhow do there t onnenct \nthe connector 
1356=333\nhttp\://www.dreamviews.com/general-dream-discussion/59558-real-world-vs-dream-world-2.html
2440=there are so many actions and it all forgetis
1355=l\nhttp\://www.dailyscript.com/scripts/rush_hour.html
1354=how to build firefox plugin
1353=how to build intellij plugin
1352=ll\nhttp\://jeroensormani.com/11-things-i-wish-someone-told-me-when-i-started-programming/
1351=111\nhttps\://medium.freecodecamp.com/things-i-wish-someone-had-told-me-when-i-was-learning-how-to-code-565fc9dcb329\#.nun737szk
1350=111\nhttps\://linux.slashdot.org/story/10/09/06/1745236/programming-things-i-wish-i-knew-earlier
759=180\nhttps\://en.wikipedia.org/wiki/Interface_segregation_principle
758=https\://www.bing.com/images/search?q\=poor+listening+skills&view\=detailv2&&id\=2FA13413747676BE4CC67277A8D56422A3332006&selectedIndex\=25&ccid\=cm0izSbf&simid\=607996894577756627&thid\=OIP.M726d22cd26df1067ba9902cad58cfd60o0&ajaxhist\=0
2439=i gorgeot tbei tbeu thew seht loose end and it lise the connect 
757=sd solidity
2438=http\://stackoverflow.com/questions/499995/how-do-you-validate-a-binary-search-tree
756=Rackspace
2437=http\://stackoverflow.com/questions/9597188/the-most-efficient-way-to-test-two-binary-trees-for-equality
755=emacs examples
2436=devcenter 
754=sd conceive
2435=siyuanzeng
753=Can we overload the static method?
2434=http\://stackoverflow.com/questions/734891/aggregation-versus-composition
752=30\nhttp\://java-source.net/open-source/profilers
1349=111\nhttp\://blog.salsitasoft.com/what-i-wish-i-knew-when-starting-out-as-a-software-developer-slow-the-fuck-down/
2433=https\://www.cheatography.com/david/cheat-sheets/object-oriented-design/
751=180\nhttps\://www.tutorialspoint.com/design_pattern/composite_pattern.htm
1348=222\nhttp\://www.cosmopolitan.com/career/a55912/things-i-wish-i-knew-app-programmer-career/
2432=https\://www.cheatography.com/scottashipp/cheat-sheets/object-oriented-design-principles/
750=sd narcotics
1347=333\nhttp\://www.infoworld.com/article/2608803/application-development/what-i-wish-i-d-known-starting-out-as-a-programmer.html
2431=http\://www.math-cs.gordon.edu/courses/cs211/ATMExample/
1346=l\nhttp\://www.careerride.com/Spring-Interview-Question.aspx
2430=k
1345=https\://www.tutorialspoint.com/restful/restful_statelessness.htm
1344=jenkins radiator
1343=l\nhttp\://www.applicapartners.com/wp-content/uploads/2013/03/Reverse-thinking-process.png
1342=x\nhttps\://www.tutorialspoint.com/nodejs/nodejs_introduction.htm
1341=333\nhttp\://www.javaworld.com/article/2597522/learn-java/what-i-wish-id-known-starting-out-as-a-programmer.html\n
1340=l\nhttps\://dzone.com/articles/best-practices-variable-and
749=https\://www.tutorialspoint.com/nodejs/nodejs_event_emitter.htm
748=http\://tutorials.jenkov.com/software-architecture/client-server-architecture.html
2429=http\://www.cs.gordon.edu/courses/cs211/AddressBookExample/
747=sd toupee
2428=http\://www.cs.gordon.edu/courses/cs211/AddressBookExample/
746=http\://tutorials.jenkov.com/software-architecture/client-server-architecture.html
2427=http\://www.cs.gordon.edu/courses/cs211/AddressBookExample/
745=120\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
2426=http\://www.cs.gordon.edu/courses/cs211/AddressBookExample/
744=120\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
2425=http\://www.cs.gordon.edu/courses/cs211/AddressBookExample/
743=http\://tutorials.jenkov.com/software-architecture/computer-architecture.html
2424=sd oncall
742=what is call back?
1339=l\nhttp\://stackoverflow.com/questions/3226282/are-there-best-practices-for-java-package-organisation
2423=https\://www.codeproject.com/articles/186107/object-orientation-beginners-tutorial
741=https\://www.tutorialspoint.com/struts_2/struts_themes_templates.htm
1338=l\nhttps\://www.quora.com/What-do-software-developers-of-age-30-and-over-know-now-that-wish-they-had-known-in-their-20s/answer/Michael-O-Church
2422=devcenter 
740=https\://www.tutorialspoint.com/struts_2/struts_value_stack_ognl.htm
1337=l\nhttps\://www.quora.com/What-do-software-developers-of-age-30-and-over-know-now-that-wish-they-had-known-in-their-20s/answer/Michael-O-Church
2421=ec2 documentation\=https\://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-software.html
1336=x\nhttps\://www.tutorialspoint.com/nodejs/nodejs_introduction.htm
2420=k
1335=sd comprehension
1334=ll\nhttp\://www.short-funny.com/funniest-jokes-4.php
1333=Cassandra Thrift
1332=https\://www.quanta.co.uk/blog/2015/07/agilepm-vs-scrum-vs-prince2-agile
1331=Cassandra ColumnFamiliy
1330=sd ColumnFamily
739=sd jinx
738=sd instigator
2419=siyuanzeng
737=http\://tutorials.jenkov.com/software-architecture/single-process-architecture.html
2418=siyuanzeng
736=sd pendulum
2417=siyuanzeng
735=https\://www.tutorialspoint.com/nodejs/nodejs_event_loop.htm
2416=siyuanzeng
734=sd shrug
2415=siyuanzeng
733=sd filler
2414=siyuanzeng
732=sd oddball
1329=l\nhttps\://www.tutorialspoint.com/mongodb/mongodb_interview_questions.htm
2413=siyuanzeng
731=45\nhttps\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=91015B5F8BF17E2DE5881116F42A9A75B31498A9&selectedIndex\=0&ccid\=2M0rjgX0&simid\=607992840123583741&thid\=OIP.Md8cd2b8e05f4593005c9e4cca03c599eo0&ajaxhist\=0
1328=sd afloat
2412=siyuanzeng
730=15\nhttps\://intellipaat.com/tutorial/scala-tutorial/
1327=l\nhttps\://projectlombok.org/
2411=siyuanzeng
1326=l\nhttps\://gualtierotesta.wordpress.com/2014/03/03/tutorial-using-lombok-to-reduce-boilerplate-code-in-java/
2410=siyuanzeng
1325=l\nhttps\://dzone.com/articles/best-practices-variable-and
1324=http\://www.w3schools.com/jquery/jquery_dom_get.asp
1323=sd cumulate
1322=333\nhttp\://www.bing.com/images/search?q\=reverse+thinking&view\=detailv2&&id\=5DDDD520A3C7E0C1719ABB470C21BEF0D0646FC5&selectedIndex\=7&ccid\=eRXHO70J&simid\=608020138935781975&thid\=OIP.M7915c73bbd0952a16ec8a0af7ff19082o0&ajaxhist\=0
1321=https\://docs.oracle.com/javase/tutorial/uiswing/layout/border.html
1320=doing nothing and nothing doing it itself nothing is nothing 
729=spring 3 vs spring 4
728=https\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=91015B5F8BF17E2DE5881116F42A9A75B31498A9&selectedIndex\=0&ccid\=2M0rjgX0&simid\=607992840123583741&thid\=OIP.Md8cd2b8e05f4593005c9e4cca03c599eo0&ajaxhist\=0
2409=siyuanzeng
727=http\://tutorials.jenkov.com/software-architecture/index.html
2408=siyuanzeng
726=https\://projects.spring.io/spring-boot/
2407=siyuanzeng
725=hotmail resume\=https\://onedrive.live.com/edit.aspx?cid\=6a74652c5386c5a5&page\=view&resid\=6A74652C5386C5A5\!9569&parId\=6A74652C5386C5A5\!114&app\=Word
2406=siyuanzeng
724=l\nwhat is spring boot
2405=siyuanzeng
723=l\nhttps\://www.oreilly.com/ideas/what-is-hadoop
2404=siyuanzeng
722=https\://www.tutorialspoint.com/ruby-on-rails/rails-scaffolding.htm
1319=evfeything is me and everybody is me i see waht you see i thought that is differnet but theyer are just he same it could've been me it could've me bettern me you know what is the difference dthe differetnt is i go tht e feeling in time i go t to live the life thourgh ti twhat is the differece betwen anyou and me 
2403=siyuanzeng
721=l\nhttp\://javarevisited.blogspot.com/2011/03/10-interview-questions-on-singleton.html
1318=l\nhttp\://blog.csdn.net/huangfan322/article/details/46234695
2402=abuizeng
720=sd erotic
1317=sd tatter
2401=abuizeng
1316=https\://docs.oracle.com/javase/tutorial/java/generics/why.html
2400=abuizeng
1315=DSDM, Prince2 and Scrum
1314=x\nhttp\://www.tutorialspoint.com/nodejs/
1313=x\nhttp\://www.tutorialspoint.com/nodejs/
1312=ll\nhttp\://www.w3schools.com/php/default.asp
1311=http\://softwareengineering.stackexchange.com/questions/219976/whats-the-difference-between-robustness-and-fault-tolerance
1310=http\://rdingwall.com/2010/02/10/correctness-vs-robustness/
719=sd amygdala
718=sd paralysis
717=sd attest
716=l\nhttps\://www.oreilly.com/ideas/what-is-hadoop
715=l\nhttp\://www.informationweek.com/big-data/software-platforms/how-to-explain-hadoop-to-non-geeks/d/d-id/899721
714=l\nhttp\://blog.cloudera.com/blog/2014/07/apache-hive-on-apache-spark-motivations-and-design-principles/
713=https\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
712=development enviroment configuration
1309=http\://rdingwall.com/2010/02/10/correctness-vs-robustness/
711=l\nhttps\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
1308=333\nhttp\://www.orafaq.com/faq/what_are_the_difference_between_ddl_dml_and_dcl_commands
710=l\nhttps\://docs.oracle.com/javase/tutorial/java/generics
1307=http\://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap
1306=http\://stackoverflow.com/questions/16033704/add-array-of-string-to-database-in-hibernate
1305=ll\nhttps\://www.strataframe.net/dataaccesslayerdetail.aspx
1304=ll\nhttp\://www.w3schools.com/php/default.asp
1303=https\://www.edureka.co/blog/introduction-to-cassandra-column-family/
1302=ll\nhttps\://www.edureka.co/blog/introduction-to-cassandra-column-family/
1301=l\nhttp\://tutorials.jenkov.com/scala/index.html
1300=http\://www.roseindia.net/hibernate/projections/hibernate-projections.shtml
709=120\nhttp\://www.imdb.com/title/tt0120812/quotes
708=sd retract
707=sd premonition
706=120\nhttp\://www.imdb.com/title/tt0120812/quotes
705=why spark hive pig
704=l\nhttps\://docs.oracle.com/javase/tutorial/java/generics/
703=niginx nginx
702=l\nhttp\://tutorials.jenkov.com/scala/index.html
701=java 8 lambda expression passing comparator
700=l\nhttp\://docs.scala-lang.org/overviews/?_ga\=1.32249278.1253417003.1481852729
1999=http\://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html
1998=http\://www.thesaurus.com/browse/now?s\=t
1997=http\://www.urbandictionary.com/define.php?term\=NOW
1996=http\://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.html
1995=http\://www.dictionary.com/browse/rendezvous
1994=http\://datawarehouse4u.info/OLTP-vs-OLAP.html
1993=http\://datawarehouse4u.info/OLTP-vs-OLAP.html
1992=sd barrage
1991=Spring @Configuration 
1990=2017-01-13 16\:15\:06
1989=https\://docs.oracle.com/javase/8/javafx/layout-tutorial/index.html
1988=mvn relaesemanagement
1987=mvn disctribution 
1986=https\://www.tutorialspoint.com/struts_2/struts_overview.htm
1985=https\://www.tutorialspoint.com/hibernate/hibernate_overview.htm
1984=http\://www.thesaurus.com/browse/you?s\=t
1983=http\://www.urbandictionary.com/define.php?term\=You
1982=tomcat tutorial
1981=https\://docs.oracle.com/javase/tutorial/java/generics/wildcards.html
1980=java refactoring examples
1979=http\://www.short-funny.com/best-knock-jokes-2.php
1978=http\://www.w3schools.com/php/default.asp
1977=favoriate language
1976=favorite java
1975=favorite javascript
1974=favorite junit
1973=http\://tutorials.jenkov.com/scala/index.html
1972=http\://docs.scala-lang.org/overviews/collections/introduction.html
1971=http\://docs.scala-lang.org/overviews/collections/introduction.html
1970=new features of scala
1969=http\://docs.scala-lang.org/overviews/?_ga\=1.32249278.1253417003.1481852729
1968=http\://hadooptutorial.info/mapreduce-interview-questions-and-answers-part-1/
1967=http\://www.bing.com/images/search?q\=different+ways+of+saying+how+are+you&view\=detailv2&&id\=61EE6041048E51869397BF0A791D3CD3E4C83808&selectedIndex\=23&ccid\=jFQGjzMM&simid\=608017295679949229&thid\=OIP.M8c54068f330c9739b5de9bcda45a60aco0&ajaxhist\=0
1966=http\://www.bing.com/images/search?q\=different+ways+of+saying+how+are+you&view\=detailv2&&id\=1834C5EC8E30F8E62F570608599F39E688A35117&selectedIndex\=1&ccid\=QkvvWgfb&simid\=608002396440431738&thid\=OIP.M424bef5a07db9c9910f85b7d424f3856o0&ajaxhist\=0
1965=https\://christiecameron.com/2016/12/30/6-different-ways-to-say-thank-you/
1964=sd extravagant
1963=architectureal paradigm
1962=https\://www.tutorialspoint.com/design_pattern/proxy_pattern.htm
1961=https\://christiecameron.com/2016/12/30/6-different-ways-to-say-thank-you/
1960=sd epistemological
1959=salient vs prominent
1958=sd heterogeneous
1957=rest pagination and filtering
1956=sd servlet
1955=https\://www.tutorialspoint.com/struts_2/struts_sending_email.htm
1954=https\://www.tutorialspoint.com/restful/restful_messages.htm
1953=https\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
1952=https\://www.tutorialspoint.com/hibernate/hibernate_sessions.htm
1951=https\://www.tutorialspoint.com/java8/java8_optional_class.htm
1950=https\://www.tutorialspoint.com/java8/java8_optional_class.htm
1949=Nashorn
1948=jdeps
1947=jdeps
1946=jdeps
1945=sd pragmatism
1944=https\://www.tutorialspoint.com/struts_2/basic_mvc_architecture.htm
1943=https\://www.tutorialspoint.com/maven/maven_repositories.htm
1942=https\://www.tutorialspoint.com/maven/maven_interview_questions.htm
1941=http\://www.w3schools.com/jquery/jquery_noconflict.asp
1940=Velocity Struts
1939=FreeMarker
1938=sd actuator
1937=http\://www.w3schools.com/js/js_ajax_intro.asp
1936=kafka documentatino
1935=kafka zookeeper
1934=https\://www.tutorialspoint.com/apache_spark/apache_spark_introduction.htm
1933=https\://www.tutorialspoint.com/hive/hive_introduction.htm
1932=https\://www.tutorialspoint.com/apache_spark/apache_spark_introduction.htm
1931=https\://www.tutorialspoint.com/struts_2/struts_interceptors.htm
1930=sd escapade
1929=sd extramarital
1928=a
1927=external tables
1926=ANSI
1925=how to build tools on my wown for programming
1924=https\://www.tutorialspoint.com/ruby-on-rails/rails-introduction.htm
1923=how to save bariables permantly in java
1922=https\://www.bing.com/images/search?q\=shapes&view\=detailv2&&id\=FEB73AAF780A162261D41DCB542352CF29FC4552&selectedIndex\=19&ccid\=PlRN5dIX&simid\=608034720361481203&thid\=OIP.M3e544de5d2172e95a93ea403dcb324feH0&ajaxhist\=0
1921=https\://www.bing.com/images/search?q\=taxonomy&view\=detailv2&&id\=A79B4A777A9F3A1945752D85997A8B3BDB0E044C&selectedIndex\=15&ccid\=wvFjM7Ei&simid\=608036927970674225&thid\=OIP.Mc2f16333b12277a458b9c07eea0c417ao0&ajaxhist\=0
1920=scalable application design and implementation
1919=https\://en.wikipedia.org/wiki/Interjection
1918=keyword, function, class, module, pattern, framework, tools, what elses
1917=software structures
1916=AspectJ
1915=http\://www.grammar-monster.com/lessons/interjections.htm
1914=sd etymological 
1913=sd persnickety
1912=sd loiter
1911=http\://www.dailywritingtips.com/100-mostly-small-but-expressive-interjections/
1910=comprehension
1909=a
1908=https\://www.englishforums.com/English/TheMostCommonSlangWords/vqvw/post.htm
1907=http\://www.tutorialspoint.com/restful/restful_jax_rs.htm
1906=https\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=4BB95726FB7E6F25E435B57625EC28AED7A25EF0&selectedIndex\=1&ccid\=x8lPVRn8&simid\=608023192666573330&thid\=OIP.Mc7c94f5519fcb9dbf3b642e0ce83ab76o0&ajaxhist\=0
1905=http\://esl.about.com/od/beginningenglish/fl/The-50-Most-Commonly-Words-in-the-English-Language.htm
1904=http\://soundrangers.com/index.cfm?fuseaction\=category.display&category_ID\=488
1903=http\://www.billboard.com/articles/list/959432/the-50-sexiest-songs-of-all-time
1902=http\://www.pantagraph.com/news/best-first-lines-from-novels/article_a125216a-649f-5414-88b5-76a688ea3b6a.html
1901=http\://esl.about.com/od/beginningenglish/fl/The-50-Most-Commonly-Words-in-the-English-Language.htm
1900=http\://threeillusions.com/what-is-the-difference-between-dreams-and-reality/
2399=abuizeng
2398=abuizeng
2397=abuizeng
2396=abuizeng
2395=abuizeng
2394=abuizeng
2393=abuizeng
2392=abuizeng
2391=abuizeng
2390=abuizeng
2389=abuizeng
2388=abuizeng
2387=abuizeng
2386=abuizeng
2385=abuizeng
2384=abuizeng
1299=http\://stackoverflow.com/questions/7498205/when-to-use-hibernate-projections
2383=abuizeng
1298=sd filtration
2382=abuizeng
1297=java naming converntion and best practive
2381=abuizeng
1296=reverse your viewpoint
2380=abuizeng
1295=l\nhttp\://blog.flux7.com/blogs/docker/docker-tutorial-series-part-1-an-introduction
1294=https\://www.codeproject.com/articles/98598/how-i-explained-design-patterns-to-my-wife-part
1293=https\://en.wikipedia.org/wiki/Extreme_programming
1292=https\://community.oracle.com/thread/601313
1291=sd sugarcoat
1290=sd witticism
699=l\nhttp\://www.scala-lang.org/documentation/getting-started.html
698=l\nhttp\://www.tutorialspoint.com/apache_kafka/index.htm
2379=abuizeng
697=l\nhttp\://blog.flux7.com/blogs/docker/docker-tutorial-series-part-1-an-introduction
2378=java swing popup\=http\://www.java2s.com/Code/Java/Swing-Components/VistaTransparentDialog.htm
696=https\://ianmellis.com/2013/02/26/good-programming-vs-bad-programming/
2377=tao chu meng zhong de xiao bie shu \u9003\u51FA\u68A6\u4E2D\u7684\u522B\u5885\=http\://www.4399.com/flash/25231_2.htm
695=120\nhttp\://www.oodesign.com/
2376=search services
694=120\nhttp\://www.thetoptens.com/best-insults/
2375=large scale distributed system design and engineering best practices
693=http\://sixrevisions.com/web-development/git-tips/
2374=distributed system design in large scale data processing interview questions and answers
692=clean code
1289=sd concretion
2373=python interview questions and answers
691=ejb
1288=Liskov
2372=java 8 interview questions and answers
690=l\nhttps\://www.quora.com/What-are-some-cool-things-that-you-can-do-with-Java
1287=ll\nhttps\://www.bing.com/images/search?q\=hadoop+system&view\=detailv2&&id\=AC7907299644BA707B53CF05D279925F3D835430&selectedIndex\=31&ccid\=SNZ5GXp0&simid\=608052978264049889&thid\=OIP.M48d679197a74bec3dad70df98166fe47H0&ajaxhist\=0
2371=public cloud infrastrcuture interview quesitions and answers
1286=ll\nhttps\://www.bing.com/images/search?q\=hadoop+system&view\=detailv2&&id\=5F9DD1A278201A97994A0BEB5A366882A94BD6E7&selectedIndex\=9&ccid\=0rsVJRwp&simid\=608023866968902798&thid\=OIP.Md2bb15251c2964a7d86b359a10625298o0&ajaxhist\=0
2370=public cloud infrastrcutrion interviewquqesiotns naad answers
1285=ll\nhttps\://www.bing.com/images/search?q\=hadoop+system&view\=detailv2&&id\=2B7B15CDF71B320E87256DFD4C70F91F12E8C2C4&selectedIndex\=2&ccid\=Y6aHwNqU&simid\=608043250164435253&thid\=OIP.M63a687c0da94e9ad555d38f4be470ae7H0&ajaxhist\=0
1284=l\nhttps\://www.tutorialspoint.com/ruby-on-rails/rails-introduction.htm
1283=sd midget
1282=ll\nhttp\://www.short-funny.com/funniest-jokes-3.php
1281=333\nhttps\://www.tutorialspoint.com/design_pattern/command_pattern.htm
1280=x\nhttp\://diply.com/publisher/interesting-things
689=l\nhttps\://www.mapr.com/products/mapr-sandbox-hadoop/tutorials/spark-tutorial
688=l\nhttp\://www.tutorialspoint.com/apache_spark/
2369=apache solr interview questions and answers
687=l\nhttp\://www.tutorialspoint.com/hive/
2368=elasticsearch interview questnion and answers
686=l\nhttps\://www.dezyre.com/hadoop-tutorial/apache-hive-tutorial-tables
2367=apache solr
685=just ask one question repeately
2366=elasticsearch
684=sd Theorem
2365=k
683=sd hideous
2364=cache framework java
682=sd arsenal
1279=x\nhttp\://diply.com/publisher/interesting-things
2363=cache framework
681=sd rile
1278=cassandra column column family
2362=upstream downstream what does them mean
680=sd sheer
1277=ll\nhttps\://www.bing.com/images/search?q\=hadoop&view\=detailv2&&id\=30FEEE970A539380BA9581C52BC966BA41D9306D&selectedIndex\=14&ccid\=GLkqrvAD&simid\=608033277242704788&thid\=OIP.M18b92aaef0032494ecd8158251b5b659o0
2361=k
1276=ll\nhttp\://javarevisited.blogspot.com/2014/07/top-50-java-multithreading-interview-questions-answers.html
2360=k
1275=333\nhttp\://stackoverflow.com/questions/1568834/whats-the-difference-between-rest-restful
1274=ll\nhttp\://class.ezinemark.com/top-10-interview-questions-on-object-oriented-programming-16fd36abfc7.html
1273=ll\nhttp\://www.globalguideline.com/interview_questions/Questions.php?sc\=OOAD_Object-oriented_analysis_and_design_
1272=ll\nhttps\://careercup.com/page?pid\=object-oriented-design-interview-questions
1271=heap vs stack
1270=sd octet
679=sd vile
678=l\nhttp\://www.mkyong.com/tutorials/spring-tutorials/
2359=k
677=l\nhttp\://www.javatpoint.com/spring-tutorial
2358=sd inadvertent
676=l\nhttps\://dwbi.org/database/sql/72-top-20-sql-interview-questions-with-answers
2357=https\://docs.angularjs.org/guide/controller\nhttps\://docs.angularjs.org/guide/controller\nhttp\://www.cio.com.au/article/401353/how_define_scope_project/\nhttps\://toddmotto.com/all-about-angulars-emit-broadcast-on-publish-subscribing/\nhttp\://www.dotnettricks.com/learn/angularjs/understanding-angularjs-rootscope-and-scope\nhttp\://stackoverflow.com/questions/32435638/angular-compile-controller-not-binding-scope-to-dynamic-html\nhttp\://www.networkmanagementsoftware.com/what-is-syslog/\nhttp\://www.bradoncode.com/tutorials/mean-stack-tutorial-part-1-setup/
675=l\nhttp\://www.mkyong.com/tutorials/jax-rs-tutorials/\n
2356=sd growl
674=l\nhttp\://www.tutorialspoint.com/restful/restful_jax_rs.htm
2355=friends51 
673=sd lucid
2354=friends51 
672=sg lucid
1269=sd Cannabis
2353=friends51 video  
671=a
1268=ll\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
2352=friends season 5 episode 1 
670=friends51 vidio 
1267=ll\nhttps\://www.tutorialspoint.com/struts_2/struts_themes_templates.htm
2351=sd inadvertent
1266=ll\nhttps\://www.tutorialspoint.com/struts_2/struts_themes_templates.htm
2350=https\://docs.angularjs.org/guide/controller\nhttps\://docs.angularjs.org/guide/controller\nhttp\://www.cio.com.au/article/401353/how_define_scope_project/\nhttps\://toddmotto.com/all-about-angulars-emit-broadcast-on-publish-subscribing/\nhttp\://www.dotnettricks.com/learn/angularjs/understanding-angularjs-rootscope-and-scope\nhttp\://stackoverflow.com/questions/32435638/angular-compile-controller-not-binding-scope-to-dynamic-html\nhttp\://www.networkmanagementsoftware.com/what-is-syslog/\nhttp\://www.bradoncode.com/tutorials/mean-stack-tutorial-part-1-setup/
1265=ll\nhttp\://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-gs-launch-sample-cluster.html
1264=design pattern examples
1263=333\nhttps\://www.bing.com/images/search?q\=java+comparisons&view\=detailv2&&id\=CBF725AA656E68FB5E5281714D6DF90775988662&selectedIndex\=5&ccid\=9tiDhEdX&simid\=607993475792506452&thid\=OIP.Mf6d8838447574e92187e0fd87964935bo0&ajaxhist\=0
1262=ll\nhttp\://www.cygnet-infotech.com/blog/struts-2-vs-springmvc
1261=docker tutorial
1260=ll\nhttp\://www.testingbrain.com/interview/oracle-interview-questions.html
669=friends 123
668=http\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/GettingStarted.Download.html
2349=https\://developers.google.com/closure/\nhttps\://toddmotto.com/\nhttps\://toddmotto.com/opinionated-angular-js-styleguide-for-teams/\nhttps\://github.com/toddmotto/angular-styleguide\nhttps\://johnpapa.net/\nhttps\://github.com/johnpapa/angular-styleguide\nhttp\://benalman.com/news/2010/11/immediately-invoked-function-expression/\nhttps\://www.pluralsight.com/authors/john-papa\nhttps\://www.airpair.com/js/javascript-framework-comparison\nhttp\://backbonejs.org/\nhttps\://www.sitepoint.com/introduction-to-mean-stack/\nhttp\://expressjs.com/\nhttps\://www.sitepoint.com/unit-and-e2e-testing-in-angularjs/\nhttps\://www.elastic.co/products/logstash\nhttps\://aws.amazon.com/sqs/\nhttps\://aws.amazon.com/sqs/
667=http\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/dynamolocal-vs-dynamoservice.html
2348=sd pragmatic
666=a
2347=https\://www.elastic.co/guide/en/x-pack/current/index.html
665=http\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/intro-dynamodb-local.html
2346=k
664=http\://www.fluentu.com/english/blog/american-english-slang-words-esl/
2345=k
663=software design how to design software?
2344=k
662=what does a good java programmer need to learn design pattern algorithm datastructure ?
1259=ll\nhttps\://aws.amazon.com/route53/
2343=k
661=l\nhttp\://www.javatpoint.com/hibernate-interview-questions
1258=ll\nhttps\://spark.apache.org/
2342=http\://www.infoworld.com/article/2937159/application-development/mean-vs-lamp-your-next-programming-project.html
660=why do you always talk bout others in say it in you r conversion like they exist whey?
1257=ll\nhttps\://dwbi.org/database/sql/72-top-20-sql-interview-questions-with-answers
2341=http\://stackoverflow.com/questions/25270372/webapp-with-mean-stack-and-java
1256=ejb tuttorial
2340=Nginx access logs
1255=ll\nhttp\://www.tutorialspoint.com/sql/sql_interview_questions.htm
1254=hibernate projection
1253=ll\nhttp\://www.mind-your-reality.com/law_of_attraction.html
1252=l\nhttps\://www.tutorialspoint.com/restful/restful_caching.htm
1251=sd sideshow
1250=ll\nhttp\://www.mkyong.com/jsf2/jsf-2-0-hello-world-example/
659=i don't care about other sna dn i only care aobut myself and why should i care about other when i am not understanding myself and why myself mi am myself thourhg me the love goes to everybody when i am careabout about thereother i am actually careabing about myself the inner feelings about myself and that drives me around and help others somethigmet it kills me i d if i don't do thwat i intent to do what i am boring to do
658=l\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
2339=applicaiton performance metrics open sources projects
657=sd pumpered
2338=metrics open source projects
656=will cassandra override the record when saving the object with same id?
2337=most popular popen source projects
655=What is difference between abstraction and encapsulation?
2336=open source projects
654=Explain OOPS concepts with example
2335=k
653=http\://www.vogella.com/tutorials/JavaDateTimeAPI/article.html
2334=k
652=http\://stackoverflow.com/questions/19154310/increase-large-java-application-performance
1249=sd premiership
2333=k
651=l\nhttp\://www.cubrid.org/blog/dev-platform/the-principles-of-java-application-performance-tuning/
1248=l\nhttp\://thomasalspaugh.org/pub/fnd/ility.html
2332=k
650=sg pampered
1247=ll\nhttps\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=4BB95726FB7E6F25E435B57625EC28AED7A25EF0&selectedIndex\=1&ccid\=x8lPVRn8&simid\=608023192666573330&thid\=OIP.Mc7c94f5519fcb9dbf3b642e0ce83ab76o0&ajaxhist\=0
2331=k
1246=ll\nhttps\://www.bing.com/images/search?q\=spring+mvc+architecture&view\=detailv2&&id\=219CBF99257A948A0999A7FEED809C8674F8252D&selectedIndex\=2&ccid\=W5VgQVEd&simid\=608010127374158153&thid\=OIP.M5b956041511d270796ac5b0081ce8819o0&ajaxhist\=0
2330=https\://docs.angularjs.org/api/ngRoute/service/$route
1245=ll\nhttps\://www.bing.com/images/search?q\=System+Engineering+Ilities&view\=detailv2&&id\=FC39C4B7292727DA5D7659DBDE3E4D5C28D4F225&selectedIndex\=1&ccid\=8cQ3yY%2bL&simid\=608020929212582538&thid\=OIP.Mf1c437c98f8bb1553153464bf4b07bddo0&ajaxhist\=0
1244=ll\nhttps\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=A8A2A1FD364452879E422E94EC40B3A3C6F9776D&selectedIndex\=19&ccid\=4FmKZEX8&simid\=607987527256376764&thid\=OIP.Me0598a6445fc72a85419ab93adfc28cdo0&ajaxhist\=0
1243=ll\nhttps\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=91015B5F8BF17E2DE5881116F42A9A75B31498A9&selectedIndex\=0&ccid\=2M0rjgX0&simid\=607992840123583741&thid\=OIP.Md8cd2b8e05f4593005c9e4cca03c599eo0&ajaxhist\=0
1242=30\nhttps\://www.tutorialspoint.com/design_pattern/design_pattern_overview.htm
1241=333\nhttps\://www.tutorialspoint.com/struts_2/struts_ajax_tags.htm
1240=sd infidelity
649=l\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
648=how to profile a application?
2329=How to properly stop the Thread in Java?\=http\://stackoverflow.com/questions/10961714/how-to-properly-stop-the-thread-in-java
647=what is application profile?
2328=k
646=l\nhttps\://coderanch.com/t/203125/java/improve-performance-Swing-application
2327=k
645=l\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
2326=k
644=l\nhttp\://www.techrepublic.com/blog/five-apps/five-tips-for-improving-application-performance-management/
2325=k
643=l\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
2324=k
642=how to improve application performance java?
1239=sd depraved
2323=k
641=how to improve application performance?
1238=sd despicable
2322=ca 2 machine setup Change the Path Variable in Linux\=http\://www.wikihow.com/Change-the-Path-Variable-in-Linux
640=rush hour 123\=http\://123movies.is/film/rush-hour-2290/
1237=10\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
2321=https\://docs.docker.com/\nhttp\://kafka.apache.org/documentation.html
1236=3GI program
2320=https\://docs.docker.com/\nhttp\://kafka.apache.org/documentation.html
1235=high water mark
1234=php tutorial
1233=principles of Extreme Programming
1232=correctness and robustness of data 
1231=stateless business layer
1230=http\://www.mind-your-reality.com/mind_power.html
639=Freinds 123\=http\://123movies.is/film/friends-season-5-2630/watching.html
638=123 movies 
2319=http\://www.javatpoint.com/java-thread-pool\nhttp\://lavasoft.blog.51cto.com/62575/217547/\nhttp\://people.apache.org/~dirkv/pool/examples.html\nhttp\://www.slideshare.net/psteitz/apachecon2014-pooldbcp\nhttp\://www.programcreek.com/java-api-examples/index.php?api\=com.fasterxml.jackson.annotation.JacksonInject
637=siyuanzeng
2318=sd passivate
636=siyuanzeng
2317=ca 2 machine setup laptop docker documentation\=https\://docs.docker.com/\nca 2 machine setup laptop kafka documenation\=http\://kafka.apache.org/documentation.html\nca 2 machine setup laptop linux how to set path variable\=http\://www.wikihow.com/Change-the-Path-Variable-in-Linux\nca 2 machine setup laptop linux add github to path\=https\://www.howtoforge.com/tutorial/install-git-and-github-on-ubuntu-14.04/\nca 2 machine setup laptop linux the command could not be located because sbin is not included in the path environment\=http\://askubuntu.com/questions/433092/the-command-could-not-be-located-because-sbin-is-not-included-in-the-path-env\nca 2 machine setup laptop linux sudo unable to resolve host name\=http\://askubuntu.com/questions/59458/error-message-when-i-run-sudo-unable-to-resolve-host-none\nca 2 machine setup laptop Shopify sarama\=https\://github.com/Shopify/sarama/\nca 2 machine setup laptop pierrec xxHash\=https\://github.com/pierrec/xxHash
635=siyuanzeng
2316=windows 10 show file extension\=http\://www.ilovefreesoftware.com/06/windows-10/show-file-name-extensions-windows-10.html
634=siyuanzeng
2315=ca jmxtrans\=https\://github.com/jmxtrans/jmxtrans
633=sg do i hav eto catch exception
2314=ca download and install go\=https\://golang.org/doc/install
632=sg how to kill a thread
1229=l\nhttps\://www.bing.com/images/search?q\=spring+mvc+architecture&view\=detailv2&&id\=A2C042BCFA2C0F3F653A42068B6537ABAC3D7254&selectedIndex\=3&ccid\=hs1uYm7A&simid\=608026534147917734&thid\=OIP.M86cd6e626ec0b6283db828f85a2b52dao0&ajaxhist\=0
2313=ca Burrow - Kafka Consumer Lag Checking\=https\://github.com/linkedin/Burrow
631=java 8 concurrency 
1228=333\nhttp\://www.journaldev.com/3633/hibernate-interview-questions-and-answers\#hibernate-validator
2312=ca download and install go\=https\://golang.org/doc/install
630=l\nhttps\://www.vidarholen.net/contents/interjections/
1227=l\nhttps\://www.tutorialspoint.com/spring/spring_architecture.htm
2311=ca Burrow - Kafka Consumer Lag Checking\=https\://github.com/linkedin/Burrow
1226=l\nhttps\://www.tutorialspoint.com/spring/spring_overview.htm
2310=Kafka Monitoring using JMX-JMXTrans-Ganglia\=http\://jayatiatblogs.blogspot.com/2013/05/kafka-monitoring-using-jmx-jmxtrans.html
1225=l\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-beannameurlhandlermapping-example/
1224=30\nhttps\://www.tutorialspoint.com/maven/maven_overview.htm
1223=30\nhttps\://www.tutorialspoint.com/struts_2/struts_architecture.htm
1222=l\nhttps\://www.tutorialspoint.com/struts_2/struts_overview.htm
1221=why isn't array asupported in hibernate
1220=10\nC\:\\Users\\SiyuanZeng's\\Videos\\Study\\JAVA\\Effective Java\\Effective Java\\Effective Java PPT
629=l\nhttp\://www.slideshare.net/koolhits/java-performance-threading-and-concurrent-data-structures
628=http\://lucid.wikia.com/wiki/Differences_between_the_real_world_and_the_dream_world
2309=kafka tools system tools\=https\://cwiki.apache.org/confluence/display/KAFKA/System+Tools
627=http\://threeillusions.com/what-is-the-difference-between-dreams-and-reality/
2308=kafka source code github\=https\://github.com/apache/kafka/tree/trunk/bin
626=l\nhttp\://www.functionaljava.org/examples-java8.html
2307=activemq\=http\://activemq.apache.org/activemq-command-line-tools-reference.html
625=drupal
2306=JMX report for Kafka\=https\://www.safaribooksonline.com/library/view/apache-kafka-cookbook/9781785882449/ch04s07.html
624=http\://www.sidereel.com/tv-shows/friends/season-5/episode-1
2305=creating files in cygwin\=http\://stackoverflow.com/questions/9163535/creating-files-in-cygwin
623=http\://putlockers.ch/watch-friends-tvshow-season-5-episode-1-online-free-putlocker.html
2304=how to run sh file in windows\=http\://stackoverflow.com/questions/7936861/how-to-run-sh-files-in-windows
622=http\://www.livesinabox.com/friends/season5/501arsr.htm
1219=10\nC\:\\Users\\SiyuanZeng's\\Videos\\Study\\JAVA\\Effective Java\\Effective Java\\Effective Java PPT
2303=cygwin\=http\://x.cygwin.com/devel/backtrace.html
621=friends season 5 episode 1 transcript 
1218=5\nC\:\\Users\\SiyuanZeng's\\Downloads\\Effective Java 2nd Edition \u82F1\u6587\u7248.pdf\n
2302=install vim in cygwin\=http\://superuser.com/questions/345180/install-vim-in-cygwin
620=what is system.out.print();
1217=15\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
2301=bash on linux on windows\=http\://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/
1216=333\nhttp\://www.mind-your-reality.com/universal_mind.html
2300=kafka set up and running kafka on windows
1215=111\nhttps\://www.tutorialspoint.com/software_engineering/software_design_strategies.htm
1214=DDL VS DML
1213=sd eviction
1212=rest and restful
1211=jsf vs struts vs tapestry
1210=mean stack vs  j2ee
619=l\nhttps\://www.learnpython.org/
618=friends51 vidio 
617=friends51 
616=what is rauby on rails?
615=http\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/quick-intro.html
614=http\://www.vogella.com/tutorials/JavaPreferences/article.html
613=l\nhttp\://www.vogella.com/tutorials/Logging/article.html
612=l\nhttp\://www.vogella.com/tutorials/JavaConcurrency/article.html
1209=30\nhttp\://www.testingbrain.com/interview/oracle-interview-questions.html/4
611=l\nhttp\://www.vogella.com/tutorials/REST/article.html
1208=struts vs spring
610=l\nhttp\://www.vogella.com/tutorials/JavaCollections/article.html
1207=x\nhttp\://www.dictionary.com/browse/kinesthetics?s\=t
1206=sd stoked
1205=sd derivative
1204=sd brittle
1203=sd zesty
1202=sd impetuous
1201=sd aggravate
1200=sd alpaca
609=l\nhttp\://www.vogella.com/tutorials/JavaAnnotations/article.html
608=l\nhttp\://www.vogella.com/tutorials/JavaDateTimeAPI/article.html
607=http\://www.vogella.com/tutorials/JavaRegularExpressions/article.html
606=http\://www.tutorialspoint.com/hibernate/
605=http\://www.tutorialspoint.com/struts_2/
604=http\://www.mkyong.com/tutorials/spring-mvc-tutorials/
603=http\://www.w3schools.com/jquery/
602=l\nhttp\://www.tutorialspoint.com/ruby-on-rails/
601=l\nhttps\://docs.oracle.com/javase/tutorial/uiswing/layout/visual.html
600=pretend to be sad adn happy
1899=http\://www.myguruedge.com/our-thinking/myguru-blog/bid/214477/10-Common-Logical-Fallacies
1898=http\://www.englishspeak.com/english-words.cfm
1897=http\://esl.about.com/od/beginningenglish/fl/The-50-Most-Commonly-Words-in-the-English-Language.htm
1896=http\://classiclit.about.com/od/novelbookreviews/a/Famous-First-Lines-Of-Novels.htm
1895=http\://www.goodreads.com/list/show/647.Best_Beginning_of_a_Novel
1894=http\://www.infoplease.com/ipea/A0934311.html
1893=https\://www.englishforums.com/English/TheMostCommonSlangWords/vqvw/post.htm
1892=http\://www.fluentu.com/english/blog/essential-english-idioms/
1891=http\://www.manythings.org/slang/slang1.html
1890=http\://www.manythings.org/slang/
1889=http\://www.fluentu.com/english/blog/essential-english-idioms/
1888=http\://www.learnenglishfeelgood.com/americanidioms/
1887=http\://www.manythings.org/slang/
1886=http\://www.englishdaily626.com/idioms.php
1885=software developing landscape
1884=integration
1883=a
1882=http\://www.mkyong.com/tutorials/spring-tutorials/
1881=http\://www.mkyong.com/tutorials/jquery-tutorials/
1880=http\://www.mkyong.com/tutorials/maven-tutorials/
1879=http\://www.mkyong.com/tutorials/apache-ant-tutorial/
1878=http\://www.mkyong.com/tutorials/quartz-scheduler-tutorial/
1877=http\://www.mkyong.com/tutorials/hibernate-tutorials/
1876=http\://www.mkyong.com/tutorials/java-io-tutorials/
1875=http\://www.testingbrain.com/project-management
1874=http\://www.testingbrain.com/
1873=release management
1872=http\://www.fromdev.com/2012/09/Java-Path-Classpath-Questions-Answers.html
1871=http\://javarevisited.blogspot.com/search/label/java%20collection%20tutorial?&max-results\=3
1870=http\://javarevisited.blogspot.com/search/label/data%20structure%20and%20algorithm?max-results\=3
1869=http\://javarevisited.blogspot.com/2011/11/struts-interview-questions-answer-j2ee.html
1868=sd Hubris
1867=http\://hibernate.org/orm/documentation/5.2/
1866=http\://www.programcreek.com/2012/05/opennlp-tutorial/
1865=https\://www.tutorialspoint.com/restful/restful_security.htm
1864=a
1863=type os algorithems\n
1862=petrophysics
1861=final object
1860=inner class tutorial
1859=http\://www.testingbrain.com/interview/javascript-questions.html
1858=http\://www.testingbrain.com/interview/javascript-questions.html
1857=oracle synonyms
1856=cassandra documentation
1855=newtwork security
1854=bi tools
1853=datawarehousing bi
1852=security java
1851=could computer
1850=a
1849=a
1848=http\://www.w3schools.com/html/default.asp
1847=http\://www.w3schools.com/sql/default.asp
1846=http\://www.w3schools.com/w3css/default.asp
1845=http\://www.java67.com/2013/07/decorator-design-pattern-in-java-real-life-example-tutorial.html
1844=http\://www.w3schools.com/html/default.asp
1843=http\://www.w3schools.com/php/default.asp
1842=http\://www.w3schools.com/bootstrap/default.asp
1841=make a read only database based on etl
1840=ETL tutorial
1839=oracle to cassandra migration
1838=Java FX 
1837=what is the mission of software?
1836=type of softwares
1835=type of promgrammers
1834=type of programmings
1833=http\://www.w3schools.com/php/default.asp
1832=http\://www.w3schools.com/php/default.asp
1831=http\://www.w3schools.com/php/default.asp
1830=a
1829=a
1828=design pattern xore java integration technlead
1827=system design
1826=normalization sql table
1825=gabage collector
1824=strong reference
1823=weak reference
1822=http\://www.radcortez.com/my-favorite-intellij-idea-features/
1821=http\://www.radcortez.com/my-favorite-intellij-idea-features/
1820=http\://www.radcortez.com/my-favorite-intellij-idea-features/
1819=http\://javarevisited.blogspot.sg/2010/10/difference-between-hashmap-and.html
1818=http\://javarevisited.blogspot.sg/2010/10/difference-between-hashmap-and.html
1817=http\://javarevisited.blogspot.sg/2010/10/difference-between-hashmap-and.html
1816=http\://javarevisited.blogspot.sg/2011/09/difference-vector-vs-arraylist-in-java.html
1815=http\://javarevisited.blogspot.sg/2011/09/difference-vector-vs-arraylist-in-java.html
1814=http\://javarevisited.blogspot.sg/2011/09/difference-vector-vs-arraylist-in-java.html
1813=http\://javarevisited.blogspot.com/2015/10/133-java-interview-questions-answers-from-last-5-years.html
1812=http\://javarevisited.blogspot.com/2015/10/133-java-interview-questions-answers-from-last-5-years.html
1811=http\://javarevisited.blogspot.com/2015/10/133-java-interview-questions-answers-from-last-5-years.html
1810=http\://javarevisited.blogspot.com/2011/09/spring-interview-questions-answers-j2ee.html
1809=http\://javarevisited.blogspot.com/2011/09/spring-interview-questions-answers-j2ee.html
1808=http\://javarevisited.blogspot.com/2011/09/spring-interview-questions-answers-j2ee.html
1807=http\://javarevisited.blogspot.com/2012/01/rest-web-services-framework-interview.html
1806=http\://javarevisited.blogspot.com/2012/01/rest-web-services-framework-interview.html
1805=http\://javarevisited.blogspot.com/2012/01/rest-web-services-framework-interview.html
1804=https\://www.quora.com/What-are-some-favorite-git-features-or-tricks
1803=https\://www.quora.com/What-are-some-favorite-git-features-or-tricks
1802=https\://www.quora.com/What-are-some-favorite-git-features-or-tricks
1801=https\://www.quora.com/Which-is-your-favourite-Design-Pattern-and-why
1800=https\://www.quora.com/Which-is-your-favourite-Design-Pattern-and-why
2299=k
2298=How to install JAVA 8 in linux\=http\://tecadmin.net/install-oracle-java-8-jdk-8-ubuntu-via-ppa/
2297=cygwin\=C\:\\cygwin64\\Cygwin.bat
2296=cygwin setup\=http\://superuser.com/questions/345180/install-vim-in-cygwin
2295=cmd create file\=touch foo.c
2294=cmd start kafka jmx
2293=cmd start kafka jmx 
2292=cmd start kafka jmx 
2291=cmd start kafka jmx\=bin/kafka-run-class.sh kafka.tools.jmxtool --jmx-url service\:jmx\:rmi\:///jndi/rmi\://127.0.0.1\:9999/jmxrmi
2290=command to start kafka\=kafka-server-start.bat .\\..\\..\\config\\server.properties
2289=kafka set up and running kafka on windows 
2288=what will hell p and what will not
2287=k
2286=http\://nverma-tech-blog.blogspot.com/2015/12/apache-kafka-example-of.html
2285=http\://nverma-tech-blog.blogspot.com/2015/12/apache-kafka-example-of.html
2284=\u4F7F\u7528JMX\u76D1\u63A7Kafka\=http\://itfish.net/article/19422.html
1199=x\nhttp\://www.w3schools.com/jquery/
2283=k
1198=sd dope
2282=sd passivate
1197=sd shibby
2281=http\://www.javatpoint.com/java-thread-pool\nhttp\://lavasoft.blog.51cto.com/62575/217547/\nhttp\://people.apache.org/~dirkv/pool/examples.html\nhttp\://www.slideshare.net/psteitz/apachecon2014-pooldbcp\nhttp\://www.programcreek.com/java-api-examples/index.php?api\=com.fasterxml.jackson.annotation.JacksonInject
1196=sd accustomed
2280=kafka set up and running kafka on windows 
1195=sd haughty
1194=sd contemptuous
1193=111\nhttps\://www.tutorialspoint.com/maven/maven_build_profiles.htm
1192=l\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
1191=111\nhttp\://www.bing.com/images/search?q\=prejudice&view\=detailv2&&id\=34B3F692AF5C6EFD9D6809E3817CAE41D2005F18&selectedIndex\=145&ccid\=b7Je97n6&simid\=608028896379538447&thid\=OIP.M6fb25ef7b9faba3a7f650139c4a09a35o0&ajaxhist\=0
1190=111\nhttp\://www.buggybread.com/2014/05/interview-questions-and-answers-on-maven.html
599=is there something i don't know after reading so many times i really wan t osemthing i don't know 
598=l\nhttps\://www.edureka.co/blog/interview-questions/top-apache-kafka-interview-questions-for-beginners/
2279=content personalization\nwhat is express?\ntraffic analysis\nwhy is logs important\nminification\nlogstash user case\nreplica\noffline pages\ncurl tutorial\nshard\ntext file to schedule events
597=sd lucid
2278=intellij plugin cases \nmean stack basic ideads\nwhat are all the compmonents ? \nwhat are the port doing in angular js?\nwhat are the existing ubuilding components i can do ? \nbuild ing components\nwhy mean stack? \nmean stack vs j2ee\ncomparisons between different technologies stacks\nuse this when you wan tto sovleve what problem \nwhat is the problem it tsolved\nwhat is the proboem\nintellij actions
596=http\://www.journaldev.com/146/hashmap-implementation-with-list-in-java
2277=rest api authentication\nrest api authentication multiple node\nbackbone js \nbootstrap annotations\nwhat can it do?
595=360\nhttp\://www.learnpython.org/en/Conditions
2276=generate code alt+F2/Ctrl+F2\nSurround with Ctrl+Shift+Insert\nContext Info Alt+Q/Alt+Ctrl+Q\nCut the current line/ Copy the current lline\nSmart line join/split Ctrl+Shift+J / Ctrl+Enter\nToggle case Ctrl+Shift+U\nSelect tot he block Ctrl+Shift+[]\nDd whole word Ctrl+Delete/Backspace \nExpand/Collapse Ctrl++/-\nExpand/Collapse Ctrl+Shift++/-\nFind usages/ Find usages in file Alt+F7 / Ctrl+F7\nHighlight usages in file Ctrl+Shift+F7\nShow usages Ctrl+Alt+F7\nRun Ctrl+F9\nDebug Ctrl+Shift+F9\nRun to cursor Alt+F9\nView breakpoint Ctrl+Shift+F8\nGo to symbol Ctrl+Shift+Alt+N\nTab Alt+Left/Right\nprevioius tool window F12\nHide active or last active window Shift+ESC\nClose last active/message/run/... tab \tCtrl+Shift+F4\nlast edit location Ctrl+Shift+Backspace/Ctrl+Alt+Backspace  \nnext edit location Ctrl+Shift+Alt+Backspace\nSelect views for current file Alt+F1\nGoto Implementation Ctrl+Alt+B\nGoto Quick definition Ctrl+Shif+I\nGoto Type definition Ctrl+Shift+B\nGoto super method/class Ctrl+U\nAlt + Up/Down Go to previous/next method\nCtrl + F12 File structure popup\nCtrl + H Type hierarchy \nCtrl + Shift + H Method hierarchy \nCtrl + Alt + H Call hierarchy \nF2 / Shift + F2 Next/previous highlighted error \nF4 / Ctrl + Enter Edit source / View source \nAlt + Home Show navigation bar \nF11 Toggle bookmark \nCtrl + F11 Toggle bookmark with mnemonic \nCtrl + \#[0-9] Go to numbered bookmark \nShift + F11 Show bookmarks\nCtrl + K Commit project to VCS \nCtrl + T Update project from VCS \nAlt + Shift + C View recent changes \nAlt + BackQuote (`) \u2018VCS\u2019 quick popup\nCtrl + Alt + J Surround with Live Template \nCtrl + J Insert Live Template \niter Iteration according to Java SDK 1.5 style \ninst Check\u2009object\u2009type with instanceof and downcast it itco Iterate elements of java.util.Collection \nitit Iterate elements of java.util.Iterator \nitli Iterate elements of java.util.List \npsf public static final \nthr throw new \nAlt + \#[0-9] Open corresponding tool window \nCtrl + S Save all \nCtrl + Alt + Y Synchronize \nCtrl + Shift + F12 Toggle maximizing editor \nAlt + Shift + F Add to Favorites \nAlt + Shift + I Inspect current file with current profile \nCtrl + BackQuote (`) Quick switch current scheme \nCtrl + Alt + S Open Settings dialog \nCtrl + Alt + Shift + S Open Project Structure dialog \nCtrl + Shift + A Find Action \nCtrl + Tab Switch between tabs and tool window
594=60\nhttp\://www.learnpython.org/en/Conditions
2275=error description ctrl+F2
593=to read \nthe mos the purpose and you will ce\n\nlove is hte \nlove is acti verb
2274=what makes applie products so populars
592=to understand others to find theire point of videw and that is thwy we dig in \nyuo don't want to knwo the qthing s \nif you think so \npeople want to validate the things they eneed and that i swhy \nyou don't know that it is \nsomething you don't want to say but you say it then it is againest the will but you have to be transparent\n\n
1189=333\nhttp\://javarevisited.blogspot.com/2011/11/struts-interview-questions-answer-j2ee.html
2273=qualities of good softwares
591=i don't acare i don't want ta job so i can say what ever i want and don't ecare about the result just say what you want without fearing the results\nif people really knotice you are a bad guy then it is thery time to take action 
1188=333\nhttps\://www.tutorialspoint.com/hibernate/hibernate_mapping_types.htm
2272=qualities of good products
590=60\nhttps\://msdn.microsoft.com/en-us/library/ee658124.aspx
1187=333\nhttps\://www.tutorialspoint.com/hibernate/hibernate_mapping_files.htm
2271=how to get the addreess of all tabs
1186=333\nhttp\://www.developersbook.com/struts/interview-questions/struts-interview-questions-faqs.php
2270=how to get all pages and save them into the files
1185=333\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-beannameurlhandlermapping-example/
1184=sd wedgy
1183=sd gait
1182=sd sag
1181=333\nhttp\://www.w3schools.com/jquery/jquery_hide_show.asp
1180=l\nhttps\://www.scribd.com/doc/72077969/Maven-Interview-Questions
589=120\nhttps\://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
588=120\nhttps\://en.wikipedia.org/wiki/GRASP_(object-oriented_design)
2269=sd percolator
587=l\nhttp\://www.short-funny.com/funniest-jokes-2.php
2268=k
586=l\nhttps\://intellipaat.com/tutorial/scala-tutorial/
2267=k
585=l\nhttp\://www.fromdev.com/2013/07/architect-interview-questions-and-answers.html
2266=sd amiss
584=l\nhttp\://career.guru99.com/shell-scripting-interview-questions/
2265=https\://www.airpair.com/js/javascript-framework-comparison\nhttps\://www.quora.com/How-do-Angular-js-and-Backbone-js-compare\nhttps\://www.sitepoint.com/unit-and-e2e-testing-in-angularjs/
583=l\nhttp\://career.guru99.com/top-100-networking-interview-questions-answers/
2264=grok\ntext file to schedule events\ncurl tutorial\nreplica\nshard\nminification\noffline pages\nwhat is express?\nlogstash user case\nelk use cases\nwhy is logs important\nwhat metrics to gather\ncontent personalization\ntraffic analysis\nGrunt\nlint\nplethora\nIFTTT\nZapier\nDSL\nlogstash codec\nbreak it down to granual elements\ntestacular\nclose the fucntion to mute everythign \nwhat is ejs?\nwhat is routes? \nMean stack \nmean stack tutorial\nstop ther therad\nauthentication\ntravis-ci\nhow to rewrite a book\nlumberjack\nFilebeat\nname time space\nutilities and architectureing\nwhat is management is to make something apear when ever you want \nas according to scientifically\nsyslogs\nNginx\nscope in angular js\nrootScope\ndollar sign\nweird things syntax\n$compile(elem)(scope);\nstrip\n$rootScope\n$controller\n$scope\nangular restrict\nwhat is scope \nangular el\nangular done\nsqs\npagerduty\nirc\nfrok isintax\nwhy log id so important
582=l\nhttp\://www.journaldev.com/3633/hibernate-interview-questions-and-answers
1179=l\nhttp\://www.testingbrain.com/interview/oracle-interview-questions.html/3
2263=https\://artandlogic.com/2013/05/angularjs-best-practices-ive-been-doing-it-wrong-part-3-of-3/
581=l\nhttp\://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-gs.html
1178=111\nhttps\://docs.oracle.com/javase/tutorial/uiswing/components/combobox.html
2262=https\://artandlogic.com/2013/05/angularjs-best-practices-ive-been-doing-it-wrong-part-2-of-3/
580=http\://howtodoinjava.com/java-8/java-8-tutorial-internal-vs-external-iteration/
1177=sd signpost
2261=http\://mochajs.org/
1176=111\nhttps\://www.bing.com/images/search?q\=connector+english&view\=detailv2&&id\=5F0FEB161A1285854560CAF6550DFAAB8B731DF2&selectedIndex\=47&ccid\=smevsm2l&simid\=608003599027341812&thid\=OIP.Mb267afb26da5a2bb323a2436e589de45o0&ajaxhist\=0
2260=http\://qunitjs.com/
1175=111\nhttps\://www.bing.com/images/search?q\=connector+english&view\=detailv2&&id\=D25EB27537FBB0E0B6B11955161DD4083AA6FAE7&selectedIndex\=49&ccid\=kaorbbhF&simid\=608041472045680843&thid\=OIP.M91aa2b6db845ff00f2573ced61a7a5b2o0&ajaxhist\=0
1174=111\nhttps\://www.tutorialspoint.com/nodejs/nodejs_introduction.htm
1173=111\nhttps\://www.tutorialspoint.com/design_pattern/design_pattern_overview.htm
1172=sd weary
1171=l\nhttp\://www.dotnetfunda.com/interviews/cat/45/design-pattern-practices
1170=111\nhttp\://www.w3schools.com/jquery/jquery_intro.asp
579=http\://docs.aws.amazon.com/AmazonS3/latest/gsg/GetStartedWithS3.html
578=l\nhttp\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/Welcome.html
2259=https\://jasmine.github.io/
577=l\nhttps\://www.tutorialspoint.com/spring/spring_interview_questions.htm
2258=vagrant
576=http\://www.lucidity.com/LucidDreamingFAQ2.html
2257=Elasticsearch's Query DSL syntax
575=http\://www.lifehack.org/articles/productivity/20-amazing-facts-about-dreams-that-you-might-not-know-about.html
2256=x\nhttp\://www.mkyong.com/mongodb/how-to-install-mongodb-on-windows/
574=http\://www.womansday.com/health-fitness/wellness/a1884/9-things-you-didnt-know-about-dreams-110657/
2255=devcenter\=C\:\\DevCenter\\DevCenter.exe
573=l\nhttp\://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html
2254=i don't want to conetinue becuase i hit the block and i don't kno who to proceed anymore and i have already read something and i don't want to co ntinuere there is ant a threa dand that is way
572=l\nhttp\://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html
1169=222\nhttp\://stackoverflow.com/questions/3085285/cohesion-coupling
2253=i don't want to conetinue becuase i hit the block and i don't kno who to proceed anymore and i have already read something and i don't want to co ntinuere there is ant a threa dand that is way
571=l\nhttp\://www.oodesign.com/
1168=222\nhttps\://www.tutorialspoint.com/hibernate/hibernate_environment.htm
2252=i don't want to conetinue becuase i hit the block and i don't kno who to proceed anymore and i have already read something and i don't want to co ntinuere there is ant a threa dand that is way
570=l\nhttps\://intellipaat.com/interview-question/cassandra-interview-questions/
1167=222\nhttp\://stackoverflow.com/questions/28918004/readwritelock-vs-stampedlock
2251=https\://skillcrush.com/2014/06/26/the-developer-mindset/
1166=222\nhttp\://stackoverflow.com/questions/28918004/readwritelock-vs-stampedlockhttp\://stackoverflow.com/questions/28918004/readwritelock-vs-stampedlock
2250=http\://solr-vs-elasticsearch.com/
1165=222\nhttps\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
1164=222\nhttps\://www.tutorialspoint.com/hibernate/hibernate_overview.htm
1163=222\nhttps\://www.tutorialspoint.com/hibernate/orm_overview.htm
1162=222\nhttp\://www.techoism.com/apache-solr-interview-questions/
1161=222\nhttp\://career.guru99.com/top-23-cassandra-interview-questions/
1160=222\nhttps\://thecloudview.wordpress.com/2015/04/29/cassandra-real-interview-questions-and-answers/
569=l\nhttps\://www.tutorialspoint.com/mongodb/mongodb_interview_questions.htm
568=l\nhttps\://intellipaat.com/interview-question/apache-storm-interview-questions/
2249=http\://joelabrahamsson.com/elasticsearch-101/
567=l\nhttps\://www.edureka.co/blog/interview-questions/top-apache-spark-interview-questions-2016/
2248=https\://www.elastic.co/guide/en/elasticsearch/guide/current/_using_code_examples.html
566=l\nhttp\://career.guru99.com/top-25-interview-questions-on-scala/
2247=http\://www.cybera.ca/news-and-events/tech-radar/introduction-to-logstash-getting-started/
565=l\nhttp\://howtodoinjava.com/core-java/collections/java-8-tutorial-streams-by-examples/
2246=https\://www.timroes.de/2015/02/07/kibana-4-tutorial-part-1-introduction/
564=sg how ti increase performance for java multiple threading
2245=https\://www.digitalocean.com/community/tutorials/how-to-use-kibana-dashboards-and-visualizations
563=l\nhttp\://winterbe.com/posts/2015/05/22/java8-concurrency-tutorial-atomic-concurrent-map-examples/
2244=http\://logz.io/blog/logstash-tutorial/
562=l\nhttp\://docs.aws.amazon.com/gettingstarted/latest/swh/website-hosting-intro.html
1159=222\nhttps\://www.edureka.co/blog/interview-questions/cassandra-interview-questions/
2243=https\://www.digitalocean.com/community/tutorials/how-to-use-logstash-and-kibana-to-centralize-and-visualize-logs-on-ubuntu-14-04
561=l\nhttps\://aws.amazon.com/ec2/
1158=222\nhttps\://intellipaat.com/interview-question/apache-solr-interview-questions/
2242=https\://www.toptal.com/java/using-logstash-to-streamline-email-notifications
560=l\nhttp\://howtodoinjava.com/core-java/collections/java-8-tutorial-streams-by-examples/
1157=222\nhttps\://www.quora.com/What-are-the-question-asked-in-apache-solr-interview
2241=http\://www.bogotobogo.com/Hadoop/ELK/ELK_ElasticSearch_Logstash_Kibana4.php
1156=222\nhttp\://tekslate.com/solr-interview-questions/
2240=http\://www.bogotobogo.com/Hadoop/ELK/ELK_ElasticSearch_Logstash.php
1155=222\nhttp\://www.kerneltraining.com/top-10-apache-solr-interviews-questions-answers/\n
1154=222\nhttp\://stackoverflow.com/questions/tagged/solr
1153=123\nhttp\://stackoverflow.com/questions/tagged/solr
1152=111\nhttp\://java-questions.com/keyConcepts-interview-questions-1.html
1151=333\nhttp\://stackoverflow.com/questions/6679376/add-field-in-solr-schema-xml
1150=222\nhttp\://www.guru99.com/cassandra-tutorial.html\#1
559=l\nhttp\://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/gsg-aws-tutorials.html
558=l\nhttp\://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/gsg-aws-tutorials.html
2239=http\://www.bogotobogo.com/Hadoop/ELK/ELK_ElasticSearch_Logstash.php
557=https\://git-scm.com/book/en/v2/Git-Basics-Tagging
2238=http\://blog.trifork.com/2014/01/28/using-logstash-elasticsearch-and-kibana-to-monitor-your-video-card-a-tutorial/
556=onenote 
2237=https\://java.libhunt.com/project/logstash/tutorials
555=linda
2236=http\://linuxbsdos.com/2015/12/28/a-logstash-tutorial-how-to-get-started/
554=what is clojure?
2235=https\://medium.com/@pereiragoncalo/logging-with-logstash-elasticsearch-kibana-and-redis-e855bc08975d\#.fjn0og3sr
553=java brains jaxrs restful api\=https\://javabrains.io/courses/javaee_jaxrs
2234=http\://www.bogotobogo.com/Hadoop/ELK/ELK_ElasticSearch_Logstash_Kibana4.php
552=l\nhttps\://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard.pdf
1149=333\nhttps\://www.bing.com/images/search?q\=mongodb+vs+cassandra&view\=detailv2&&id\=9111D15699865D58061FA517299B2773C333791A&selectedIndex\=1&ccid\=ZaUDq%2bnt&simid\=608022690157954986&thid\=OIP.M65a503abe9ed873652d377dc8915d313o0&ajaxhist\=0
2233=https\://dzone.com/articles/23-useful-elasticsearch-example-queries
551=what is single responsibility principles?
1148=222\nhttp\://www.bigdataanalyst.in/spark-interview-questions/
2232=http\://www.elasticsearchtutorial.com/elasticsearch-in-5-minutes.html
550=https\://en.wikipedia.org/wiki/Code_smell
1147=33\nhttp\://www.codeodor.com/index.cfm/2009/1/29/Answering-the-100-Interview-Questions-for-Software-Developers-Functional-Design/2705
2231=http\://joelabrahamsson.com/elasticsearch-101/
1146=https\://en.wikipedia.org/wiki/Relativism
2230=https\://www.elastic.co/guide/en/logstash/current/index.html
1145=333\nhttp\://www.tutorialspoint.com/jsf/
1144=http\://www.bing.com/images/search?q\=common+relationships+between+things&view\=detailv2&&id\=D044B2B8B7338236D9B2A825B36627EEC3DA8DEC&selectedIndex\=56&ccid\=75U%2fsS3e&simid\=608031116878612298&thid\=OIP.Mef953fb12dde9f36265a3e4c2c31818fH0&ajaxhist\=0
1143=222\nhttp\://www.w3schools.com/php/
1142=http\://www.greaterreality.com/notime.htm
1141=333\nhttp\://www.oodesign.com/
1140=http\://www.greaterreality.com/nodeath.htm
549=https\://javabrains.io/courses/javaee_jaxrs
548=sd puddle
2229=https\://www.elastic.co/guide/en/kibana/current/index.html
547=sd surreal
2228=https\://www.elastic.co/guide/en/elasticsearch/reference/5.1/index.html
546=123 movies\=http\://123movies.is/
2227=https\://www.elastic.co/guide/index.html
545=http\://tutorials.jenkov.com/software-architecture/n-tier-architecture.html
2226=http\://tutorialzine.com/2013/08/learn-angularjs-5-examples/
544=http\://www.mind-your-reality.com/seven_universal_laws.html
2225=https\://jptacek.com/2015/02/angularJS-Best-Practices/
543=http\://www.greaterreality.com/nospace.htm
2224=https\://artandlogic.com/2013/05/ive-been-doing-it-wrong-part-1-of-3/
542=http\://howtodoinjava.com/core-java/generics/complete-java-generics-tutorial/
1139=333\nhttps\://spec2000.net/06-basicphysics.htm
2223=https\://docs.angularjs.org/guide/unit-testing
541=\rit is my wife then yes\n\nyes to my wife i only care aobut mmy wife\n Dufgt \r\n\r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n20) Would you be willing to lie to a court for a close friend if it meant saving your friend from going to jail for life?\r\n
1138=333\nhttp\://physics.about.com/od/physics101thebasics/p/PhysicsLaws.htm
2222=https\://www.sitepoint.com/unit-and-e2e-testing-in-angularjs/
540=java 8 best practice 
1137=111\nhttps\://gradle.org/getting-started-gradle-java/
2221=http\://angulartestingquickstart.com/
1136=111\nhttp\://www.tutorialspoint.com/perl/
2220=https\://medium.com/google-developer-experts/angular-2-unit-testing-with-jasmine-defe20421584\#.aqjoajarn
1135=333\nhttps\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
1134=33\nhttp\://www.cloudsopedia.com/interviewquestions/j2ee/j2ee-jms.php
1133=30\nhttp\://javabeat.net/jms-interview-questions/
1132=444\nhttps\://www.quora.com/What-is-reactive-programming
1131=333\nhttp\://www.kennybastani.com/2015/07/spring-cloud-docker-microservices.html
1130=333\nhttp\://www.kennybastani.com/2015/07/spring-cloud-docker-microservices.html
539=java java 8 best practice 
538=i just wadont' want to leanr i t 
2219=http\://andyshora.com/unit-testing-best-practices-angularjs.html
537=http\://howtodoinjava.com/core-java/collections/java-8-tutorial-streams-by-examples/
2218=http\://odetocode.com/blogs/scott/archive/2013/06/10/simple-unit-tests-with-angularjs.aspx
536=time associate with the action \nwhen do you wan tit \nwhen do you want it\nwhen do you want it \nwhere do you want it \nwho do you want i t\nscheduler for the intes 
2217=https\://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
535=abuizeng
2216=https\://docs.angularjs.org/guide/unit-testing
534=l\nsg how to prepare for technical interview??
2215=i don't want to conetinue becuase i hit the block and i don't kno who to proceed anymore and i have already read something and i don't want to co ntinuere there is ant a threa dand that is way
533=sg there is no space
2214=http\://tutorialzine.com/2013/08/learn-angularjs-5-examples/
532=there is no space
1129=15\nhttp\://www.slideshare.net/doanduyhai/cassandra-for-the-ops-dos-and-donts
2213=i don't want to conetinue becuase i hit the block and i don't kno who to proceed anymore and i have already read something and i don't want to co ntinuere there is ant a threa dand that is way
531=how are you?
1128=StampedLock
2212=i don't want to conetinue becuase i hit the block and i don't kno who to proceed anymore and i have already read something and i don't want to co ntinuere there is ant a threa dand that is way
530=how are you?
1127=http\://stackoverflow.com/questions/4055736/what-is-a-smoke-test
2211=http\://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html
1126=https\://en.wikipedia.org/wiki/Smoke_testing_(software)
2210=https\://www.quora.com/How-does-garbage-collection-work-in-the-JVM
1125=30\nhttp\://docs.datastax.com/en/glossary/doc/glossary/gloss_node.html
1124=model user authorization, user profiles and permissions in a database
1123=sd slouch
1122=manage conflicts in a web application when different people are editing the same data?
1121=example of low coupling and high cohesion
1120=sd relativism
529=how are you?
528=how are you?
2209=sd interpolation
527=how are you?
2208=http\://stackoverflow.com/questions/19957280/angularjs-best-practices-for-module-declaration
526=1\nsg how are you?
2207=https\://scotch.io/tutorials/angularjs-best-practices-directory-structure
525=1\nsg how are you?
2206=http\://jacopretorius.net/2013/07/angularjs-best-practices.html
524=1\nsg how are you?
2205=https\://blog.angularjs.org/2014/02/an-angularjs-style-guide-and-best.html
523=1\nsg how are you?
2204=https\://artandlogic.com/2013/05/ive-been-doing-it-wrong-part-1-of-3/
522=1\nsg how are you?
1119=relativism
2203=https\://jptacek.com/2015/02/angularJS-Best-Practices/
521=1\nsg how are you?
1118=111\nhttp\://www.developersbook.com/spring/interview-questions/spring-interview-questions-faqs.php
2202=http\://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html
520=1\nsg how are you?
1117=111\nhttp\://www.developersbook.com/spring/interview-questions/spring-interview-questions-faqs.php
2201=http\://www.instanceofjava.com/2015/03/garbage-collections-interview-questions.html
1116=111\nhttp\://howtodoinjava.com/spring/spring-mvc/spring-mvc-interview-questions-with-answers/
2200=http\://javarevisited.blogspot.com/2012/10/10-garbage-collection-interview-question-answer.html
1115=333\nhttp\://www.techrepublic.com/blog/10-things/10-techniques-for-gathering-requirements/
1114=120\nhttps\://www.codeproject.com/Articles/22769/Introduction-to-Object-Oriented-Programming-Concep
1113=333\nhttp\://stackoverflow.com/questions/6742789/how-to-handle-memory-leaks-in-java-ee
1112=333\nhttp\://www.javatpoint.com/hibernate-interview-questions
1111=222\nhttp\://career.guru99.com/top-25-interview-questions-on-scala/
1110=222\nhttps\://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide
519=1\nsg how are you?
518=1\nsg how are you?
517=1\nsg how are you?
516=1\nsg how are you?
515=1\nsg how are you?
514=1\nsg how are you?
513=1\nsg how are you?
512=1\nbi how are you?
1109=222\nhttp\://solr-vs-elasticsearch.com/
511=you don't kneed to show you emotion\n\nit is everywhere\nit is seduxing when you showing it because you want ti t\n\nyou acan get it from everywhere and it is connecting you to everything \n\n\neverything is arewawre of you everything is know you \n\nthis movie is so cool and it tell us that we are all conneected and theis ia s\nthe truethc and fact we know it from the buttom ofr our hreart bcaseu we know \n\nit all the whole universe is aonccete addn that is it all \n\nwe thought that we are disconenected but we are actually connect aed as one in our gene and \nthat is the undeinialble facts thewr are are fall facintg\ni chasing love and love and what tif there is a down load therne i should tstop \nhi have to chase what really matter to me and doi t now.\n
1108=http\://www.bing.com/images/search?q\=divergent+thinking&view\=detailv2&&id\=9AF26BA85CBE301DDF5ECCD131B5D1AE9AD2B219&selectedIndex\=1&ccid\=1lHiLLst&simid\=608043293109783531&thid\=OIP.Md651e22cbb2de1d93316c0e9d754c5c2o0&ajaxhist\=0
510=bi Don't Stop Believin' (Live in Houston)
1107=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=4AC49DEBAE7AC58FEA39ED9C128515F57C996EDB&selectedIndex\=38&ccid\=xL7MX%2bmR&simid\=608013859697921108&thid\=OIP.Mc4becc5fe9913b013d55bf6f6b974262o0&ajaxhist\=0
1106=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=DF89355AA42A4DC0316FEB227419B0635FFA3FF5&selectedIndex\=11&ccid\=%2fOO7ILHj&simid\=608042751942002154&thid\=OIP.Mfce3bb20b1e32f6d5f217bfd69e79cc9o0&ajaxhist\=0
1105=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=FA03EB3FC552C29D52C573AFA8060BF3BAD33E06&selectedIndex\=35&ccid\=g3gC8l8c&simid\=608044018963516148&thid\=OIP.M837802f25f1cf37a9b9a1a5156d0f742o0&ajaxhist\=0
1104=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=304DD047C631BD28293A10B9DD7686FBC782B126&selectedIndex\=164&ccid\=ewkDAMUt&simid\=608024227746940177&thid\=OIP.M7b090300c52da70a2f62af83a1d6f290o0&ajaxhist\=0
1103=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=C82DD4585655229A4124E13288816FB39915C71D&selectedIndex\=258&ccid\=6NRP8RDC&simid\=608021388779326434&thid\=OIP.Me8d44ff110c25b5e53a021bc47963dceo0&ajaxhist\=0
1102=http\://www.lifehack.org/469096/8-signs-of-fake-nice-people-you-need-to-be-aware-of
1101=111\nhttp\://java-questions.com/keyConcepts-interview-questions-1.html
1100=222\nhttp\://stackoverflow.com/questions/tagged/solr
509=music
508=Stressed out 
507=stress out
506=music
505=https\://en.wikipedia.org/wiki/Letter_frequency
504=hotmail
503=siyuanzeng
502=word
501=everything connects and the close one is the bone you own that is why and everything can be beteter closer there might not be any relationship but the space and time is the clotsetest than anything else \nwhat i sthe universal relatiopnship that matters everything all teogether\nthe thisg is the coexist
500=ice age 
1799=https\://www.quora.com/Which-is-your-favourite-Design-Pattern-and-why
1798=sd esoteric
1797=https\://www.tutorialspoint.com/design_pattern/interpreter_pattern.htm
1796=https\://www.tutorialspoint.com/design_pattern/interpreter_pattern.htm
1795=https\://en.wikipedia.org/wiki/Code_refactoring
1794=http\://www.methodsandtools.com/archive/archive.php?id\=4
1793=http\://www.cs.unc.edu/~stotts/723/refactor/chap1.html
1792=http\://stackoverflow.com/questions/7174555/java-favorite-refactoring-techniques
1791=what is closure
1790=http\://nosql.mypopescu.com/post/573604395/tutorial-getting-started-with-cassandra
1789=sd heuristics
1788=OLTP
1787=l\nhttp\://grammar.about.com/od/words/a/notesonthealphabet.htm
1786=l\nhttp\://learnoutlive.com/10-fun-facts-about-the-english-alphabet/
1785=l\nhttps\://www.englishclub.com/interesting-facts/
1784=https\://www.bing.com/images/search?q\=english+writings&view\=detailv2&&id\=3C25709BF3DF2E26B0BE004EC2C9B052343D61E7&selectedIndex\=7&ccid\=uJTqSTLG&simid\=608034046047291133&thid\=OIP.Mb894ea4932c616f170df8fe4213cda75H0&ajaxhist\=0
1783=333\nhttp\://www.kgbanswers.com/whats-another-way-to-say-same-here/4589197
1782=http\://saltytruth.com/12-different-ways-of-saying-you-are-beautiful/
1781=sd you
1780=http\://www.fluentu.com/english/blog/say-goodbye-english/
1779=http\://www.phrasemix.com/collections/15-ways-to-say-hello-in-english
1778=YARN
1777=different ways of saying how are you
1776=than k different ways of saying you are welcome
1775=different ways of saying thank you
1774=sd here
1773=sd now
1772=https\://www.linkedin.com/pulse/20130501190655-52397036-100-ways-to-say-no
1771=http\://english-the-easy-way.com/Speaking/Ways_Say_Now.html
1770=sd salient
1769=what si the ways that i am always folloing and next anext it is so obviously there are oather ways but that is sfine 
1768=different ways of saying you
1767=sd you
1766=sd here
1765=different ways of saying here
1764=sd now
1763=different ways of saying now
1762=https\://www.bing.com/images/search?q\=cheatsheet+sql+desig&view\=detailv2&&id\=7F88D1977DED20A07F58AE1AE13669C5C3601218&selectedIndex\=13&ccid\=Nc24Yv1a&simid\=608045857208861183&thid\=OIP.M35cdb862fd5a095b10c671934f519c61o0&ajaxhist\=0
1761=https\://www.webdezign.co.uk/sql-joins-cheatsheet/
1760=https\://www.cheatography.com/david/cheat-sheets/object-oriented-design/
1759=http\://www.vogella.com/tutorials/Gradle/article.html
1758=x\nhttps\://gradle.org/getting-started-gradle-java
1757=x\nhttps\://gradle.org/getting-started-gradle-java
1756=x\nhttps\://gradle.org/getting-started-gradle-java/
1755=https\://www.tutorialspoint.com/struts_2/struts_ajax_tags.htm
1754=2017-01-12 13\:51\:39
1753=a
1752=a
1751="to know if you are in a dream"
1750=a
1749=a
1748=https\://blog.sqlauthority.com/2008/01/15/sql-server-what-is-dml-ddl-dcl-and-tcl-introduction-and-examples/
1747=http\://www.nltk.org/book/ch08.html
1746=https\://www.tutorialspoint.com/design_pattern/bridge_pattern.htm
1745=https\://www.ibm.com/support/knowledgecenter/en/SSGSG7_7.1.1/com.ibm.itsm.srv.doc/c_repl.html
1744=http\://stackoverflow.com/questions/10494431/sticky-and-non-sticky-sessions
1743=https\://moz.com/beginners-guide-to-link-building/types-of-links
1742=https\://en.wikipedia.org/wiki/Round-robin_scheduling
1741=http\://www.mkyong.com/tutorials/jsf-2-0-tutorials/
1740=https\://dzone.com/articles/rest-pagination-spring
1739=http\://www.c-sharpcorner.com/UploadFile/dacca2/fundamentals-of-unit-testing-unit-testing-of-ioc-code/
1738=http\://www.mkyong.com/tutorials/wicket-tutorials/
1737=2017-01-12 12\:22\:26
1736=https\://images.search.yahoo.com/yhs/search;_ylt\=AwrTcdvKzz9YID4ANy8nnIlQ?p\=critical+thinking+vs+non&fr\=yhs-mozilla-001&fr2\=piv-web&hspart\=mozilla&hsimp\=yhs-001\#id\=51&iurl\=http%3A%2F%2Fimage.slidesharecdn.com%2Ftimemanagement-new-141022060738-conversion-gate01%2F95%2Ftime-management-12-638.jpg%3Fcb%3D1413958442&action\=click
1735=http\://www.mkyong.com/tutorials/wicket-tutorials/
1734=l\nhttp\://www.mkyong.com/tutorials/wicket-tutorials/
1733=15\nhttp\://www.mkyong.com/tutorials/wicket-tutorials/
1732=15\nhttp\://www.testingbrain.com/interview/oracle-interview-questions.html/3
1731=15\nhttp\://www.mkyong.com/tutorials/spring-tutorials/
1730=http\://www.mkyong.com/tutorials/jsf-2-0-tutorials/
1729=15\nhttp\://www.mkyong.com/tutorials/jsf-2-0-tutorials/
1728=http\://www.mkyong.com/tutorials/spring-batch-tutorial/
1727=
1726=15\nhttp\://www.mkyong.com/tutorials/spring-batch-tutorial/
1725=http\://www.mkyong.com/tutorials/spring-security-tutorials/
1724=15\nhttp\://www.mkyong.com/tutorials/spring-security-tutorials/
1723=a
1722=http\://tutorials.jenkov.com/software-architecture/caching-techniques.html
1721=maven reporting plugin
1720=https\://www.tutorialspoint.com/spring/spring_bean_post_processors.htm
1719=IOC test
1718=http\://www.testingbrain.com/interview/oracle-interview-questions.html/4
1717=sd Latent
1716=customer customization using spark hive
1715=type of links
1714=a
1713=https\://www.tutorialspoint.com/spring/spring_bean_post_processors.htm
1712=https\://www.tutorialspoint.com/spring/spring_bean_post_processors.htm
1711=http\://www.w3schools.com/jquery/jquery_traversing.asp
1710=rest pagination
1709=sd synopsis
1708=a
1707=a
1706=sd moody
1705=a
1704=noSql replication strategy
1703=nodes replication
1702=https\://www.tutorialspoint.com/hibernate/hibernate_batch_processing.htm
1701=https\://www.tutorialspoint.com/maven/maven_build_life_cycle.htm
1700=https\://www.tutorialspoint.com/spring/spring_transaction_management.htm
2199=http\://java-questions.com/garbagecollection-interview-questions.html
2198=what is strong reference
2197=what is weak references
2196=http\://www.globalguideline.com/interview_questions/Questions.php?sc\=SSL_Secured_Socket_Layer
2195=https\://www.digitalocean.com/community/tutorials/sqlite-vs-mysql-vs-postgresql-a-comparison-of-relational-database-management-systems
2194=https\://answers.yahoo.com/question/index?qid\=20100406192700AAw1WmO
2193=http\://best-lucid-dreaming-techniques.com/how-to-have-sex-in-dreams.html
2192=http\://www.wikihow.com/Control-Your-Dreams
2191=https\://www.scientificamerican.com/article/how-to-control-dreams/
2190=what can i do with sdreams
2189=what can i do with sdreams\n
2188=https\://docs.angularjs.org/tutorial
2187=https\://angularjs.org/
2186=http\://www.w3schools.com/angular/
2185=https\://www.tutorialspoint.com/angularjs/angularjs_overview.htm
2184=http\://www.w3schools.com/angular/
1099=222\nhttp\://mindmajix.com/solr-interview-questions
2183=http\://career.guru99.com/top-25-angular-js-interview-questions/
1098=222\nhttp\://www.kerneltraining.com/top-10-apache-solr-interviews-questions-answers/
2182=http\://www.mkyong.com/mongodb/how-to-install-mongodb-on-windows/
1097=222\nhttp\://tekslate.com/solr-interview-questions/
2181=sd contemptuous
1096=222\nhttps\://www.quora.com/What-are-the-question-asked-in-apache-solr-interview
2180=sd pougue
1095=222\nhttp\://stackoverflow.com/questions/3206747/lucene-interview-questions
1094=222\nhttps\://intellipaat.com/interview-question/apache-solr-interview-questions/
1093=222\nhttps\://www.edureka.co/blog/interview-questions/cassandra-interview-questions/
1092=222\nhttps\://thecloudview.wordpress.com/2015/04/29/cassandra-real-interview-questions-and-answers/
1091=222\nhttp\://career.guru99.com/top-23-cassandra-interview-questions/
1090=222\nhttp\://www.techoism.com/apache-solr-interview-questions/
499=i don't want to develope relationship with thsese guys because t it sticks and so harda nd yest so hard
498=git commands\=https\://git-scm.com/book/en/v2/Git-Commands-Setup-and-Config
2179=sd infrary
497=a
2178=http\://howtodoinjava.com/core-java/collections/popular-hashmap-and-concurrenthashmap-interview-questions/\nhttp\://www.ian-irvine.com/on-writing/41-ways-to-create-and-heighten-suspense/\nhttp\://tutorials.jenkov.com/java-concurrency/volatile.html\nhttp\://tutorials.jenkov.com/java-concurrency/volatile.html\nhttp\://stackoverflow.com/questions/1855170/when-should-we-use-intern-method-of-string-on-string-constants\nhttp\://java-performance.info/string-intern-in-java-6-7-8/\nhttp\://thehistoryofenglish.com/issues_new.html\nhttp\://www.tutorialspoint.com/java/java_abstraction.htm\nhttp\://javarevisited.blogspot.sg/2011/09/javalangoutofmemoryerror-permgen-space.html\nhttp\://javarevisited.blogspot.com/2012/10/10-garbage-collection-interview-question-answer.html\nhttp\://javarevisited.blogspot.sg/2012/01/tomcat-javalangoutofmemoryerror-permgen.html\nhttp\://javarevisited.blogspot.sg/2011/05/java-heap-space-memory-size-jvm.html\nhttp\://www.tutorialspoint.com/apache_kafka/index.htm\nhttps\://www.tutorialspoint.com/apache_kafka/apache_kafka_integration_storm.htm\nhttp\://www.cubrid.org/blog/dev-platform/the-principles-of-java-application-performance-tuning/\nhttp\://www.dotnetfunda.com/interviews/cat/45/design-pattern-practices\nhttp\://www.dotnetfunda.com/interviews/cat/45/design-pattern-practices\nhttp\://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-gs-prepare-data-and-script.html\nhttp\://www.tutorialspoint.com/apache_kafka/index.htm\nhttp\://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-gs-process-sample-data.html\nhttp\://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-gs-process-sample-data.html\nhttps\://www.tutorialspoint.com/apache_kafka/apache_kafka_introduction.htm\nhttps\://www.tutorialspoint.com/apache_kafka/apache_kafka_fundamentals.htm\nhttps\://www.tutorialspoint.com/apache_kafka/apache_kafka_integration_spark.htm\nhttps\://www.tutorialspoint.com/struts_2/struts_value_stack_ognl.htm\nhttp\://www.wikihow.com/Create-a-Made-Up-Word\nhttp\://thehistoryofenglish.com/issues_new.html\nhttps\://www.quora.com/Why-do-Indians-create-new-English-words\nhttp\://www.wikihow.com/Create-a-Made-Up-Word
496=a
2177=customer customization machine laearning haddooop spark hibe hive\ncustomer recommendation spark hive\nstruts dispatcher filter\nwhat is good\nSpring exception handling\nwhat does it mean deatached hibernate\njms tutorial\njms interview questions\njms architecture\nconcurrency framework interview qauietions java\nconcurrency interview questions java\ngeneric java interveiw quesitons\nbackbone.js tutorial\nbackbone.js documentation\nbackbone.js\ndifferent ways of avoiding \nwhere can i sleep without a home in us \nwhere can i sleep without a home in american \ntypeof recursive functions
495=a
2176=https\://en.wikipedia.org/wiki/The_Stand
494=a
2175=http\://www.geekinterview.com/question_details/3483
493=ice age\=http\://123movies.is/film/ice-age-2023/
2174=something you want \nsex \nlove and seducing to love 
492=Ice Age\: Continental Drift 
1089=http\://stackoverflow.com/questions/1091045/is-it-good-practice-to-use-java-lang-string-intern
2173=why i can remember thwa t i say because i say in love \ni reember twhat other epopel say because they teach me something because they give me somet love what ydo you men love becaseu i give you the best response that is mind mbening 
491=rushhour 
1088=111\nhttp\://www.oracle.com/technetwork/articles/java/jconsole-1564139.html
2172=the tietle is the enity and it inclusive teverything in the title under the title 
490=https\://help.github.com/
1087=https\://www.englishforums.com/English/SpinByproductSideProduct/bvhllx/post.htm
2171=upi are what you say the technologies is what you say there are so much what you say is always there ant d that is try true the technologies i sjjust liktea tpopel e 
1086=111\nhttp\://stackoverflow.com/questions/458817/java-swing-libraries-tools-layout-managers
2170=http\://scalatutorials.com/tour/interactive_tour_of_scala_operators_are_methods.html
1085=222\nhttp\://www.codeodor.com/index.cfm/2009/1/29/Answering-the-100-Interview-Questions-for-Software-Developers-Functional-Design/2705
1084=js faces
1083=common relationships
1082=http\://www.bing.com/images/search?q\=relativistic+thinking&view\=detailv2&&id\=2DA6C6EAA3EB14BAEF00CED3C979BBB5634CC6EA&selectedIndex\=11&ccid\=P7D6iuZY&simid\=607999437196296919&thid\=OIP.P7D6iuZYZCZWKjB9ktEBMAEsCx&ajaxhist\=0
1081=http\://stackoverflow.com/questions/1913098/what-is-the-difference-between-an-interface-and-abstract-class
1080=https\://www.englishforums.com/English/SpinByproductSideProduct/bvhllx/post.htm
489=Ice Age\: Continental Drift 
488=java 8 best practice\=https\://zeroturnaround.com/rebellabs/java-8-best-practices-cheat-sheet/
2169=sd idea
487=https\://zeroturnaround.com/rebellabs/java-8-best-practices-cheat-sheet/
2168=sd grunt
486=there is no lure there is sexual desire ther ei sno desire it goes awayand never come back that is the desire go
2167=https\://www.tutorialspoint.com/maven/maven_project_templates.htm
485=music
2166=http\://maven.apache.org/plugins/index.html
484=music
2165=http\://www.dictionary.com/browse/servlet?s\=t
483=http\://winterbe.com/posts/2015/05/22/java8-concurrency-tutorial-atomic-concurrent-map-examples/
2164=newtwork security\ntype of promgrammers\npath to become tech lead\nparth to become architect\nwhat is servelet
482=http\://winterbe.com/posts/2015/04/30/java8-concurrency-tutorial-synchronized-locks-examples/
1079=sd instinctive
2163=http\://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api\nhttp\://blog.mwaysolutions.com/2014/06/05/10-best-practices-for-better-restful-api/\nhttp\://www.restapitutorial.com/media/RESTful_Best_Practices-v1_1.pdf\nhttp\://devproconnections.com/web-development/restful-api-development-best-practices\nhttp\://stackoverflow.com/questions/389169/best-practices-for-api-versioning\nhttps\://developer.salesforce.com/page/Chatter_API\:_Examples,_Best_Practices,_and_Tips\nhttps\://phraseapp.com/blog/posts/best-practice-10-design-tips-for-apis/\nhttp\://www.restapitutorial.com/\nhttp\://www.slideshare.net/scolebourne/java-se-8-best-practices-53975908\nhttps\://zeroturnaround.com/rebellabs/java-8-best-practices-cheat-sheet/\nhttps\://www.quora.com/What-are-some-best-practices-in-using-the-Java-8-JVM-Metaspace\nhttp\://www.slideshare.net/wso2.org/java-8-and-best-practices-69344861\nhttp\://www.baeldung.com/java-8-lambda-expressions-tips\nhttps\://community.oracle.com/docs/DOC-920950\nhttp\://thewritepractice.com/7-steps-to-creating-suspense/\nhttp\://www.wikihow.com/Create-Suspense-in-Fiction\nhttps\://opinionator.blogs.nytimes.com/2012/12/08/a-simple-way-to-create-suspense/?_r\=0\nhttps\://www.psychologytoday.com/blog/dreaming-freud/201612/how-create-suspense\nhttp\://www.wikihow.com/Tell-a-Story\nhttps\://www.sitepoint.com/my-favorite-javascript-design-pattern/
481=\u8BB8\u5DCD \u66FE\u7ECF\u7684\u4F60 \u9AD8\u6E05\u73B0\u573A\u7248.mp4 
1078=sd viscera
2162=http\://blog.csdn.net/huangfan322/article/details/46234695
480=java 8 concurrency\=http\://winterbe.com/posts/2015/04/07/java8-concurrency-tutorial-thread-executor-examples/
1077=sd fuse
2161=http\://blog.csdn.net/huangfan322/article/details/46234695
1076=333\nhttps\://www.quora.com/What-is-the-Hashing-technique
2160=C\:\\Users\\SiyuanZeng's\\Videos\\Study\\JAVA\\Effective Java\\Effective Java\\Effective Java PPT\\Bloch3_Methods Common to All Objects.pptx
1075=222\nhttp\://www.agilemodeling.com/essays/prioritizedRequirements.htm
1074=150\nhttp\://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html
1073=http\://www.w3schools.com/jquery/jquery_chaining.asp
1072=http\://www.c-sharpcorner.com/UploadFile/cda5ba/object-oriented-programming-with-real-world-scenario/
1071=55\nhttp\://www.short-funny.com/best-knock-jokes-2.php
1070=How can you reduce the user\u2019s perception of waiting when some functions take a lot of time - See more at\: http\://noop.nl/2009/01/100-interview-questions-for-software-developers.html\#sthash.wwvCyXLz.dpuf
479=http\://www.testingbrain.com/interview/oracle-interview-questions.html/2
478=l\nhttp\://winterbe.com/posts/2014/03/16/java-8-tutorial/
2159=sd kludgey
477=l\nhttp\://winterbe.com/posts/2015/04/07/java8-concurrency-tutorial-thread-executor-examples/
2158=sd canny
476=C\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
2157=https\://www.bing.com/images/search?q\=java+collections&view\=detailv2&&id\=D286343708BB7F0BC4D06D2F7793665D9A28211E&selectedIndex\=0&ccid\=JjwYEySu&simid\=608017914153013040&thid\=OIP.M263c181324ae8f585d58b6f9e9d2f4d2o0&ajaxhist\=0
475=java 8\=C\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
2156=sd jinx
474=http\://www.manning.com/ebookoffer
2155=sd instigator
473=Ice Age\: Continental Drift 
2154=sd levity
472=Ice Age\: Continental Drift 
1069=55\nhttps\://www.codeproject.com/articles/28309/design-pattern-faq-part-training
2153=http\://cs.stackexchange.com/questions/451/why-are-there-so-many-programming-languages
471=Ice Age\: Continental Drift 
1068=smoke test
2152=synchronizedList synchronized level
470=ice Ice Age\: Continental Drift 
1067=http\://www.geeksforgeeks.org/can-we-overload-or-override-static-methods-in-java/
2151=bridge pattern vs 
1066=sd brazen
2150=https\://corporatetrainingmaterials.com/course/Body_Language_Basics?gclid\=CNj7puLbwtECFRB4fgodqUQHwQ
1065=http\://www.geeksforgeeks.org/can-we-overload-or-override-static-methods-in-java/
1064=http\://javahungry.blogspot.com/2013/06/difference-between-string-stringbuilder.html
1063=sd brash
1062=sd insolent
1061=111\nhttps\://www.toptal.com/nodejs/interview-questions
1060=sd bugger
469=onenote 
468=OneNote \u7B14\u8BB0\u672C\=C\:\\Users\\SiyuanZeng's\\Documents\\OneNote \u7B14\u8BB0\u672C
2149=http\://www.ehow.com/how_2257726_explain-something-clearly.html
467=onenote 
2148=https\://healthunlocked.com/headway/posts/908098/do-you-have-difficulty-explaining-things-clearly
466=https\://en.wikipedia.org/wiki/Software_Engineering_Body_of_Knowledge
2147=algorithm summary
465=a
2146=data structure summary
464=a
2145=http\://cdn.journaldev.com/wp-content/uploads/2013/01/java-collections-framework.pdf
463=a
2144=http\://cdn.journaldev.com/wp-content/uploads/2013/01/java-collections-framework.pdf
462=a
1059=111\nhttp\://www.buggybread.com/2015/02/java-j2ee-technical-lead-interview.html
2143=dequeue example
461=bi critical thinking
1058=sd fluke
2142=http\://www.journaldev.com/1260/collections-in-java-tutorial
460=c\nmusic
1057=sd sagacity
2141=http\://www.techrepublic.com/blog/10-things/10-ways-to-explain-things-more-effectively/
1056=111\nhttp\://www.geekinterview.com/Interview-Questions/J2EE/Java-Patterns
2140=http\://www.techrepublic.com/blog/10-things/10-ways-to-explain-things-more-effectively/
1055=sd primed
1054=java architect learning path
1053=swing libraries
1052=111\nhttps\://intellipaat.com/interview-question/drools-interview-questions/
1051=111\nhttps\://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide
1050=sd denunciation
459=joke you wi ll rememer and talk about nonsense you will remember that don't do that
458=wei ni wo shou leng feng chui\=http\://listenonrepeat.com/?v\=ZD57Fv_V74s\#%E6%9E%97%E6%86%B6%E8%93%AE_Sandy_Lam%E3%80%90%E7%82%BA%E4%BD%A0%E6%88%91%E5%8F%97%E5%86%B7%E9%A2%A8%E5%90%B9_Suffer_for_you%E3%80%91Official_Music_Video
2139=character, byte, stream
457=abuizeng
2138=C\:\\Users\\SiyuanZeng's\\Videos\\Study\\JAVA\\Effective Java\\Effective Java\\Effective Java PPT
456=https\://git-scm.com/book/en/v2
2137=http\://www.bing.com/images/search?q\=epistemological&view\=detailv2&&id\=F1228425A568201BE5AB195CEE70C857083EBA25&selectedIndex\=0&ccid\=Rzqo0H8E&simid\=608046630297731899&thid\=OIP.M473aa8d07f0408d15c005b8b4b0010eeo0&ajaxhist\=0
455=python\=http\://www.learnpython.org/
2136=http\://velocity.apache.org/engine/devel/getting-started.html
454=a
2135=https\://en.wikipedia.org/wiki/Abstraction
453=bi mode operation
2134=http\://www.orafaq.com/faq/what_are_the_difference_between_ddl_dml_and_dcl_commands
452=a
1049=common relationship between everythings
2133=https\://www.quora.com/What-are-the-must-know-things-if-you-are-joining-as-Java-architect
451=a
1048=everything about everything
2132=http\://englishwithatwist.com/2014/03/31/english-skills-7-ways-of-saying-i-dont-know/
450=a
1047=111\nhttps\://www.toptal.com/git/interview-questions
2131=http\://englishwithatwist.com/2014/03/31/english-skills-7-ways-of-saying-i-dont-know/
1046=111\nhttp\://www.interestingfacts.org/
2130=https\://www.quora.com/What-is-reactive-programming
1045=spin off vs by product
1044=111\nhttps\://www.toptal.com/git/interview-questions
1043=111\nhttp\://career.guru99.com/top-40-interview-questions-on-git/
1042=http\://career.guru99.com/top-40-interview-questions-on-git/
1041=111\nhttp\://howtodoinjava.com/spring/spring-core/top-spring-core-interview-questions-with-answers/
1040=111\nhttp\://career.guru99.com/top-20-maven-interview-questions/
449=a
448=Ice Age\: Continental Drift 
2129=sd monad
447=Ice Age\: Continental Drift 
2128=abstraction
446=Ice Age\: Continental Drift 
2127=https\://www.tutorialspoint.com/spring/spring_bean_post_processors.htm
445=Ice Age\: Continental Drift 
2126=UDF
444=Ice Age\: Continental Drift 
2125=http\://spark.apache.org/sql/
443=ll\nhttp\://www.rd.com/jokes/
2124=https\://www.tutorialspoint.com/jsf/jsf_environment_setup.htm
442=TodoApp
1039=111\nhttp\://career.guru99.com/top13-apache-storm-interview-questions/
2123=https\://www.tutorialspoint.com/jsf/jsf_overview.htm
441=siyuanzeng@hotmail
1038=111\nhttp\://www.careerride.com/Spring-Interview-Question.aspx
2122=http\://spark.apache.org/graphx/
440=hotmail
1037=111\nhttp\://career.guru99.com/top-14-kafka-interview-questions/
2121=https\://spark.apache.org/docs/latest/sparkr.html
1036=111\nhttp\://www.dailywritingtips.com/100-mostly-small-but-expressive-interjections/
2120=https\://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide
1035=111\nhttp\://tutorials.jenkov.com/java-collections/index.html
1034=sd kinesthetic
1033=sd daze
1032=sd daze
1031=How can I monitor a Java application
1030=sd stoop
439=http\://www.engineeringandcareering.co.uk/2013/05/the-well-rounded-technical-lead-model.html
438=abuizeng
2119=http\://www.testingbrain.com/interview/oracle-interview-questions.html/4
437=rushhour 
2118=http\://www.testingbrain.com/interview/oracle-interview-questions.html/4
436=rush hour 
2117=http\://www.testingbrain.com/interview/oracle-interview-questions.html/4
435=http\://www.dailywritingtips.com/20-types-and-forms-of-humor/
2116=http\://www.geekinterview.com/Interview-Questions/J2EE/Java-Patterns
434=bi types of jokes\n
2115=http\://www.geekinterview.com/Interview-Questions/J2EE/Java-Patterns
433=outlook\=C\:/Program Files (x86)/Microsoft Office/root/Office16/OUTLOOK.EXE
2114=sd amped
432=ZBox\=C\:\\Users\\SiyuanZeng's\\Downloads\\ZBox
1029=http\://spark.apache.org/sql/
2113=sd adrenalin
431=friends51 vidio 
1028=https\://spark.apache.org/docs/latest/sparkr.html
2112=how to use String.intern() method
430=gitbash
1027=http\://spark.apache.org/graphx/
2111=What is polymorphism? Explain with example
1026=relativistic thinking
2110=who create the english words
1025=111\nhttps\://www.dezyre.com/article/top-100-hadoop-interview-questions-and-answers-2017/159\#
1024=111\nhttp\://www.fromdev.com/2010/12/interview-questions-hadoop-mapreduce.html
1023=111\nhttp\://www.bigdataanalyst.in/spark-interview-questions/
1022=111\nhttp\://hadoopexam.com/Apache_Hive_Interview_Questions.pdf
1021=sd kinesthetic
1020=111\nhttp\://hortonworks.com/hadoop-tutorial/hands-on-tour-of-apache-spark-in-5-minutes/
429=gitbash
428=gitbash
2109=https\://www.tutorialspoint.com/maven/maven_overview.htm
427=gitbash
2108=http\://alvinalexander.com/java/java-extract-interface-refactoring-example-tutorial
426=gitbash
2107=http\://www.bing.com/search?q\=java+refactoring+examples
425=gitbash
2106=http\://www.bing.com/search?q\=crosscutting+concerns
424=gitbash
2105=https\://www.quora.com/What-is-the-actual-role-of-ZooKeeper-in-Kafka
423=gitbash
2104=http\://www.adlaitoday.org/ReadingTips_Students.pdf
422=TodoApp
1019=111\nhttp\://tekslate.com/cassandra-interview-questions-and-answers
2103=https\://www.tutorialspoint.com/hibernate/hibernate_criteria_queries.htm\nhttp\://stackoverflow.com/questions/1025181/hidden-features-of-scala\nhttps\://en.wikipedia.org/wiki/List_of_cognitive_biases\nhttps\://www.scribd.com/doc/72077969/Maven-Interview-Questions\nhttp\://io9.gizmodo.com/5974468/the-most-common-cognitive-biases-that-prevent-you-from-being-rational\nhttps\://www.tutorialspoint.com/jsp/jsp_overview.htm\nhttps\://www.quora.com/What-is-your-favorite-programming-language\nhttps\://slashdot.org/poll/920/favorite-language\nhttps\://answers.yahoo.com/question/index?qid\=20081005214849AAJJzsZ\nhttps\://news.ycombinator.com/item?id\=3746692\nhttp\://entjavastuff.blogspot.com/2010/06/maven-release-management.html\nhttp\://maven.apache.org/maven-release/maven-release-manager/plugin-management.html\nhttp\://www.journaldev.com/2110/jsp-interview-questions-and-answers\#jsp-benefits\nhttps\://www.tutorialspoint.com/design_pattern/bridge_pattern.htm\nhttp\://www.journaldev.com/2980/hibernate-ehcache-hibernate-second-level-cache\nhttp\://alvinalexander.com/scala/scala-2.10-whats-new-features\nhttps\://www.tutorialspoint.com/java8/java8_optional_class.htm\nhttp\://www.javainterview.in/p/hibernate-interview-questions.html\nhttp\://www.instanceofjava.com/2015/03/garbage-collections-interview-questions.html\nhttp\://stackoverflow.com/questions/3271287/final-object-in-java\nhttps\://en.wikipedia.org/wiki/Initial_and_terminal_objects\nhttp\://www.cio.com/article/2434640/developer/7-ways-to-improve-your-software-release-management.html\nhttp\://www.javatpoint.com/spring-expression-language-tutorial
421=bi friends season 5 episode 1
1018=111\nhttps\://thecloudview.wordpress.com/2015/04/29/cassandra-real-interview-questions-and-answers/
2102=http\://kafka.apache.org/documentation.html
420=Scala\=C\:/Users/SiyuanZeng's/Downloads/ZBox/a - Copy.html
1017=111\nhttp\://career.guru99.com/top-23-cassandra-interview-questions/
2101=http\://www.withoutbook.com/DifferenceBetweenSubjects.php
1016=111\nhttps\://intellipaat.com/interview-question/cassandra-interview-questions/
2100=complexity
1015=111\nhttp\://yonik.com/getting-started-with-solr/
1014=Apache Solr vs Elasticsearch\=http\://solr-vs-elasticsearch.com/
1013=elasticsearch 
1012=111\nhttps\://www.tutorialspoint.com/nodejs/nodejs_buffers.htm
1011=java memory leak
1010=http\://www.lucidity.com/LucidDreamingFAQ2.html\#EWLD
419=github login
418=C\:\\Developer\\Git\\bin\\sh.exe --login -i
417=git bash
416=git bash\=C\:\\Developer\\Git\\bin\\sh.exe
415=gitbash 
414=abuizeng
413=TodoApp
412=http\://www.steverrobbins.com/articles/ceojob/
1009=222\nhttp\://howtodoinjava.com/java-8/java-8-optionals-complete-reference/
411=https\://www.indeed.com/hire/cto?matchtype\=be&network\=search&device\=c&keyword\=cto%20job%20description&query\=cto%20job%20description&utm_source\=bing&utm_medium\=cpc&utm_term\=cto+job+description&utm_campaign\=job+description+pages+title+0+%28exact%29&utm_medium\=cpc&utm_source\=google_search&utm_campaign\=31809308&utm_term\=kwd-31085561359?utm_source\=bing&utm_content\=cto%20job%20description
1008=222\nhttp\://howtodoinjava.com/java-8/calculate-difference-between-two-dates-in-java/
410=http\://hiring.monster.com/hr/hr-best-practices/recruiting-hiring-advice/job-descriptions/java-architect-job-description.aspx
1007=convergent thinking
1006=divergent thinking
1005=sd extravaganza
1004=http\://searchdatabackup.techtarget.com/definition/data-archiving
1003=222\nhttp\://tutorials.jenkov.com/java-concurrency/volatile.html
1002=hash techniquer
1001=222\nhttps\://msdn.microsoft.com/en-us/library/ff647682.aspx
1000=222\nhttps\://www.frontendjournal.com/most-common-technical-interview-question-for-frontend-developers/
409=http\://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/
408=friends51 video  
407=time laugh that is all
406=http\://career.guru99.com/top-25-jms-java-message-service-interview-questions/
405=blog 
404=TodoApp
403=https\://www.bing.com/images/search?q\=machine+learning+example&view\=detailv2&id\=4A9BBA60AFF3E1EFDD953E81FF41F0334DA03621&selectedindex\=21&ccid\=TWv2h2Fm&simid\=608024206245629080&thid\=OIP.M4d6bf6876166d99b074d9d0c5bf4dabeo0&mode\=overlay&first\=1
402=friends51 vidio 
401=talk to achive something or get something finformaiton\ngive love to get love\ni give you love and get nothing
400=i don't want to talk with you i don't want to give you any love
1699=https\://www.tutorialspoint.com/spring/spring_transaction_management.htm
1698=a
1697=a
1696=https\://www.tutorialspoint.com/spring/event_handling_in_spring.htm
1695=Ronud Robin
1694=a
1693=a
1692=Sticky Session
1691=https\://www.tutorialspoint.com/maven/maven_intellij_idea.htm
1690=a
1689=now rollback
1688=DDL vs DML
1687=a
1686=a
1685=a
1684=http\://www.javatpoint.com/fibonacci-series-in-java
1683=https\://en.wikipedia.org/wiki/Middleware\#/media/File\:Linux_kernel_and_gaming_input-output_latency.svg
1682=http\://www.bing.com/search?q\=maven+plugins
1681=http\://www.tutorialspoint.com/soap/soap_message_structure.htm
1680=http\://www.journaldev.com/1037/java-thread-wait-notify-and-notifyall-example
1679=http\://stackoverflow.com/questions/11821801/why-use-a-reentrantlock-if-one-can-use-synchronizedthis
1678=java performance everything
1677=http\://lycog.com/concurency/performance-reentrantlock-synchronized/
1676=sd Coarsen
1675=http\://www.journaldev.com/2377/java-lock-example-reentrantlock
1674=sd Semaphore
1673=http\://javaconceptoftheday.com/synchronize-arraylist-hashset-and-hashmap-in-java/
1672=http\://stackoverflow.com/questions/6123024/synchronization-on-the-local-variables
1671=l\nhttp\://www.tutorialspoint.com/java/util/collections_synchronizedlist.htm
1670=sd rendesvouz
1669=333\nhttp\://softwareengineering.stackexchange.com/questions/146851/real-world-usage-of-delayqueue
1668=333\nhttps\://www.bing.com/images/search?q\=java+collections&view\=detailv2&&id\=A84B01D0E62B13E15020D8FE272DFF8BC313019B&selectedIndex\=16&ccid\=DoBLXNXf&simid\=608035828465467566&thid\=OIP.M0e804b5cd5df0072d11ac954996d3e94o0&ajaxhist\=0
1667=333\nhttps\://www.bing.com/images/search?q\=java+collections&view\=detailv2&&id\=D286343708BB7F0BC4D06D2F7793665D9A28211E&selectedIndex\=0&ccid\=JjwYEySu&simid\=608017914153013040&thid\=OIP.M263c181324ae8f585d58b6f9e9d2f4d2o0&ajaxhist\=0
1666=comparisons of databases
1665=333\nhttps\://en.wikipedia.org/wiki/List_of_HTTP_status_codes
1664=does apple computer has virus
1663=l\nhttps\://www.quora.com/How-can-I-improve-my-ability-to-explain-things
1662=l\nhttp\://www.ehow.com/how_2257726_explain-something-clearly.html
1661=l\nhttps\://healthunlocked.com/headway/posts/908098/do-you-have-difficulty-explaining-things-clearly
1660=l\nhttp\://www.techrepublic.com/blog/10-things/10-ways-to-explain-things-more-effectively/
1659=http\://www.techrepublic.com/blog/10-things/10-ways-to-explain-things-more-effectively/
1658=jndi user cases
1657=read a paragraph and expect something from it \nthere are a lot of stullfff\nwhat are the reslasihtops
1656=i have seen this fbefore \ni will see this again \ni wish i remember the diagram
1655=maven plugins
1654=sd cyclic
1653=l\nhttp\://www.journaldev.com/1260/collections-in-java-tutorial
1652=http\://www.journaldev.com/1260/collections-in-java-tutorial
1651=http\://www.journaldev.com/1260/collections-in-java-tutorial
1650=it has many component s what are each componenet doing 
1649=wy data analytics
1648=noSQL database cassandra Architect 
1647=erwin
1646=rest api elastic search tutorial
1645=how to integrate solr with cassandra
1644=how to save word cocument in solr
1643=different wants to answer i am sorry
1642=different ways to say say it again
1641=devcenter
1640=java Fibonacci series
1639=x\nhttps\://www.tutorialspoint.com/nodejs/nodejs_introduction.htm
1638=dao pattern
1637=etl offiline
1636=etl packages
1635=java cachineg framework
1634=java caching techniques
1633=https\://www.quora.com/What-are-the-must-know-things-if-you-are-joining-as-Java-architect\nhttps\://www.bing.com/search?q\=dml+vs+ddl&form\=EDGTCT&qs\=PF&cvid\=f62c12ef719a485e9869b9492274780d&pq\=dml+vs+ddl\nhttps\://www.bing.com/search?q\=hello+world+spring+mvc&form\=EDGTCT&qs\=PF&cvid\=fae547d23ca140509bdd064edff99cc6&pq\=hello+world+spring+mvc\nhttp\://www.tutorialspoint.com/jsp/jsp_interview_questions.htm\nhttp\://javarevisited.blogspot.com/2011/09/servlet-interview-questions-answers.html\nhttp\://www.instanceofjava.com/2015/03/garbage-collections-interview-questions.html\nhttp\://www.javatpoint.com/servletinterview\nhttps\://www.simple-talk.com/sql/sql-training/the-sql-server-query-optimizer/
1632=
1631=https\://www.quora.com/What-are-the-must-know-things-if-you-are-joining-as-Java-architect\nhttps\://www.bing.com/search?q\=dml+vs+ddl&form\=EDGTCT&qs\=PF&cvid\=f62c12ef719a485e9869b9492274780d&pq\=dml+vs+ddl\nhttps\://www.bing.com/search?q\=hello+world+spring+mvc&form\=EDGTCT&qs\=PF&cvid\=fae547d23ca140509bdd064edff99cc6&pq\=hello+world+spring+mvc\nhttp\://www.tutorialspoint.com/jsp/jsp_interview_questions.htm\nhttp\://javarevisited.blogspot.com/2011/09/servlet-interview-questions-answers.html\nhttp\://www.instanceofjava.com/2015/03/garbage-collections-interview-questions.html\nhttp\://www.javatpoint.com/servletinterview\nhttps\://www.simple-talk.com/sql/sql-training/the-sql-server-query-optimizer/
1630=https\://www.quora.com/What-are-the-must-know-things-if-you-are-joining-as-Java-architect\nhttps\://www.bing.com/search?q\=dml+vs+ddl&form\=EDGTCT&qs\=PF&cvid\=f62c12ef719a485e9869b9492274780d&pq\=dml+vs+ddl\nhttps\://www.bing.com/search?q\=hello+world+spring+mvc&form\=EDGTCT&qs\=PF&cvid\=fae547d23ca140509bdd064edff99cc6&pq\=hello+world+spring+mvc\nhttp\://www.tutorialspoint.com/jsp/jsp_interview_questions.htm\nhttp\://javarevisited.blogspot.com/2011/09/servlet-interview-questions-answers.html\nhttp\://www.instanceofjava.com/2015/03/garbage-collections-interview-questions.html\nhttp\://www.javatpoint.com/servletinterview\nhttps\://www.simple-talk.com/sql/sql-training/the-sql-server-query-optimizer/
1629=http\://javarevisited.blogspot.com/2012/03/what-is-daemon-thread-in-java-and.html
1628=https\://www.quora.com/What-are-the-must-know-things-if-you-are-joining-as-Java-architect
1627=https\://www.quora.com/What-are-the-must-know-things-if-you-are-joining-as-Java-architect
1626=https\://en.wikipedia.org/wiki/Performance_tuning
1625=https\://en.wikipedia.org/wiki/Performance_tuning
1624=ll\nhttps\://en.wikipedia.org/wiki/Performance_tuning
1623=https\://www.quora.com/What-are-some-interesting-use-cases-of-aspect-oriented-programming
1622=http\://stackoverflow.com/questions/2197051/aop-use-cases
1621=http\://www.engvid.com/10-ways-to-say-i-dont-know-in-english/
1620=http\://www.engvid.com/10-ways-to-say-i-dont-know-in-english/
1619=ll\nhttp\://englishwithatwist.com/2014/03/31/english-skills-7-ways-of-saying-i-dont-know/
1618=http\://englishwithatwist.com/2014/03/31/english-skills-7-ways-of-saying-i-dont-know/
1617=http\://englishwithatwist.com/2014/03/31/english-skills-7-ways-of-saying-i-dont-know/
1616=http\://www.dummies.com/education/language-arts/speed-reading/how-to-skim-text/
1615=http\://www.dummies.com/education/language-arts/speed-reading/how-to-skim-text/
1614=ll\nhttp\://www.dummies.com/education/language-arts/speed-reading/how-to-skim-text/
1613=http\://beginner-sql-tutorial.com/sql-query-tuning.htm
1612=http\://beginner-sql-tutorial.com/sql-query-tuning.htm
1611=ll\nhttp\://beginner-sql-tutorial.com/sql-query-tuning.htm
1610=https\://www.quora.com/How-do-servlets-handle-multiple-requests
1609=http\://www.instanceofjava.com/2015/03/garbage-collections-interview-questions.html
1608=http\://www.instanceofjava.com/2015/03/garbage-collections-interview-questions.html
1607=l\nhttp\://www.instanceofjava.com/2015/03/garbage-collections-interview-questions.html
1606=111\nhttps\://docs.oracle.com/javase/tutorial/java/generics/rawTypes.html
1605=https\://docs.oracle.com/javase/tutorial/java/generics/rawTypes.html
1604=https\://docs.oracle.com/javase/tutorial/java/generics/rawTypes.html
1603=https\://maven.apache.org/enforcer/maven-enforcer-plugin/
1602=https\://maven.apache.org/enforcer/maven-enforcer-plugin/
1601=http\://www.tutorialspoint.com/jsp/jsp_interview_questions.htm
1600=ll\nhttp\://www.tutorialspoint.com/jsp/jsp_interview_questions.htm
99=maybe yeas mayebe not but it an't matter\r\n ufgt \r\n\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 05\:56 am\r\nhow can i know that i bump into something special somtehing else \r\n\r\n\r\n
98=a lot of things i never know but it an't matter because i don't need ti \r\n ufgt \r\n\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 05\:40 am\r\nwhat do i need to know about one word a word a thing one thing like Walmart\r\n\r\n\r\n
97=\rwhy is more import\n ufgt \r\n\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 04\:57 am\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 04\:57 am\r\n\rassociate everything together and know what you are doing\n\r\nGood Morning C1 world, Wed, Sep 7, 2016 at 10\:42 am\r\nGood Morning C1 world, Wed, Sep 7, 2016 at 10\:42 am\r\nhow to why the big picture is improtant\r\n\r\nGood Morning C1 world, Wed, Sep 7, 2016 at 09\:39 am\r\nwhat is the big peicture and what ootl do they use to create the application\r\n\r\n\r\n\r\n\r\n\r\n\r\n
96=it is still here\r\n ufgt \r\n\r\nthis oen is still hereGood Morning C1 world, Thu, Sep 8, 2016 at 04\:40 amwht are the io since everything is about crude\r\n\r\nGood Morning C1 world, Thu, Dec 8, 2016 at 01\:23 am\r\n\r\n\r\nthis oen is still hereGood Morning C1 world, Thu, Sep 8, 2016 at 04\:40 amwht are the io since everything is about crude\r\n\r\n\r\n\r\n\r\n
95=this oen is still here\r\n ufgt \r\n\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 04\:40 am\r\nwht are the io since everything is about crude\r\n\r\n\r\n
94=care gives away mysel fand make myself ont the only one 
93=snag
92=snag
91=music
90=programs 
89=gitdd add commit git push command 
88=snag
87=snag 
86=snag 
85=snag 
84=snag 
83=snag 
82=snag 
81=snag
80=snag 
79=snag\=C\:/SoftwareInstallation/Media/TechSmith/Snagit/Snagit32.exe
78=snag 
77=I s there something i can do and use immediately immediate learning and useing 
76=know my self talking to myself i will learn something i will know whtat it isi all myself and that is it \nall myself \ni want to know how i feel and make others feel
75=what do i desire
74=what do i need
73=what do i want 
72=i lost all my data
71=solr start folder 
70=solr
2099=abstraction
2098=http\://stackoverflow.com/questions/6550700/inversion-of-control-vs-dependency-injection\nhttps\://www.codeproject.com/articles/592372/dependency-injection-di-vs-inversion-of-control-io\nhttp\://www.lifescript.com/well-being/articles/0/10_common_superstitions.aspx\nhttp\://list25.com/25-strangest-superstitions-ever/\nhttp\://www.oracle.com/technetwork/topics/bi/whatsnew/index.html\nhttps\://en.wikipedia.org/wiki/Data_warehouse\#/media/File\:Data_warehouse_overview.JPG\nhttps\://en.wikipedia.org/wiki/Data_warehouse\nhttp\://www.vogella.com/tutorials/ApacheTomcat/article.html\nhttp\://www.coreservlets.com/Apache-Tomcat-Tutorial/\#More-Info\nhttps\://developers.slashdot.org/story/16/08/30/2326212/slashdot-asks-what-are-your-favorite-java-8-features\nhttps\://www.reddit.com/r/java/comments/44mft2/what_are_some_of_your_favorite_intellij_plugins/\nhttp\://www.cioinsight.com/it-strategy/application-development/slideshows/eight-interesting-facts-about-java.html\nhttp\://docs.scala-lang.org/overviews/collections/overview\nhttps\://en.wikipedia.org/wiki/FreeMarker\nhttp\://freemarker.org/\nhttp\://www.cio.com/article/2434640/developer/7-ways-to-improve-your-software-release-management.html
2097=http\://www.tutorialspoint.com/spring/spring_java_based_configuration.htm
2096=https\://www.buzzfeed.com/jessicamisener/21-jokes-so-stupid-theyre-actually-funny?utm_term\=.pwqNWqG0M\#.mbE0N8O5w
2095=https\://en.wikipedia.org/wiki/Middleware\#/media/File\:Linux_kernel_and_gaming_input-output_latency.svg
2094=https\://www.englishforums.com/English/SalientFamousProminent/npgzc/post.htm
2093=https\://www.englishforums.com/English/SalientFamousProminent/npgzc/post.htm
2092=http\://www.vogella.com/tutorials/FreeMarker/article.html
2091=http\://freemarker.org/
2090=http\://www.bing.com/search?q\=ANSI
69=walmart timesheet 
68=walmart timesheet 
67=movie
66=movies
65=movies
64=family
63=interjections
62=family
61=bi gitignore common file
60=rush hour
2089=how to create suspense
2088=http\://pne.people.si.umich.edu/PDF/howtoread.pdf
2087=http\://www.cio.com/article/2434640/developer/7-ways-to-improve-your-software-release-management.html
2086=http\://www.cio.com/article/2434640/developer/7-ways-to-improve-your-software-release-management.html
2085=IOC VS DI
2084=http\://www.fromdev.com/2008/05/java-collections-questions.html\nhttp\://docs.datastax.com/en/cassandra/2.1/cassandra/gettingStartedCassandraIntro.html\nhttps\://blog.rackspace.com/cassandra-by-example\nhttp\://www.ebaytechblog.com/2012/07/16/cassandra-data-modeling-best-practices-part-1/\nhttps\://visualvm.java.net/gettingstarted.html\nhttp\://www.tutorialspoint.com/etl_testing/\nhttps\://en.wikipedia.org/wiki/List_of_programming_languages_by_type\nhttp\://chortle.ccsu.edu/java5/Notes/chap01%5Cch01_12.html\nhttp\://www.cs.bham.ac.uk/research/projects/poplog/examples/kinds-of-programming.html\nhttp\://www.bing.com/images/search?q\=type+of+programmings&view\=detailv2&id\=0541F7D011BDF3E8A30F757AD834CAE435560658&ccid\=x%2BQtourD&simid\=608025125401004233&thid\=OIP.Mc7e42da2eac32b8f18d7ab10bbdef979o0&mode\=overlay&first\=1\nhttp\://www.bing.com/images/search?q\=type+of+programmings&view\=detailv2&id\=F80B1AD3B3849BA2A8AFF14ED3B15E8F97D6D9C7&selectedindex\=19&ccid\=4DJLHIDT&simid\=608040651711844022&thid\=OIP.Me0324b1c80d3ca89cc306d940337e41eH0&mode\=overlay&first\=1\nhttp\://carlcheo.com/wp-content/uploads/2014/12/which-programming-language-should-i-learn-first-infographic.png\nhttp\://www.bing.com/images/search?q\=type+of+programmings&view\=detailv2&id\=A107E8FEF98829856E7733980E325EFEB9F145B9&selectedindex\=26&ccid\=MjkjPPEr&simid\=608036781948864560&thid\=OIP.M3239233cf12be878222ca344d8993693o0&mode\=overlay&first\=1\nhttps\://www.tutorialspoint.com/spring/custom_events_in_spring.htm\nhttp\://www.kawasakirobot.org/PDFs/Training%20Brochures/AS_Language.pdf\nhttps\://www.tutorialspoint.com/hibernate/hibernate_batch_processing.htm
2083=sd comprehension
2082=http\://www.scala-lang.org/docu/files/ScalaByExample.pdf
2081=http\://www.sql-tutorial.net/ETL.asp
2080=http\://www.theserverside.com/news/1363681/Scaling-Your-Java-EE-Applications\nhttp\://www.vogella.com/tutorials/designpattern.html\nhttp\://www.script-o-rama.com/movie_scripts/r/rush-hour-script-transcript-chan.html\nhttp\://www.tutorialspoint.com/data_communication_computer_network/computer_network_security.htm\nhttp\://blog.salsitasoft.com/what-i-wish-i-knew-when-starting-out-as-a-software-developer-slow-the-fuck-down/\nhttps\://linux.slashdot.org/story/10/09/06/1745236/programming-things-i-wish-i-knew-earlier\nhttp\://stackoverflow.com/questions/9809074/java-difference-between-strong-soft-weak-phantom-reference\nhttp\://tutorials.jenkov.com/scala/index.html\nhttp\://www.mkyong.com/tutorials/maven-tutorials/\nhttp\://www.oracle.com/technetwork/issue-archive/2016/16-jul/o46dba-mcdonald-3075286.html\nhttps\://www.tutorialspoint.com/maven/maven_snapshots.htm\nhttp\://www.orafaq.com/node/848\nhttp\://oracle.ittoolbox.com/groups/technical-functional/oracle-db-l/creating-a-standby-database-1813220\nhttps\://blog.udemy.com/scala-tutorial-getting-started-with-scala/\nhttp\://www.w3schools.com/jquery/jquery_animate.asp\nhttp\://www.bing.com/images/search?q\=types+of+programming+jobs&view\=detailv2&&id\=D237FEFB8770CAADE504F20873500D23CBC51437&selectedIndex\=103&ccid\=YiZjybr1&simid\=607987329692010452&thid\=OIP.M622663c9baf55a991b052a84a2956788o0&ajaxhist\=0\nhttp\://www.bing.com/images/search?q\=type+of+softwares&view\=detailv2&id\=95557B2B8C29D2F6BD6568D8EE29EC4F8AC0A4BD&selectedindex\=87&ccid\=7QUVAKaR&simid\=608007485967764005&thid\=OIP.Med051500a69163562d7a22b98a74f929o0&mode\=overlay&first\=1\nhttps\://www.tutorialspoint.com/design_pattern/flyweight_pattern.htm\nhttp\://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html\nhttp\://blog.cloudera.com/blog/2014/07/apache-hive-on-apache-spark-motivations-and-design-principles/\nhttp\://blog.smartbear.com/sqc/for-the-new-team-lead-the-first-six-things-you-should-know/\nhttps\://www.thoughtworks.com/insights/blog/5-tips-being-effective-tech-lead\nhttps\://en.wikipedia.org/wiki/Lead_programmer\nhttp\://engineering.foursquare.com/2014/01/30/good-tech-lead-bad-tech-lead/\nhttp\://www.cio.com/article/2433848/leadership-management/does-a-tech-manager-need-to-be-tech-savvy-.html\nhttp\://product.hubspot.com/blog/tech-lead-balancing-coaching-with-coding\nhttps\://www.madetech.com/blog/what-makes-a-great-tech-lead\nhttps\://www.glassdoor.com/Reviews/Employee-Review-Microsoft-RVW2106924.htm\nhttp\://www.ehow.com/about_6579834_technical-lead-job-description.html
59=Movies\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Movies.kpl
58=rush hour
57=Topogrophy\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Typogophy.kpl
56=quote\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Quotes.kpl
55=Best love quote\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Best Love Quote.kpl
54=movie\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie
53=rush hour
52=rush hour\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Rush hour.kpl
51=strong bad email\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Strong bad emails.kpl
50=friends51 vidio 
399=thre is no love in this kind of company
398=i don't know you have so much feeling sofor me \nhow can i make you really happy
2079=http\://stackoverflow.com/questions/20924970/how-to-save-object-variables-after-closing-my-program
397=yes \ndance in the tain ebrace the love\nadance in the rain \r\n Dufgt \r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n8) Have you ever danced in the rain?\r\n\r\n
2078=https\://www.mssqltips.com/sqlservertip/1921/best-practices-for-working-with-read-only-databases-in-sql-server/
396=reply to the last waord and ignre the rest because you want me to ignore it \ntoo much\njust enjoy all the feelings \nthat is all
2077=http\://gonitsora.com/algorithm-types-and-classification/
395=reply to the last waord and ignre the rest because you want me to ignore it \ntoo much\njust enjoy all the feelings \nthat is all
2076=http\://www.mi.fu-berlin.de/wiki/pub/ABI/DiscretMathWS10/runtime.pdf
394=a1\n2\n3\n4\n5\ny\ner\nyt\ny\nu\ni\n\no\n
2075=http\://gonitsora.com/algorithm-types-and-classification/
393=y\nu\ni\no\np\n
2074=https\://en.wikipedia.org/wiki/List_of_algorithms
392=a \nb\nr\nt\ny\ny\n
2073=http\://www.short-funny.com/funniest-jokes-9.php
391=e\nr\nt
2072=http\://www.w3computing.com/systemsanalysis/
390=q\nw\ne
2071=
2070=http\://www.tutorialspoint.com/software_engineering/software_design_basics.htm
49=mike2\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Mike Sui on a Train- The most AMAZING imitation video ever\!\u3010Mike\u968B\u51FA\u54C1\u3011\u8001\u5916\u5C4C\u4E1D2 - YouTube.MKV
48=mike 2\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Mike Sui on a Train- The most AMAZING imitation video ever\!\u3010Mike\u968B\u51FA\u54C1\u3011\u8001\u5916\u5C4C\u4E1D2 - YouTube.MKV
47=mike1\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Mike Sui at the bar (w_ English Subtitles) - YouTube.MP4
46=family
45=family\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\List-Family Guy.kpl
44=history
43=history 5
42=history
41=history
40=history 5
389=a\nb\nc\nd\ne\nf
388=a\nb\nc\nd\ne\nf
2069=http\://www.freetutes.com/systemanalysis/
387=a\nb\nc\ne\nd
2068=http\://softwareengineering.stackexchange.com/questions/17976/how-many-types-of-programming-languages-are-there
386=ab\nb\nc\nd\ne
2067=http\://www.concretepage.com/java/jdk-8/java-8-completablefuture-example
385=j\nk\nl
2066=http\://www.guru99.com/database-normalization.html
384=a\nb c\nb
2065=http\://www.bing.com/images/search?q\=software+developing+landscape&view\=detailv2&&id\=243C46BF5422CFA4CB65BADB19F4F599EE7DC469&selectedIndex\=11&ccid\=ukKumMgT&simid\=608045298867964640&thid\=OIP.Mba42ae98c8133bdd32cf1e02f83c9450o0&ajaxhist\=0
383=a\nb\nc
2064=https\://www.pluralsight.com/courses/azure-highly-scalable-web-applications
382=a\na\nb\nc\n
2063=https\://developers.redhat.com/blog/2014/08/14/find-fix-memory-leaks-java-application/
381=https\://www.bing.com/images/search?q\=creative+thinking+poster&view\=detailv2&&id\=9386DC5175BBDA791B86AD30BBB69D0CB117EB77&selectedIndex\=200&ccid\=8%2beyy5zh&simid\=608001610433038548&thid\=OIP.Mf3e7b2cb9ce1b28ffdb653476265462do0&ajaxhist\=0
2062=https\://www.dynatrace.com/blog/how-to-identify-a-java-memory-leak/
380=https\://www.bing.com/images/search?q\=creative+thinking+poster&view\=detailv2&&id\=88C4E451E271910346B665E929CF20B43152E8C2&selectedIndex\=110&ccid\=sXAxot2i&simid\=608041429056619330&thid\=OIP.Mb17031a2dda2cd9e16c9423b95c27b76o0&ajaxhist\=0
2061=http\://docs.oracle.com/cd/B19306_01/server.102/b14211/design.htm\#g34949
2060=sd preliminary
39=history
38=history 5
37=history 5
36=history 5
35=history 5
34=history 5
33=history 5
32=history
31=history 5
30=history 5
379=https\://www.bing.com/images/search?q\=creative+thinking+poster&view\=detailv2&&id\=1CC841D097FE22D10E8EB34DD64981125AC38F22&selectedIndex\=46&ccid\=0IYQoOWm&simid\=608010844594637416&thid\=OIP.Md08610a0e5a6362647a83804650f1d5aH0&ajaxhist\=0
378=https\://www.bing.com/images/search?q\=creative+thinking+poster&view\=detailv2&&id\=E936B5EA75DB4BCE8174DA8EA335685BEA187997&selectedIndex\=3&ccid\=1ab2rQJw&simid\=608011978473669322&thid\=OIP.Md5a6f6ad0270566ac9cf66e9b8705486o0&ajaxhist\=0
2059=http\://www.howtolearn.com/2012/08/different-reading-techniques-and-when-to-use-them/
377=https\://www.bing.com/images/search?q\=creative+thinking&view\=detailv2&&id\=FC8ECA30B192B145158A060D188DD9E5532089E8&selectedIndex\=13&ccid\=tASK6Jvq&simid\=608001610423733443&thid\=OIP.Mb4048ae89beaf7de51a26381aac8ff4fo0&ajaxhist\=0
2058=http\://lifehacker.com/264490/how-to-build-a-firefox-extension
376=shazam\=http\://www.midomi.com
2057=http\://www.tutorialspoint.com/listtutorials/java/security/1
375=shazam 
2056=THE STAND by stephen king
374=shazam 
2055=http\://www.infoworld.com/article/2608786/application-security/application-security-how-to-solve-java-s-security-problem.html
373=shazam
2054=http\://docs.oracle.com/javase/tutorial/security/
372=shazam\=www.midomi.com
2053=http\://docs.oracle.com/javase/tutorial/java/javaOO/innerclasses.html
371=Music fld 
2052=http\://www.tutorialspoint.com/java/java_innerclasses.htm
370=solr tutorial Apache Solr Tutorial for Beginners 
2051=http\://javabeginnerstutorial.com/core-java-tutorial/inner-class/
2050=http\://oregonstate.edu/instruct/ger341/reading2.htm
29=history 5
28=history 5
27=history 5
26=history 5
25=history 5
24=history 5
23=history 5
22=history 5
21=history
20=history 5
369=solr 
368=solr fld 
2049=http\://www.guru99.com/database-normalization.html
367=Lava 
2048=https\://www.codeproject.com/articles/891832/what-is-the-mission-of-a-software-developer
366=friends51 vidio 
2047=http\://www.missionstatements.com/technology_mission_statements.html
365=friends51 
2046=https\://dzone.com/articles/mission-software-architect
364=rushhour 
2045=2017-01-13 19\:47\:46
363=http\://www.columbia.edu/cu/biology/faculty/mowshowitz/explaining.html
2044=common bias
362=http\://www.columbia.edu/cu/biology/faculty/mowshowitz/explaining.html
2043=http\://www.mkyong.com/spring3/spring-aop-aspectj-annotation-example/
361=https\://www.bing.com/images/search?q\=how+to+explain&view\=detailv2&id\=D070D4902A964A967C991B01740F48B631FA7222&selectedindex\=2&ccid\=c%2FvYqdpL&simid\=608011317046021075&thid\=OIP.M73fbd8a9da4b5899ea84a28b468d8d3eo0&mode\=overlay&first\=1
2042=http\://www.bing.com/images/search?q\=types+of+programmer&view\=detailv2&&id\=01C5B544B389D92A30974D909F32E824F923C2A8&selectedIndex\=28&ccid\=%2f%2fXDFiYt&simid\=608036691752387451&thid\=OIP.__XDFiYtbQTwsAd8ulP4OgEsC_&ajaxhist\=0
360=https\://www.bing.com/images/search?q\=how+to+explain&view\=detailv2&id\=D070D4902A964A967C99D303E2E336B1F305B504&selectedindex\=3&ccid\=9p0CeSUA&simid\=608040402565729598&thid\=OIP.Mf69d027925002893d9a97ae99dcb7a1fo0&mode\=overlay&first\=1
2041=http\://www.bing.com/images/search?q\=programming+langdscape&view\=detailv2&&id\=E1CE7B47487F51731B9938609148BA689083A573&selectedIndex\=29&ccid\=NGLFCMRH&simid\=607986393398640667&thid\=OIP.M3462c508c447643f18abb711dcfc7371o0&ajaxhist\=0
2040=http\://javarevisited.blogspot.com/2012/04/10-points-on-interface-in-java-with.html
19=history 5
18=history 5
17=history 5
16=history 5
15=history 5
14=history 5
13=history
12=history
11=history
10=bi reverse iterate map
359=https\://www.bing.com/images/search?q\=how+to+explain+things&view\=detailv2&&id\=0096A7DFB2C472D01E9684B0D3915CF05345EC32&selectedIndex\=0&ccid\=g3xnzdlM&simid\=608053592403871002&thid\=OIP.M837c67cdd94cfe54c36f4bf793c0577ao0&ajaxhist\=0
358=https\://www.bing.com/images/search?q\=english+root+&view\=detailv2&&id\=729CC922F8005490945FBE03DF45499E75D16B4A&selectedIndex\=13&ccid\=l4EYiQPf&simid\=608022569855353632&thid\=OIP.M9781188903df022c9be792e3a6a9182co0&ajaxhist\=0
2039=http\://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_7001.htm
357=https\://www.bing.com/images/search?q\=connector+english&view\=detailv2&id\=F4BDCF74E318F3B51BEE7216FA7A81F906B98DF8&selectedindex\=3&ccid\=1t2wUjPm&simid\=608032667329891510&thid\=OIP.Md6ddb05233e6e259e1abdd68f0136b9eo0&mode\=overlay&first\=1
2038=https\://www.techonthenet.com/oracle/synonyms.php
356=https\://www.bing.com/images/search?q\=english+prepositions&view\=detailv2&id\=B2D41D9AEB9B6042E0A28AB72158B8EADCE1448E&selectedindex\=9&ccid\=a7O7hiro&simid\=608015397261476707&thid\=OIP.M6bb3bb862ae80311e0a271a743dff601H0&mode\=overlay&first\=1
2037=sd petrophysics
355=https\://www.bing.com/images/search?q\=english+prepositions&view\=detailv2&id\=7FE94913F5CDACEFFE872DF20ABFB602A1C679F6&selectedindex\=3&ccid\=NMlByfa%2B&simid\=608054438521209347&thid\=OIP.M34c941c9f6bee971b94df191381e4250o0&mode\=overlay&first\=1
2036=http\://www.bing.com/images/search?q\=cloud+computing+landscape&view\=detailv2&&id\=FAF1566ED5C78B24436D68E85BA4DAC6E2F42514&selectedIndex\=1&ccid\=IBsogobR&simid\=608053029798939692&thid\=OIP.M201b288286d141c4619024b5b6213a08o0&ajaxhist\=0
354=https\://www.bing.com/images/search?q\=english+prepositions&view\=detailv2&&id\=910D9E67447A71BC4404D1CDDD140043869AED1F&selectedIndex\=0&ccid\=POoy2YuO&simid\=608037073971711725&thid\=OIP.M3cea32d98b8e5cec5456eed6ca5fcdbcH0&ajaxhist\=0
2035=http\://www.bing.com/images/search?q\=bi+tools&view\=detailv2&&id\=173DF63F3F95D1E8D6CFEAB2FC6443E84BCEB20B&selectedIndex\=7&ccid\=OxubtWhF&simid\=608021161153859277&thid\=OIP.M3b1b9bb5684540750e315c92eefb4727o0&ajaxhist\=0
353=relationshiop\ntime \nplace \npeople\nprocess\n
2034=http\://www.bing.com/images/search?q\=bi+tools&view\=detailv2&&id\=DFB4C05D499BC1B2EFFC01B2D2B2DB4765E2E8CF&selectedIndex\=0&ccid\=%2f6DFzKDG&simid\=608005033546286932&thid\=OIP.Mffa0c5cca0c6fc4cebcb0a34dc8936c4o0&ajaxhist\=0
352=http\://javabeat.net/spring-boot/
2033=http\://www.bing.com/images/search?q\=type+of+softwares&view\=detailv2&&id\=BFEECFFAA62F4B5228BF4889C2BF4E1B8C8E4CB5&selectedIndex\=26&ccid\=O1BLbL7N&simid\=608017922737047377&thid\=OIP.M3b504b6cbecd7fde646075a7596e330fo0&ajaxhist\=0
351=Rush hour 3 
2032=https\://academy.datastax.com/planet-cassandra/oracle-to-cassandra-migration
350=https\://www.toptal.com/sql/interview-questions
2031=http\://stackoverflow.com/questions/29092826/oracle-to-apache-cassandra-data-migration
2030=https\://www.quora.com/I-am-working-on-a-migration-from-Oracle-DB-to-Cassandra-I-do-have-16-tables-in-Oracle-How-many-column-families-should-be-designed-to-migrate-these-16-tables
349=gitdd add commit git push command 
348=Lego batman 
2029=http\://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html
347=revealing\npattern\neverything\nthere\njumpinto\npeneetrate\nlight\n\ndark\nhide\nnohting\nonething\neverything black\nsearch hard
2028=sd ebb
346=https\://en.wikipedia.org/wiki/List_of_computing_and_IT_abbreviations
2027=most socmmon superstition
345=https\://guides.github.com/activities/hello-world/
2026=http\://www.tutorialspoint.com/data_communication_computer_network/computer_network_security.htm
344=https\://www.atlassian.com/git/tutorials/
2025=https\://manning-content.s3.amazonaws.com/download/5/b15473f-9d74-4b38-98b9-0e2a63986ae0/Java8iA_CH04.pdf
343=https\://www.atlassian.com/git/tutorials/advanced-overview
2024=http\://www.bing.com/images/search?q\=heuristics&view\=detailv2&&id\=9E3C582BE408EB1596C2180E1A1F3059397D8CF1&selectedIndex\=5&ccid\=c9lDl74b&simid\=608052325430395959&thid\=OIP.M73d94397be1b275d545cee10522176e8o0&ajaxhist\=0
342=http\://www.learnpython.org/
2023=https\://manning-content.s3.amazonaws.com/download/5/b15473f-9d74-4b38-98b9-0e2a63986ae0/Java8iA_CH04.pdf
341=http\://www.smosh.com/smosh-pit/articles/18-types-of-internet-trolls
2022=crosscutting concerns
340=emacs cheet sheet\=http\://www.rgrjr.com/emacs/emacs_cheat.html
2021=sd heuristic
2020=sd precognitive
339=https\://simpleprogrammer.com/2012/12/09/the-4-most-important-skills-for-a-software-developer/
338=https\://www.entrepreneur.com/article/240644
2019=sd procession
337=http\://www.criticalthinking.org/resources/resourcesImages/posters/poster_IntTraitsBIG.jpg
2018=https\://www.tutorialspoint.com/spring/event_handling_in_spring.htm
336=rushhour 
2017=https\://www.tutorialspoint.com/spring/spring_interview_questions.htm
335=http\://lekhaknawraj.blogspot.com/2016/04/network-security-interview-questions.html
2016=sd grunt
334=http\://www.interviewquestions365.com/2011/02/18/network-admin-interview-questions-and-answers/
2015=https\://www.tutorialspoint.com/mongodb/mongodb_replication.htm
333=http\://resources.intenseschool.com/network-engineer-network-administrator-security/
2014=https\://www.tutorialspoint.com/mongodb/mongodb_interview_questions.htm
332=teeel them what they want instead of ywhat you know or what you is actually happening
2013=http\://www.dictionary.com/browse/here?s\=t
331=why am i feel so uncomfirtable that i will be lying? because i dfound why am i so afraid of lying because lying is wrong nad people will leave you and not talking with you any more. people always saying that lying is wrong.
2012=http\://www.bing.com/images/search?q\=here
330=rushhour 
2011=https\://www.tutorialspoint.com/mongodb/mongodb_interview_questions.htm
2010=https\://dzone.com/articles/best-practices-variable-and
329=read conciously and purposely like the the middle and like the one because i have to use finger then i can use my mind as nabviagatier and remember it that is ti t 
328=wstart with why i f you know the significance they you will remember that is t is 
2009=sd provisional
327=\rYES GOOGLE\n Dufgt \r\n\r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n5) What have you always wanted? Did you ever get it?\r\n
2008=http\://www.thesaurus.com/browse/here?s\=t
326=https\://www.bing.com/images/search?q\=apache+kafka&view\=detailv2&&id\=6BA651D40D04E7D0C09E8EBD7488DA23089C5668&selectedIndex\=24&ccid\=rMp0lnqH&simid\=608051127089040434&thid\=OIP.Macca74967a8737d8ef7182ee4f026ceeo0&ajaxhist\=0
2007=http\://softwareengineering.stackexchange.com/questions/40454/what-is-a-closure
325=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterTraitsStandardsBIG.jpg
2006=https\://intellipaat.com/tutorial/scala-tutorial/basic-types-in-scala/
324=http\://java-developers-space.blogspot.in/2014/08/java-j2ee-interview-questions-for.html
2005=sd construe
323=http\://java-developers-space.blogspot.com/2013/08/struts-to-spring-migration.html
2004=http\://www.bing.com/images/search?q\=now&view\=detailv2&&id\=3613E138C6AA6A50EC773BF48BE49A894555C33B&selectedIndex\=4&ccid\=LaElF1m6&simid\=607986213009426833&thid\=OIP.M2da1251759bab88eb1ac9740471a20c5H0&ajaxhist\=0
322=get started with mean stack\=https\://hackhands.com/how-to-get-started-on-the-mean-stack/
2003=http\://www.short-funny.com/funniest-jokes-10.php
321=http\://www.tutorialspoint.com/nodejs/
2002=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterElements2BIG.jpg
320=set up mean stack \=https\://scotch.io/tutorials/setting-up-a-mean-stack-single-page-application
2001=why are there so many programming languages?
2000=https\://www.tutorialspoint.com/ruby-on-rails/rails-migrations.htm
319=Rush hour 2 
318=http\://vschart.com/compare/angularjs/vs/node-js
317=friends51 
316=Rush hour 2 
315=music
314=rushhour 
313=everybody is revealing some secreate to tme would you liek to know a secrete cops?
312=bi ClassNotFoundException\: com.mycompany.logproducer.SimplePartitioner
311=https\://en.wikipedia.org/wiki/Most_common_words_in_English
310=https\://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard.pdf
309=Intellij shortcut 
308=ehwllo
307=kafka set up and running kafka on windows\=https\://dzone.com/articles/running-apache-kafka-on-windows-os
306=C\:\\kafka_2.11-0.9.0.0\\config
305=https\://dzone.com/articles/running-apache-kafka-on-windows-os
304=ij see the connection myself only me see the connection and other people don't evn know
303=i know what you want that is it you want this answer and that answer you want some answers
302=https\://microsoftedgetips.microsoft.com/en-us?source\=f1
301=the interview is not about who you know but about the understanding you have that is it they want somebody who understand that what thehy like not necessary what you are or what you are not people liek through it but to meet their excpectation that is the thing
300=che and find the connect ion and bridge them together and they are alike lie that i lie about the terms and things what i have understand
1599=http\://www.tutorialspoint.com/jsp/jsp_interview_questions.htm
1598=http\://www.journaldev.com/2110/jsp-interview-questions-and-answers
1597=ll\nhttp\://www.journaldev.com/2110/jsp-interview-questions-and-answers
1596=ll\nhttp\://www.javainterview.in/p/hibernate-interview-questions.html
1595=http\://www.javainterview.in/p/hibernate-interview-questions.html
1594=http\://www.tutorialspoint.com/ibatis/ibatis_overview.htm
1593=http\://www.bing.com/images/search?q\=cloud+foundry&view\=detailv2&&id\=C0D7F1F0DB24EA390BD6FEAF1B09BC99FA68ADF3&selectedIndex\=12&ccid\=1jxSsfgO&simid\=607999347014174101&thid\=OIP.Md63c52b1f80e968fedfcddbeb7f15b0fo0
1592=ll\nhttps\://yourstory.com/2012/07/tutorial-getting-started-with-cloud-foundry-part-13/
1591=https\://yourstory.com/2012/07/tutorial-getting-started-with-cloud-foundry-part-13/
1590=https\://yourstory.com/2012/07/tutorial-getting-started-with-cloud-foundry-part-13/
999=222\nhttp\://www.wikihow.com/Reverse-the-String-in-Java
998=sd visceral
997=sd defuse
996=222\nhttp\://stackoverflow.com/questions/3035601/performance-profiler-for-a-java-application
995=String.intern() 
994=What is difference between String, StringBuffer and StingBuilder
993=Explain System.out.println() in detail\u00A0\u00A0\u00A0 \u00A0
992=java gabager collerctor
1589=http\://www.withoutbook.com/DifferenceBetweenSubjects.php
991=Can we overload the static method
1588=http\://www.withoutbook.com/DifferenceBetweenSubjects.php
990=Can we override static method
1587=ll\nhttp\://www.withoutbook.com/DifferenceBetweenSubjects.php
1586=l\nhttp\://www.javatpoint.com/spring-expression-language-tutorial
1585=l\nhttp\://www.kickvick.com/stupid-funny-jokes/
1584=http\://www.kickvick.com/stupid-funny-jokes/
1583=http\://www.kickvick.com/stupid-funny-jokes/
1582=https\://en.wikipedia.org/wiki/Software_configuration_management
1581=https\://en.wikipedia.org/wiki/Software_configuration_management
1580=l\nhttps\://en.wikipedia.org/wiki/Software_configuration_management
989=What is difference between abstract class and Interface
988=OOPS concepts with example
987=sd groan
986=java delegation 
985=sd epoxy
984=100\nhttp\://www.short-funny.com/funniest-jokes-3.php
983=222\nhttp\://howtodoinjava.com/core-java/collections/popular-hashmap-and-concurrenthashmap-interview-questions/
982=how ot prioritize requirements
1579=how to skim reading?
981=techniques for specifying requirements
1578=sd vexing
980=222\nhttp\://javarevisited.blogspot.com/2011/09/invokeandwait-invokelater-swing-example.html
1577=l\nhttp\://www.javainterview.in/p/hibernate-interview-questions.html
1576=http\://moduscreate.com/12-intellij-idea-keyboard-shortcuts/
1575=l\nhttp\://moduscreate.com/12-intellij-idea-keyboard-shortcuts/
1574=http\://moduscreate.com/12-intellij-idea-keyboard-shortcuts/
1573=https\://www.gartner.com/doc/2081915/cloud-characteristics-principles-design-patterns
1572=111\nhttps\://www.buzzfeed.com/jessicamisener/21-jokes-so-stupid-theyre-actually-funny
1571=https\://blog.docker.com/2015/03/why-i-love-docker-and-why-youll-love-it-too/
1570=http\://thenewstack.io/why-did-docker-catch-on-quickly-and-why-is-it-so-interesting/
979=222\nhttps\://www.tutorialspoint.com/spring/index.htm
978=222\nhttps\://www.tutorialspoint.com/spring/spring_overview.htm
977=123\nhttps\://www.tutorialspoint.com/nodejs/nodejs_event_emitter.htm
976=300\nhttp\://www.lifehack.org/399140/how-to-remember-90-of-everything-you-learn
975=sd divvy
974=sd festoon
973=sd wreath
972=sd strand
1569=http\://www.zdnet.com/article/what-is-docker-and-why-is-it-so-darn-popular/
971=sd impertinent
1568=http\://www.techrepublic.com/article/why-docker-and-why-now/
970=250\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-parameterizableviewcontroller-example/
1567=sd contentious
1566=sd baffling
1565=sd also-ran
1564=http\://www.slideshare.net/dotCloud/why-docker
1563=http\://www.slideshare.net/dotCloud/why-docker
1562=http\://www.slideshare.net/dotCloud/why-docker
1561=http\://www.slideshare.net/dotCloud/why-docker
1560=http\://www.techrepublic.com/article/why-docker-and-why-now/
969=250\nhttps\://intellipaat.com/tutorial/scala-tutorial/hello-program-in-scala/
968=250\nhttps\://www.tutorialspoint.com/spring/spring_bean_life_cycle.htm
967=250\nhttps\://intellipaat.com/tutorial/scala-tutorial/scala-installation/
966=250\nhttps\://www.tutorialspoint.com/nodejs/nodejs_introduction.htm
965=sd booze
964=SD booze
963=200\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-parameterizableviewcontroller-example/
962=200\nhttps\://www.tutorialspoint.com/struts_2/basic_mvc_architecture.htm
1559=l\nhttps\://www.quora.com/What-are-the-main-differences-between-JDBC-and-Hibernate-Which-is-more-superior-Why
961=200\nhttps\://www.tutorialspoint.com/hibernate/hibernate_overview.htm
1558=l\nhttp\://stackoverflow.com/questions/28163670/jdbc-vs-hibernate
960=200\nhttps\://www.tutorialspoint.com/hibernate/orm_overview.htm
1557=l\nhttp\://www.java-samples.com/showtutorial.php?tutorialid\=813
1556=https\://en.wikipedia.org/wiki/Java_Cryptography_Extension
1555=http\://knowledgesun.com/apache-activemq-interview-questions/
1554=http\://knowledgesun.com/apache-activemq-interview-questions/
1553=111\nhttp\://knowledgesun.com/apache-activemq-interview-questions/
1552=http\://www.bing.com/images/search?q\=CRC+diagram&view\=detailv2&&id\=3190EB2892055F72F026F149B4E8F1B4E6D34971&selectedIndex\=99&ccid\=AqV182UT&simid\=608020400936258787&thid\=OIP.M02a575f36513e19346fc98053ae70be1o0&ajaxhist\=0
1551=http\://www.bing.com/images/search?q\=CRC+diagram&view\=detailv2&&id\=09353C03AD9900F4434F59C974326FBC6A2B9F00&selectedIndex\=95&ccid\=wAK5%2b6EA&simid\=608021298590910854&thid\=OIP.Mc002b9fba1003f62f428a9c94111e381o0&ajaxhist\=0
1550=
959=200\nhttp\://www.mkyong.com/spring-mvc/gradle-spring-4-mvc-hello-world-example-annotation/
958=200\nhttps\://www.tutorialspoint.com/struts_2/basic_mvc_architecture.htm
957=200\nhttps\://www.tutorialspoint.com/hibernate/orm_overview.htm
956=200\nhttps\://www.tutorialspoint.com/maven/maven_overview.htm
955=sprkSQL
954=sparkR
953=graphX
952=250\nhttp\://www.journaldev.com/1696/exception-handling-in-java
1549=http\://www.bing.com/images/search?q\=CRC+diagram&view\=detailv2&&id\=DCF50E403BD32E259D441C3A9D38898687BDAB2E&selectedIndex\=23&ccid\=Vv8BSUFE&simid\=608047184353165867&thid\=OIP.M56ff0149414469fd598a9b151cabcd23o0&ajaxhist\=0
951=sd serendipity
1548=http\://blog.flux7.com/blogs/docker/docker-tutorial-series-part-1-an-introduction
950=sd crunch
1547=http\://media.amazonwebservices.com/CloudMigration-scenario-wep-app.pdf
1546=http\://www.mkyong.com/tutorials/spring-batch-tutorial/
1545=111\nhttp\://www.mkyong.com/tutorials/spring-batch-tutorial/
1544=111\nhttp\://developersbook.com/tibco/interview-questions/tibco-interview-questions-faqs.php
1543=111\nhttp\://tutorialspedia.com/tibco-ems-top-interview-questions-answers/
1542=http\://media.amazonwebservices.com/CloudMigration-scenario-wep-app.pdf
1541=222\nhttp\://media.amazonwebservices.com/CloudMigration-scenario-wep-app.pdf
1540=333\nhttps\://en.wikipedia.org/wiki/Middleware
949=sd denounciation
948=archive data
947=sd Kinesthetics
946=sd spin off
945=200\nhttps\://facebook.github.io/react/
944=200\nhttp\://blog.cloudera.com/blog/2014/07/apache-hive-on-apache-spark-motivations-and-design-principles/
943=sd outrageous
942=sd divergent
1539=https\://en.wikipedia.org/wiki/Middleware
941=sd convergent
1538=https\://en.wikipedia.org/wiki/Middleware
940=sd stupor
1537=333\nhttps\://en.wikipedia.org/wiki/Middleware
1536=spring 4 vs spring 3
1535=storm vs spark
1534=https\://en.wikipedia.org/wiki/Public_key_infrastructure
1533=what does a java architect know? 
1532=Software engineering models and methods
1531=different ways of saying i don't know
1530=https\://cwiki.apache.org/confluence/display/CXF20DOC/A+simple+JAX-WS+service
939=200\nhttp\://resources.intenseschool.com/network-engineer-network-administrator-security/
938=160\nhttp\://www.interviewquestions365.com/2011/02/18/network-admin-interview-questions-and-answers/
937=100\nhttp\://lekhaknawraj.blogspot.com/2016/04/network-security-interview-questions.html
936=sd epoxy
935=paradigm
934=60\nhttp\://www.short-funny.com/funniest-jokes-3.php
933=sd garland
932=sd gratuity
1529=https\://en.wikipedia.org/wiki/Application_lifecycle_management
931=sd diminutive
1528=https\://en.wikipedia.org/wiki/BOSH
930=sd diminutive
1527=https\://www.quora.com/What-are-the-differences-similarities-advantages-disadvantages-of-using-JAXB-vs-JAXP-in-creating-webservices
1526=https\://msdn.microsoft.com/en-us/library/ff647215.aspx
1525=https\://msdn.microsoft.com/en-us/library/ff647215.aspx
1524=l\nhttps\://msdn.microsoft.com/en-us/library/ff647215.aspx
1523=iBatis
1522=maven-enforcer-plugin
1521=http\://www.short-funny.com/best-knock-jokes-2.php
1520=http\://www.short-funny.com/best-knock-jokes-2.php
929=sd corona
928=diminutive
927=gratuity
926=15\ngarland
925=14\nhttps\://www.tutorialspoint.com/design_pattern/chain_of_responsibility_pattern.htm
924=sd berated
923=sd tirade
922=140\nhttps\://www.tutorialspoint.com/struts_2/struts_examples.htm
1519=100\nhttp\://www.short-funny.com/best-knock-jokes-2.php
921=150\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-hello-world-annotation-example/
1518=mvn dependency\:tree
920=15\nhttps\://blog.risingstack.com/the-react-way-getting-started-tutorial/
1517=5\nhttp\://www.wikihow.com/Memorize-a-List-in-Order
1516=http\://www.wikihow.com/Memorize-a-List-in-Order
1515=http\://www.wikihow.com/Memorize-a-List-in-Order
1514=15\nhttp\://www.wikihow.com/Memorize-a-List-in-Order
1513=spring expression language
1512=http\://pne.people.si.umich.edu/PDF/howtoread.pdf
1511=l\nhttp\://pne.people.si.umich.edu/PDF/howtoread.pdf
1510=http\://pne.people.si.umich.edu/PDF/howtoread.pdf
919=15\nhttps\://codegeekz.com/react-js-tutorial/
918=15\nhttps\://scotch.io/tutorials/learning-react-getting-started-and-concepts
917=15\nhttps\://scotch.io/tutorials/learning-react-getting-started-and-concepts
916=15\nhttps\://blog.risingstack.com/the-react-way-getting-started-tutorial/
915=log4j hello world\=http\://www.mkyong.com/logging/log4j-hello-world-example/
914=log4j hello world\=https\://www.tutorialspoint.com/struts_2/struts_interceptors.htm
913=130\nhttps\://www.tutorialspoint.com/struts_2/struts_interceptors.htm
912=140\nhttps\://www.tutorialspoint.com/hibernate/hibernate_mapping_files.htm
1509=https\://www.tutorialspoint.com/restful/restful_addressing.htm
911=130\nhttp\://blog.csdn.net/huangfan322/article/details/46234695
1508=https\://www.tutorialspoint.com/restful/restful_addressing.htm
910=sd mandrill
1507=l\nhttps\://www.tutorialspoint.com/restful/restful_addressing.htm
1506=sd atone
1505=sd attuned
1504=sd slog
1503=aop use cases
1502=l\nhttps\://www.tutorialspoint.com/struts_2/struts_annotations.htm
1501=https\://www.tutorialspoint.com/struts_2/struts_annotations.htm
1500=https\://www.tutorialspoint.com/struts_2/struts_annotations.htm
909=http\://www.bing.com/images/search?q\=prejudice&view\=detailv2&&id\=DA03EC823D59B19294DE7815E97892758279D60C&selectedIndex\=11&ccid\=NE5ZE4NL&simid\=608052145033053498&thid\=OIP.M344e5913834b6fa3b71d46202c41cfc7o0&ajaxhist\=0
908=l\nhttp\://www.functionaljava.org/examples-java8.html
907=why itis calle d callback method call back function?
906=l\nhttps\://docs.oracle.com/javase/tutorial/java/generics/types.html
905=30\nhttps\://docs.oracle.com/javase/tutorial/java/generics/why.html
904=l\nhttps\://docs.oracle.com/javase/tutorial/java/generics/
903=how to reverse a string
902=When do you use an abstract class and when do you use an interface
901=When do you use an abstract class and when do you use an interface - See more at\: http\://noop.nl/2009/01/100-interview-questions-for-software-developers.html\#sthash.crkuR1cy.dpuf
900=differences between object-oriented design and component-based design
299=Rush hour 3 
298=rushhour 
297=if i change all nouns to everything then i will be come so smart instead of stupid
296=noun\nwhy \ni need to know why behind it and that is all i need to know\nwhat and why\n\nhow to know whyu\nwhat does it give you everything gives you everything
295=http\://www.wikihow.com/Be-Funny
294=https\://msdn.microsoft.com/en-us/library/ee658124.aspx
293=https\://en.wikipedia.org/wiki/GRASP_(object-oriented_design)
292=https\://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
291=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterStandardsBIG.jpg
290=http\://diply.com/interesting-things/20-conversations-with-siri-that-are-absolutely-hilarious/32849/3
289=\rspache spark user cases\=http\://hortonworks.com/apache/spark/\#section_2
288=apache sarpk tutorila user\=\=http\://hortonworks.com/apache/spark/\#section_2
287=\rideas and possibilities\n ufgt \r\n\r\nGood Morning C1 world, Fri, Sep 9, 2016 at 10\:29 am\r\nin the end there is nothing in the beginning therei s nothing how ot process all yt eh ieas as so possible and because there are so many ideas there \r\n\r\n\r\n
286=ache spark user cases\=http\://hortonworks.com/apache/spark/\#section_2
285=Lego batman 
284=music
283=getting started with mongodb\=https\://code.tutsplus.com/tutorials/getting-started-with-mongodb-part-1--net-22879
282=mv bson
281=mongodb tutorial\=http\://www.mkyong.com/tutorials/java-mongodb-tutorials/
280=elasticsearch\=http\://localhost\:9200/_plugin/head/
279=rushhour 
278=music
277=http\://lifehacker.com/what-i-wish-i-knew-when-i-started-my-career-as-a-softwa-1681002791
276=http\://lifehacker.com/what-i-wish-i-knew-when-i-started-my-career-as-a-softwa-1681002791
275=blockingqueuee and you\=http\://www.javalobby.org/java/forums/t16278.html
274=http\://blog.takipi.com/the-top-100-java-libraries-in-2016-after-analyzing-47251-dependencies/
273=http\://blog.takipi.com/the-top-100-java-libraries-in-2016-after-analyzing-47251-dependencies/
272=top 100 java libraries java developers should know must know 
271=http\://zeroturnaround.com/wp-content/uploads/2016/05/Java-8-Streams-cheat-sheet-by-RebelLabs.png
270=Java 8 stream cheat sheet 
269=In the Stone Age \nUp to this point, the production/consumption model had to be performed using the low-level Object.wait() , Object.notify() constructs which essentially provides a way for one thread to notify another thread that it is done doing some work. Code using wait/notify is usually ugly, and unintuitive, so I'd rather not spend time explaining it... instead you can see some examples here\: http\://java.sun.com/docs/books/tutorial/essential/threads/waitAndNotify.html \n
268=Stitches 
267=Rush hour 2 
266=c1comehere fld 
265=onenote 
264=onenote 
263=onetoone fld 
262=solr tutorial Apache Solr Tutorial for Beginners\=https\://examples.javacodegeeks.com/enterprise-java/apache-solr/apache-solr-tutorial-beginners/
261=Solr+Hadoop Big Data Love\=https\://dzone.com/articles/solr-hadoop-big-data-love
260=Solr + Hadoop Big Data Love\=https\://dzone.com/articles/solr-hadoop-big-data-love
259=solr 
258=solr start 
257=http\://stackoverflow.com/questions/16820336/what-is-saas-paas-and-iaas-with-examples
256=http\://www.aosabook.org/en/distsys.html
255=http\://www.theserverside.com/news/1363681/Scaling-Your-Java-EE-Applications
254=http\://www.fromdev.com/2013/07/architect-interview-questions-and-answers.html
253=bi high performance scalable enterprise solutions java web application 
252=bi high performance scalable enterprise solutions java web application 
251=bi high performance scalable enterprise solutions java
250=Rush hour 3 
249=http\://thumbpress.com/20-mind-blowing-facts-you-probably-didnt-know/
248=http\://blog.teamtreehouse.com/what-makes-a-great-programmer
247=http\://blog.teamtreehouse.com/what-makes-a-great-programmer
246=https\://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard.pdf
245=Intellij shortcut 
244=http\://www.rgrjr.com/emacs/emacs_cheat.html
243=https\://spin.atomicobject.com/2016/04/19/vim-commands-cheat-sheet/
242=http\://career.guru99.com/top-100-networking-interview-questions-answers/
241=http\://career.guru99.com/shell-scripting-interview-questions/
240=http\://career.guru99.com/top-25-microsoft-excel-interview-questions/
239=http\://career.guru99.com/top-35-seo-interview-questions/
238=http\://career.guru99.com/top-50-linux-interview-questions/
237=https\://blog.jetbrains.com/idea/2015/10/intellij-idea-tips-and-tricks/
236=http\://www.programcreek.com/2011/08/the-most-widely-used-java-apis/
235=http\://career.guru99.com/top-16-tomcat-interview-questions/
234=http\://www.tutorialspoint.com/maven/maven_interview_questions.htm
233=http\://career.guru99.com/top-25-interview-questions-for-game-developer/
232=https\://www.toptal.com/ios/interview-questions
231=http\://www.seleniumguide.com/
230=http\://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important
229=si blolt
228=sd bolt
227=https\://www.bing.com/images/search?q\=mastery&view\=detailv2&id\=26E6CA6064FEA9C974EC01BFAA2EF4F7BC148F0C&selectedindex\=14&ccid\=7gVCKHVc&simid\=607997371280458346&thid\=OIP.Mee054228755c92668e7f0788f88c8081o0&mode\=overlay&first\=1
226=https\://www.bing.com/images/search?q\=mastery&view\=detailv2&&id\=E40B66EA017ED040859FB6BC16DA21BD6A21ECBD&selectedIndex\=0&ccid\=DPoCxpiM&simid\=608002778646252203&thid\=OIP.M0cfa02c6988c0fa26aff8db37f6521b0H0&ajaxhist\=0
225=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=E9D259A9CDB1348F492992AB404386BDAA8C6A06&selectedindex\=96&ccid\=dL8B%2BmE7&simid\=608007490222360775&thid\=OIP.M74bf01fa613b7531690e9bd50f35b25bH0&mode\=overlay&first\=1
224=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=745ADA47C330C95D9725CE0A37A2CE70648CE5E1&selectedindex\=62&ccid\=GtQIV8Em&simid\=608018901954724195&thid\=OIP.M1ad40857c12608cb26286cc523bab28aH0&mode\=overlay&first\=1
223=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=948AC5A61F176E3B691B2B9A9A323F3A6306AD50&selectedindex\=10&ccid\=oRNtaLF%2B&simid\=608054408449755951&thid\=OIP.Ma1136d68b17edf6e2f743c3c628fd70fo0&mode\=overlay&first\=1
222=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=81CE9BAE9AE1E751F1F24A0257A4BD40DA81A711&selectedindex\=9&ccid\=yvrrlkzS&simid\=608045500683650954&thid\=OIP.Mcafaeb964cd2db595bf932a69010f3bdo0&mode\=overlay&first\=1
221=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=02B5D9756FB28C7278499AF5E58CB20988925A4A&selectedindex\=1&ccid\=HoDoPdGe&simid\=608005690637682753&thid\=OIP.M1e80e83dd19e250bfd54864b57fd4be1H0&mode\=overlay&first\=1
220=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&&id\=948AC5A61F176E3B691B9ADD3AE1D78984AE943C&selectedIndex\=0&ccid\=gqltI97j&simid\=608019954222039523&thid\=OIP.M82a96d23dee3fc8e763143bfa487ccbbo0&ajaxhist\=0
219=https\://en.wikipedia.org/wiki/AFI%27s_100_Years...100_Movie_Quotes
218=http\://www.finestquotes.com/select_quote-category-Zen-page-0.htm
217=http\://www.oodesign.com/
216=Rush hour 2
215=Rush hour 2 
214=su prick
213=si cactus
212=sd cactus
211=http\://www.thetoptens.com/best-insults/
210=i check iwht supper mand and he is not interested in blogging
209=http\://winterbe.com/posts/2015/04/07/java8-concurrency-tutorial-thread-executor-examples/
208=http\://solr-vs-elasticsearch.com/
207=http\://solr-vs-elasticsearch.com/
206=https\://facebook.github.io/react/
205=http\://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important
204=devcenter
203=devcenter
202=http\://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important
201=devcenter
200=http\://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important
1499=https\://www.tutorialspoint.com/struts_2/struts_exception_handling.htm
1498=https\://www.tutorialspoint.com/struts_2/struts_exception_handling.htm
1497=l\nhttps\://www.tutorialspoint.com/struts_2/struts_exception_handling.htm
1496=Allrecursive java
1495=https\://www.tutorialspoint.com/hibernate/hibernate_native_sql.htm
1494=sd laggy
1493=https\://www.tutorialspoint.com/spring/spring_injecting_collection.htm
1492=l\nhttps\://www.tutorialspoint.com/spring/spring_injecting_collection.htm
1491=https\://www.tutorialspoint.com/spring/spring_injecting_collection.htm
1490=http\://www.fromdev.com/2008/05/java-collections-questions.html
899=sd divvy
898=What is backward tracing vs. forward tracing
897=60\nhttps\://www.tutorialspoint.com/struts_2/struts_result_types.htm
896=l\nhttps\://www.tutorialspoint.com/nodejs/nodejs_utility_module.htm
895=30\nhttps\://www.tutorialspoint.com/spring/spring_transaction_management.htm
2575=k
894=30\nhttp\://www.mkyong.com/tag/spring-boot/
2574=passenger let her go solo\=http\://music.baidu.com/mv/124542299/?type\=mv
893=120\nhttps\://www.tutorialspoint.com/hibernate/hibernate_persistent_classes.htm
2573=k
892=60\nhttp\://docs.scala-lang.org/overviews/collections/introduction.html
1489=http\://www.fromdev.com/2008/05/java-collections-questions.html
2572=friends season 5 episode 1 china\=https\://ok.ru/video/46373603948
891=l\nhttp\://docs.scala-lang.org/overviews/?_ga\=1.32249278.1253417003.1481852729
1488=http\://www.fromdev.com/2008/05/java-collections-questions.html
2571=rush hour 
890=180\nhttp\://www.scala-lang.org/documentation/getting-started.html
1487=15\nhttp\://www.fromdev.com/2008/05/java-collections-questions.html
2570=rushhour 
1486=l\nhttps\://www.tutorialspoint.com/struts_2/struts_sending_email.htm
1485=https\://www.tutorialspoint.com/struts_2/struts_sending_email.htm
1484=https\://www.tutorialspoint.com/struts_2/struts_sending_email.htm
1483=https\://www.tutorialspoint.com/maven/maven_manage_dependencies.htm
1482=https\://visualvm.java.net/gettingstarted.html
1481=https\://visualvm.java.net/gettingstarted.html
1480=l\nhttps\://visualvm.java.net/gettingstarted.html
889=30\nhttps\://www.tutorialspoint.com/struts_2/struts_actions.htm
2569=--------------Todo list--------------\nElasticsearch learning\nDo what can earn money\nEhhaubince vocabulary software\nsimplify things\nnew ideas\nLearn new things\nFilter\n1. Formatter\njson or something is good \n2. connector\n3. ui reformating\n3. processing\n4. player\nshow/add\ndiary\nvocabulary\nreminder\nplayer list(kpke, song, documentation)\nvoice\ntodo\n\n\n\n2. Add category     \nWhat todo review the list? \nBy category? Dictionary, .....     \nWhat do i wna tto automated? \nJoke     \nWhat todo autoschedule the list? \nInstant, like rush hour script;Most favoriate; \nOver and over again; \nLike documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? \nEhhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n\n3. Tag functionality      \nKey word indexing in solr \n\n4. Integrating rest elastic serach in my applicaion \n\n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
888=60\nhttps\://www.tutorialspoint.com/hibernate/hibernate_criteria_queries.htm
2568=k
887=189\nhttp\://www.w3schools.com/jquery/jquery_dimensions.asp
2567=--------------Todo list--------------\n\nDo what can earn money\nEhhaubince vocabulary software\nsimplify things\nnew ideas\nLearn new things\nFilter\n1. Formatter\njson or something is good \n2. connector\n3. ui reformating\n3. processing\n4. player\nshow/add\ndiary\nvocabulary\nreminder\nplayer list(kpke, song, documentation)\nvoice\ntodo\n\n\n\n2. Add category     \nWhat todo review the list? \nBy category? Dictionary, .....     \nWhat do i wna tto automated? \nJoke     \nWhat todo autoschedule the list? \nInstant, like rush hour script;Most favoriate; \nOver and over again; \nLike documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? \nEhhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n\n3. Tag functionality      \nKey word indexing in solr \n\n4. Integrating rest elastic serach in my applicaion \n\n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
886=60\nhttps\://www.tutorialspoint.com/hibernate/hibernate_persistent_classes.htm
2566=--------------Todo list--------------\n\n\nEhhaubince vocabulary software\nsimplify things\nnew ideas\nLearn new things\nFilter\n1. Formatter\njson or something is good \n2. connector\n3. ui reformating\n3. processing\n4. player\nshow/add\ndiary\nvocabulary\nreminder\nplayer list(kpke, song, documentation)\nvoice\ntodo\n\n\n\n2. Add category     \nWhat todo review the list? \nBy category? Dictionary, .....     \nWhat do i wna tto automated? \nJoke     \nWhat todo autoschedule the list? \nInstant, like rush hour script;Most favoriate; \nOver and over again; \nLike documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? \nEhhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n\n3. Tag functionality      \nKey word indexing in solr \n\n4. Integrating rest elastic serach in my applicaion \n\n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
885=60\nhttps\://www.tutorialspoint.com/struts_2/struts_type_conversion.htm
2565=--------------Todo list--------------\n\n\nsimplify things\nnew ideas\nLearn new things\nFilter\n1. Formatter\njson or something is good \n2. connector\n3. ui reformating\n3. processing\n4. player\nshow/add\ndiary\nvocabulary\nreminder\nplayer list(kpke, song, documentation)\nvoice\ntodo\n\n\n\n2. Add category     \nWhat todo review the list? \nBy category? Dictionary, .....     \nWhat do i wna tto automated? \nJoke     \nWhat todo autoschedule the list? \nInstant, like rush hour script;Most favoriate; \nOver and over again; \nLike documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? \nEhhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n\n3. Tag functionality      \nKey word indexing in solr \n\n4. Integrating rest elastic serach in my applicaion \n\n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
884=120\nhttps\://www.tutorialspoint.com/hibernate/hibernate_mapping_types.htm
2564=k
883=60\nhttp\://www.thetoptens.com/best-insults/
2563=let her go\=http\://v.yinyuetai.com/video/470096
882=60\nhttps\://www.tutorialspoint.com/apache_kafka/apache_kafka_introduction.htm
1479=https\://www.tutorialspoint.com/design_pattern/template_pattern.htm
2562=--------------Todo list--------------\n1. Formatter\njson or something is good \n2. connector\n3. ui reformating\n3. processing\n4. player\nshow/add\ndiary\nvocabulary\nreminder\nplayer list(kpke, song, documentation)\nvoice\ntodo\n\n\n\n2. Add category     \nWhat todo review the list? \nBy category? Dictionary, .....     \nWhat do i wna tto automated? \nJoke     \nWhat todo autoschedule the list? \nInstant, like rush hour script;Most favoriate; \nOver and over again; \nLike documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? \nEhhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n\n3. Tag functionality      \nKey word indexing in solr \n\n4. Integrating rest elastic serach in my applicaion \n\n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
881=sd ammunition
1478=https\://www.tutorialspoint.com/design_pattern/template_pattern.htm
2561=--------------Todo list--------------\n1. Formatter\njson or something is good \n2. connector\n3. processing\n4. player\nshow/add\ndiary\nvocabulary\nreminder\nplayer list(kpke, song, documentation)\nvoice\ntodo\n\n\n\n2. Add category     \nWhat todo review the list? \nBy category? Dictionary, .....     \nWhat do i wna tto automated? \nJoke     \nWhat todo autoschedule the list? \nInstant, like rush hour script;Most favoriate; \nOver and over again; \nLike documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? \nEhhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n\n3. Tag functionality      \nKey word indexing in solr \n\n4. Integrating rest elastic serach in my applicaion \n\n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
880=sd incendiary
1477=l\nhttps\://www.tutorialspoint.com/design_pattern/template_pattern.htm
2560=--------------Todo list--------------\n1. Formatter\njson or something is good \n2. connector\n3. processing\n\n\n2. Add category     \nWhat todo review the list? \nBy category? Dictionary, .....     \nWhat do i wna tto automated? \nJoke     \nWhat todo autoschedule the list? \nInstant, like rush hour script;Most favoriate; \nOver and over again; \nLike documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? \nEhhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n\n3. Tag functionality      \nKey word indexing in solr \n\n4. Integrating rest elastic serach in my applicaion \n\n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
1476=stupied jokes ever
1475=dumbest jokes
1474=intellij actions
1473=scala tutorial\=https\://www.quora.com/What-would-be-best-site-book-tutorial-for-a-Scala-beginner
1472=http\://scalatutorials.com/tour/
1471=http\://scalatutorials.com/tour/
1470=l\nhttp\://scalatutorials.com/tour/
879=30\nhttp\://blog.flux7.com/blogs/docker/docker-tutorial-series-part-1-an-introduction
2559=--------------Todo list--------------\n\n1. Formatter\njson or something is good \n2. connector\n3. processing\n\n\n2. Add category     \nWhat todo review the list? \nBy category? Dictionary, .....     \nWhat do i wna tto automated? \nJoke     \nWhat todo autoschedule the list? \nInstant, like rush hour script;Most favoriate; \nOver and over again; \nLike documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? \nEhhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n\n3. Tag functionality      \nKey word indexing in solr \n\n4. Integrating rest elastic serach in my applicaion \n\n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
878=120\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-exception-handling-example/
2558=k
877=error meessage customization error handling
2557=k
876=180\nhttps\://www.tutorialspoint.com/design_pattern/filter_pattern.htm
2556=--------------Todo list--------------\n2. Add category     \nWhat todo review the list? By category? Dictionary, .....     \nWhat do i wna tto automated? Joke     \nWhat todo autoschedule the list? Instant, like rush hour script;Most favoriate; Over and over again; Like documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? Ehhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n3. Tag functionality      \nKey word indexing in solr \n4. Integrating rest elastic serach in my applicaion \n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
875=Can you name different measures to guarantee correctness of data entry?
2555=--------------Todo list--------------\n2. Add category     \nWhat todo review the list? By category? Dictionary, .....     \nWhat do i wna tto automated? Joke     \nWhat todo autoschedule the list? Instant, like rush hour script; Most favoriate; Over and over again; Like documentation; Ehhabince; One day by one day; Like daily task;      \nWhat to do to stop over review? Ehhabince; Triadge      \nWhat amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?           \n3. Tag functionality      \nKey word indexing in solr \n4. Integrating rest elastic serach in my applicaion \n5. Revisite the wthing you riwte, talk back tome    \na1. what is the frequencey     \nb1. what to do to optimize the efficientcy     \n\nWhat todo autoschedule the list? \nInstant, like rush hour script; \nMost favoriate; \nOver and over again; \nLike documentation; Ehhabince; \nOne day by one day; \nLike daily task;      \nWhat to do to stop over review? Ehhabince; \nTriadge      What amount do you want  ?     \nWhat frequency do you want it?      \nWhat time do you want it ?
874=Traveling Salesman Problem
2554=elasticsearch101\=http\://joelabrahamsson.com/elasticsearch-101/
873=When do you use polymorphism and when do you use delegates?
2553=elasticsearch 
872=sd stupor
1469=l\nhttp\://www.scala-lang.org/docu/files/ScalaByExample.pdf
2552=a\nAngular
871=react js tutorial
1468=http\://www.scala-lang.org/docu/files/ScalaByExample.pdf
2551=k
870=180\nhttps\://www.tutorialspoint.com/nodejs/nodejs_file_system.htm
1467=http\://www.scala-lang.org/docu/files/ScalaByExample.pdf
2550=a\nAngular
1466=http\://twitter.github.io/effectivescala/
1465=http\://twitter.github.io/effectivescala/
1464=l\nhttp\://twitter.github.io/effectivescala/
1463=https\://www.tutorialspoint.com/maven/maven_build_test_project.htm
1462=non-daemon threads
1461=java class design responsibilities
1460=hibernate vs jdbc
869=caching
2549=a\nAngular
868=sd kino
2548=a\nAngular
867=what is spring boot
2547=a\nAngular
866=1\ngod
2546=a\nAngular
865=how are you
2545=a\nAngular
864=how are you
2544=a\nAngular
863=how are you
2543=k
862=Explain System.out.println() in detail
1459=sd dystopian
2542=a\nAngular
861=http\://stackoverflow.com/questions/3035601/performance-profiler-for-a-java-application
1458=l\nhttp\://java-questions.com/garbagecollection-interview-questions.html
2541=a\nAngular
860=sd psychopathy
1457=http\://java-questions.com/garbagecollection-interview-questions.html
2540=a\nAngular
1456=http\://java-questions.com/garbagecollection-interview-questions.html
1455=http\://javarevisited.blogspot.com/2012/10/10-garbage-collection-interview-question-answer.html
1454=http\://javarevisited.blogspot.com/2012/10/10-garbage-collection-interview-question-answer.html
1453=l\nhttp\://javarevisited.blogspot.com/2012/10/10-garbage-collection-interview-question-answer.html
1452=l\nhttp\://javarevisited.blogspot.com/2012/10/10-garbage-collection-interview-question-answer.html
1451=intellij shortcuts you don't know
1450=https\://www.tutorialspoint.com/maven/maven_creating_project.htm
859=sd callous
2539=a\nAngular
858=180\nhttp\://www.w3schools.com/jquery/jquery_hide_show.asp
2538=asf\nAngular\nInterview\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
857=l\nhttps\://www.tutorialspoint.com/struts_2/struts_actions.htm
2537=asf\nAngular\nInterview\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
856=l\nhttps\://www.tutorialspoint.com/hibernate/hibernate_interceptors.htm
2536=asf\nAngular\nInterview\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
855=l\nhttp\://tutorials.jenkov.com/software-architecture/ria-architecture.html
2535=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
854=Can you name some differences between DSDM, Prince2 and Scrum?
2534=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
853=sd prejudice
2533=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
852=l\nhttps\://www.tutorialspoint.com/nodejs/nodejs_global_objects.htm
1449=Software configuration management
2532=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
851=https\://images.search.yahoo.com/yhs/search;_ylt\=AwrTcdvKzz9YID4ANy8nnIlQ?p\=critical+thinking+vs+non&fr\=yhs-mozilla-001&fr2\=piv-web&hspart\=mozilla&hsimp\=yhs-001\#id\=9&iurl\=https%3A%2F%2Fvigornotrigor.files.wordpress.com%2F2014%2F08%2Fkindsofthinking.jpg&action\=click
1448=ALM
2531=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
850=sd Yank
1447=Karma
2530=devcenter 
1446=spring batch
1445=performance tuning
1444=Apache cxf
1443=Apache MQ
1442=Tibco EMS
1441=bosh
1440=cloud foundry
849=Lombok
2529=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
848=l\nhttps\://www.mapr.com/products/mapr-sandbox-hadoop/tutorials/spark-tutorial
2528=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
847=l\nhttps\://www.tutorialspoint.com/apache_spark/apache_spark_core_programming.htm
2527=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
846=sd blow up
2526=asf\nAngular\nhttp\://career.guru99.com/top-25-angular-js-interview-questions/
845=java gabage collector
2525=k
844=sd gulp
2524=k
843=nodsql comparisons
2523=i want the good feeling and it shoulbe maxiimize the ultimate and best feeling is the best and the sacrifice for others i wanoutl ruather to do it for the ultimate pruspeo tther there is nothing that can stop me form doing this, i live for you. \n\ni love ifor you. \n\nfo ryou \n\nthe sky is the limit and the sky will return the energy to back to me will it? yes, ast least it wil emrmember me it all changes the the good thing and we souhsoudl know. 
842=l\nhttps\://www.dezyre.com/hadoop-tutorial/apache-hive-tutorial-tables
1439=grunt
2522=k
841=FLUSH PRIVILEGES;\n
1438=gulp
2521=git cherry pick
840=sd scaffold
1437=jaxb vs jaxp
2520=k
1436=amazon web service migration
1435=cloud principles
1434=PKI
1433=JCE
1432=middleware
1431=architecture java
1430=service oriented architecture
839=l\nhttps\://www.tutorialspoint.com/ruby-on-rails/rails-active-records.htm
2519=k
838=l\nhttps\://www.tutorialspoint.com/nodejs/nodejs_buffers.htm
2518=http\://www.java2novice.com/java-sorting-algorithms/quick-sort/
837=l\nhttp\://www.javatpoint.com/history-of-java
2517=http\://www.java2novice.com/java-sorting-algorithms/merge-sort/
836=sd sprinter
2516=http\://www.java2novice.com/java-sorting-algorithms/
835=sd overdrive
2515=https\://www.careercup.com/question?id\=14859673
834=sd carryover
2514=https\://www.careercup.com/question?id\=5655380106412032
833=sd hypertrophy
2513=https\://www.careercup.com/questionthread?id\=22287
832=java 8 stream fuctions
1429=https\://www.tutorialspoint.com/struts_2/struts_configuration.htm
2512=http\://www.cs.cmu.edu/~luluo/Courses/18540PhDreport.pdf
831=java 8 stream fuctions
1428=SpEL
2511=k
830=business component developer
1427=http\://searchsecurity.techtarget.com/answer/What-causes-buffer-overflows-and-memory-leaks-in-a-Web-application
2510=http\://www.programcreek.com/2013/01/construct-binary-tree-from-inorder-and-postorder-traversal/
1426=http\://stackoverflow.com/questions/3145989/java-application-memory-usage
1425=how to read a book filetype\:pdf
1424=http\://www.wikihow.com/Improve-Your-Reading-Skills
1423=http\://www.wikihow.com/Improve-Your-Reading-Skills
1422=l\nhttp\://www.wikihow.com/Improve-Your-Reading-Skills
1421=l\nhttps\://www.tutorialspoint.com/maven/maven_external_dependencies.htm
1420=https\://www.tutorialspoint.com/design_pattern/strategy_pattern.htm
829=Flume
2509=http\://www.programcreek.com/2012/12/leetcode-solution-of-iterative-binary-tree-postorder-traversal-in-java/
828=60\nhttp\://www.w3schools.com/jquery/jquery_chaining.asp
2508=http\://www.programcreek.com/2012/12/leetcode-solution-for-binary-tree-preorder-traversal-in-java/
827=sd napalm
2507=http\://www.programcreek.com/2014/04/leetcode-binary-tree-level-order-traversal-ii-java/
826=sd corollary
2506=http\://www.programcreek.com/2014/04/leetcode-binary-tree-level-order-traversal-java/
825=https\://git-scm.com/book/en/v2/Git-Branching-Summary
2505=http\://stackoverflow.com/questions/6957631/sort-java-collection
824=EJB tutorial
2504=http\://www.javapractices.com/topic/TopicAction.do?Id\=10
823=Tapestry
2503=http\://stackoverflow.com/questions/10117136/traversing-a-binary-tree-recursively
822=sd Percolation
1419=https\://www.tutorialspoint.com/spring/spring_beans_autowiring.htm
2502=https\://careercup.com/question?id\=5148659814498304
821=l\nhttp\://career.guru99.com/top-25-jms-java-message-service-interview-questions/
1418=l\nhttp\://www.reachoutandread.org/resource-center/literacy-materials/reading-tips/
2501=https\://careercup.com/page?pid\=amazon-interview-questions
820=l\nhttp\://www.careerride.com/performance-testing-interview-questions.aspx
1417=l\nhttp\://www.adlaitoday.org/ReadingTips_Students.pdf
2500=https\://careercup.com/question?id\=5745616513662976
1416=http\://www.adlaitoday.org/ReadingTips_Students.pdf
1415=http\://www.adlaitoday.org/ReadingTips_Students.pdf
1414=
1413=http\://www.fromdev.com/2010/12/interview-questions-hadoop-mapreduce.html
1412=http\://www.fromdev.com/2010/12/interview-questions-hadoop-mapreduce.html
1411=l\nhttp\://www.fromdev.com/2010/12/interview-questions-hadoop-mapreduce.html
1410=l\nhttp\://www.short-funny.com/funniest-jokes-4.php
819=they want me to wro ko n it myself and not j ramdom develoepresr
818=sd neurotic
817=sd psychopathic
816=sd neg
815=l\nhttp\://www.dailywritingtips.com/100-mostly-small-but-expressive-interjections/
814=l\nhttp\://www.mkyong.com/webservices/jax-rs/file-upload-example-in-jersey/
813=divergent thinking
812=convergent thinking
1409=http\://www.bigdataanalyst.in/spark-interview-questions/
811=https\://www.tutorialspoint.com/nodejs/nodejs_file_system.htm
1408=l\nhttp\://www.bigdataanalyst.in/spark-interview-questions/
810=https\://lunarscience.nasa.gov/articles/beware-of-images/
1407=l\nhttps\://www.bing.com/images/search?q\=mongodb+vs+cassandra&view\=detailv2&&id\=9111D15699865D58061FA517299B2773C333791A&selectedIndex\=1&ccid\=ZaUDq%2bnt&simid\=608022690157954986&thid\=OIP.M65a503abe9ed873652d377dc8915d313o0&ajaxhist\=0
1406=l\nhttps\://blog.udemy.com/scala-tutorial-getting-started-with-scala/
1405=l\nhttps\://www.tutorialspoint.com/scala/scala_overview.htm
1404=l\nhttp\://javasearch.buggybread.com/InterviewQuestions/questionSearch.php?searchOption\=label&keyword\=
1403=https\://docs.oracle.com/javase/tutorial/java/generics/rawTypes.html
1402=sd replenishment
1401=gabage collector interview questions
1400=http\://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-gs-prerequisites.html
809=Resume Real Jan 2nd\=C\:\\Users\\SiyuanZeng's\\Desktop\\application\\Job hunting\\Resume\\Latest\\Real January
808=why log4j
807=shy is log4j
806=28) If you could only have one meal for the rest of your life, what would it be?\n
805=dml OPERATION
804=DDL operation
803=l\nhttps\://www.tutorialspoint.com/hibernate/hibernate_interview_questions.htm
802=sd Freudian
801=sd engorged
800=l\nhttp\://www.tutorialspoint.com/restful/restful_jax_rs.htm
9=history
8=history
7=history
6=bi java swing keyevent key stroke
5=bi java swing keybinding
4=bi contral and up key java swing
3=bi UP key java swing
2=bi hello
1=bi up key keyboard code
0=bi hello
